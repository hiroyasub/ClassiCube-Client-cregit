begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|oyasunadev
operator|.
name|mcraft
operator|.
name|client
operator|.
name|core
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|Minecraft
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|MinecraftApplet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Created with IntelliJ IDEA.  * User: Oliver Yasuna  * Date: 9/30/12  * Time: 7:16 PM  */
end_comment

begin_comment
comment|/**  * Run Minecraft Classic standalone version.  */
end_comment

begin_class
specifier|public
class|class
name|MinecraftStandalone
block|{
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|MinecraftStandalone
name|minecraftStandalone
init|=
operator|new
name|MinecraftStandalone
argument_list|()
decl_stmt|;
name|minecraftStandalone
operator|.
name|startMinecraft
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * Default constructor. 	 */
specifier|public
name|MinecraftStandalone
parameter_list|()
block|{
block|}
comment|/** 	 * Start Minecraft Classic. 	 */
specifier|public
name|void
name|startMinecraft
parameter_list|()
block|{
name|MinecraftFrame
name|minecraftFrame
init|=
operator|new
name|MinecraftFrame
argument_list|()
decl_stmt|;
name|minecraftFrame
operator|.
name|startMinecraft
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * A class representing the Minecraft Classic game. 	 */
specifier|private
class|class
name|MinecraftFrame
extends|extends
name|JFrame
block|{
comment|/** 		 * Default constructor. 		 */
specifier|public
name|MinecraftFrame
parameter_list|()
block|{
name|setSize
argument_list|(
literal|854
argument_list|,
literal|480
argument_list|)
expr_stmt|;
comment|//setResizable(false);
name|setDefaultCloseOperation
argument_list|(
name|JFrame
operator|.
name|EXIT_ON_CLOSE
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|addWindowListener
argument_list|(
operator|new
name|WindowAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|windowClosing
parameter_list|(
name|WindowEvent
name|e
parameter_list|)
block|{
name|minecraft
operator|.
name|running
operator|=
literal|false
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/** 		 * Minecraft reference. 		 */
specifier|private
name|Minecraft
name|minecraft
decl_stmt|;
comment|/** 		 * Start Minecraft Classic. 		 */
specifier|public
name|void
name|startMinecraft
parameter_list|()
block|{
name|MCraftApplet
name|applet
init|=
operator|new
name|MCraftApplet
argument_list|()
decl_stmt|;
specifier|final
name|MinecraftCanvas
name|canvas
init|=
operator|new
name|MinecraftCanvas
argument_list|()
decl_stmt|;
name|minecraft
operator|=
operator|new
name|Minecraft
argument_list|(
name|canvas
argument_list|,
name|applet
argument_list|,
name|getWidth
argument_list|()
argument_list|,
name|getHeight
argument_list|()
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|canvas
operator|.
name|setMinecraft
argument_list|(
name|minecraft
argument_list|)
expr_stmt|;
name|canvas
operator|.
name|setSize
argument_list|(
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|canvas
argument_list|,
literal|"Center"
argument_list|)
expr_stmt|;
name|canvas
operator|.
name|setFocusable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|pack
argument_list|()
expr_stmt|;
name|setLocation
argument_list|(
operator|(
name|Toolkit
operator|.
name|getDefaultToolkit
argument_list|()
operator|.
name|getScreenSize
argument_list|()
operator|.
name|width
operator|-
name|getWidth
argument_list|()
operator|)
operator|/
literal|2
argument_list|,
operator|(
name|Toolkit
operator|.
name|getDefaultToolkit
argument_list|()
operator|.
name|getScreenSize
argument_list|()
operator|.
name|height
operator|-
name|getHeight
argument_list|()
operator|)
operator|/
literal|2
argument_list|)
expr_stmt|;
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
operator|new
name|Thread
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
while|while
condition|(
literal|true
condition|)
block|{
if|if
condition|(
operator|!
name|minecraft
operator|.
name|running
condition|)
block|{
name|minecraft
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|dispose
argument_list|()
expr_stmt|;
block|}
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
name|boolean
name|pass
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|pass
condition|)
block|{
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|minecraft
operator|.
name|running
condition|)
block|{
name|pass
operator|=
literal|true
expr_stmt|;
block|}
block|}
comment|// DO SHIT...?
block|}
comment|/** 		 * Override the MinecraftApplet class because we need to fake the Document Base and Code Base. 		 */
specifier|private
class|class
name|MCraftApplet
extends|extends
name|MinecraftApplet
block|{
comment|/** 			 * Default constructor. 			 */
specifier|public
name|MCraftApplet
parameter_list|()
block|{
name|parameters
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
comment|/** 			 * Fake the Document Base. 			 * 			 * @return new URL("http://minecraft.net:80/play.jsp") 			 */
annotation|@
name|Override
specifier|public
name|URL
name|getDocumentBase
parameter_list|()
block|{
try|try
block|{
return|return
operator|new
name|URL
argument_list|(
literal|"http://minecraft.net:80/play.jsp"
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
comment|/** 			 * Fake the Code Base. 			 * 			 * @return new URL("http://minecraft.net:80/") 			 */
annotation|@
name|Override
specifier|public
name|URL
name|getCodeBase
parameter_list|()
block|{
try|try
block|{
return|return
operator|new
name|URL
argument_list|(
literal|"http://minecraft.net:80/"
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
comment|/** 			 * Return our own parameters variable. 			 * 			 * @param name 			 * @return 			 */
annotation|@
name|Override
specifier|public
name|String
name|getParameter
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|parameters
operator|.
name|get
argument_list|(
name|name
argument_list|)
return|;
block|}
comment|/** 			 * Use our own parameters map. 			 */
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
decl_stmt|;
block|}
comment|/** 		 * A canvas for the Minecraft thread. 		 */
specifier|private
class|class
name|MinecraftCanvas
extends|extends
name|Canvas
block|{
comment|/** 			 * Default constructor. 			 */
specifier|public
name|MinecraftCanvas
parameter_list|()
block|{
block|}
comment|/** 			 * Start the thread. 			 */
annotation|@
name|Override
specifier|public
specifier|synchronized
name|void
name|addNotify
parameter_list|()
block|{
name|super
operator|.
name|addNotify
argument_list|()
expr_stmt|;
name|startThread
argument_list|()
expr_stmt|;
block|}
comment|/** 			 * Stop the thread. 			 */
annotation|@
name|Override
specifier|public
specifier|synchronized
name|void
name|removeNotify
parameter_list|()
block|{
name|stopThread
argument_list|()
expr_stmt|;
name|super
operator|.
name|removeNotify
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
comment|/** 			 * The Minecraft variable. 			 */
specifier|private
name|Minecraft
name|minecraft
decl_stmt|;
comment|/** 			 * The Minecraft thread. 			 */
specifier|private
name|Thread
name|thread
decl_stmt|;
comment|/** 			 * Set the "minecraft" variable. 			 * 			 * @param minecraft The new Minecraft variable. 			 */
specifier|public
name|void
name|setMinecraft
parameter_list|(
name|Minecraft
name|minecraft
parameter_list|)
block|{
name|this
operator|.
name|minecraft
operator|=
name|minecraft
expr_stmt|;
block|}
comment|/** 			 * Start the Minecraft client thread. 			 */
specifier|private
specifier|synchronized
name|void
name|startThread
parameter_list|()
block|{
if|if
condition|(
name|thread
operator|==
literal|null
condition|)
block|{
name|thread
operator|=
operator|new
name|Thread
argument_list|(
name|minecraft
argument_list|,
literal|"Client"
argument_list|)
expr_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
comment|/** 			 * Stop the Minecraft client. 			 */
specifier|private
specifier|synchronized
name|void
name|stopThread
parameter_list|()
block|{
if|if
condition|(
name|thread
operator|!=
literal|null
condition|)
block|{
name|minecraft
operator|.
name|running
operator|=
literal|false
expr_stmt|;
try|try
block|{
name|thread
operator|.
name|join
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|minecraft
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
name|thread
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

