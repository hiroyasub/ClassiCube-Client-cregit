begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|net
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|HackState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|Minecraft
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|gui
operator|.
name|HUDScreen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|util
operator|.
name|LogUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|oyasunadev
operator|.
name|mcraft
operator|.
name|client
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStreamWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|GZIPInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|InflaterInputStream
import|;
end_import

begin_class
specifier|public
class|class
name|WOMConfig
block|{
specifier|private
name|boolean
name|enabled
decl_stmt|;
specifier|private
specifier|static
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|serverConfig
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Minecraft
name|minecraft
decl_stmt|;
specifier|public
name|WOMConfig
parameter_list|(
name|Minecraft
name|minecraft
parameter_list|)
block|{
name|this
operator|.
name|minecraft
operator|=
name|minecraft
expr_stmt|;
block|}
specifier|public
name|void
name|readHax
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|motd
parameter_list|)
block|{
name|String
name|joinedString
init|=
operator|(
name|name
operator|+
literal|" "
operator|+
name|motd
operator|)
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
if|if
condition|(
name|joinedString
operator|.
name|contains
argument_list|(
literal|"-hax"
argument_list|)
condition|)
block|{
name|HackState
operator|.
name|setAllDisabled
argument_list|()
expr_stmt|;
block|}
else|else
block|{
comment|// enable all, it's either +hax or nothing at all
name|HackState
operator|.
name|setAllEnabled
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|joinedString
operator|.
name|contains
argument_list|(
literal|"+ophax"
argument_list|)
condition|)
block|{
if|if
condition|(
name|minecraft
operator|.
name|player
operator|.
name|userType
operator|>=
literal|100
condition|)
block|{
name|HackState
operator|.
name|setAllEnabled
argument_list|()
expr_stmt|;
block|}
else|else
block|{
comment|// disable all non op players hax, which can be determined after this
name|HackState
operator|.
name|setAllDisabled
argument_list|()
expr_stmt|;
block|}
block|}
comment|// then we can manually disable others here
if|if
condition|(
name|joinedString
operator|.
name|contains
argument_list|(
literal|"+fly"
argument_list|)
condition|)
block|{
name|HackState
operator|.
name|fly
operator|=
literal|true
expr_stmt|;
block|}
if|else if
condition|(
name|joinedString
operator|.
name|contains
argument_list|(
literal|"-fly"
argument_list|)
condition|)
block|{
name|HackState
operator|.
name|fly
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|joinedString
operator|.
name|contains
argument_list|(
literal|"+noclip"
argument_list|)
condition|)
block|{
name|HackState
operator|.
name|noclip
operator|=
literal|true
expr_stmt|;
block|}
if|else if
condition|(
name|joinedString
operator|.
name|contains
argument_list|(
literal|"-noclip"
argument_list|)
condition|)
block|{
name|HackState
operator|.
name|noclip
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|joinedString
operator|.
name|contains
argument_list|(
literal|"+speed"
argument_list|)
condition|)
block|{
name|HackState
operator|.
name|speed
operator|=
literal|true
expr_stmt|;
block|}
if|else if
condition|(
name|joinedString
operator|.
name|contains
argument_list|(
literal|"-speed"
argument_list|)
condition|)
block|{
name|HackState
operator|.
name|speed
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|joinedString
operator|.
name|contains
argument_list|(
literal|"+respawn"
argument_list|)
condition|)
block|{
name|HackState
operator|.
name|respawn
operator|=
literal|true
expr_stmt|;
block|}
if|else if
condition|(
name|joinedString
operator|.
name|contains
argument_list|(
literal|"-respawn"
argument_list|)
condition|)
block|{
name|HackState
operator|.
name|respawn
operator|=
literal|false
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|readCfg
parameter_list|(
name|String
name|motd
parameter_list|)
block|{
name|int
name|i
init|=
name|motd
operator|.
name|indexOf
argument_list|(
literal|"cfg="
argument_list|)
decl_stmt|;
if|if
condition|(
name|i
operator|>
operator|-
literal|1
condition|)
block|{
name|enabled
operator|=
literal|true
expr_stmt|;
name|String
name|splitlineText
init|=
name|motd
operator|.
name|substring
argument_list|(
name|i
operator|+
literal|4
argument_list|)
operator|.
name|split
argument_list|(
literal|" "
argument_list|)
index|[
literal|0
index|]
decl_stmt|;
name|String
name|url
init|=
literal|"http://"
operator|+
name|splitlineText
operator|.
name|replace
argument_list|(
literal|"$U"
argument_list|,
name|minecraft
operator|.
name|session
operator|.
name|username
argument_list|)
decl_stmt|;
name|LogUtil
operator|.
name|logInfo
argument_list|(
literal|"Fetching config from: "
operator|+
name|url
argument_list|)
expr_stmt|;
name|minecraft
operator|.
name|progressBar
operator|.
name|setText
argument_list|(
literal|"Loading..."
argument_list|)
expr_stmt|;
name|serverConfig
operator|=
name|fetchConfig
argument_list|(
name|url
argument_list|)
expr_stmt|;
if|if
condition|(
name|serverConfig
operator|.
name|containsKey
argument_list|(
literal|"server.detail"
argument_list|)
condition|)
block|{
name|minecraft
operator|.
name|progressBar
operator|.
name|setText
argument_list|(
name|serverConfig
operator|.
name|get
argument_list|(
literal|"server.detail"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|serverConfig
operator|.
name|containsKey
argument_list|(
literal|"server.name"
argument_list|)
condition|)
block|{
name|HUDScreen
operator|.
name|ServerName
operator|=
name|serverConfig
operator|.
name|get
argument_list|(
literal|"server.name"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|serverConfig
operator|.
name|containsKey
argument_list|(
literal|"user.detail"
argument_list|)
condition|)
block|{
name|HUDScreen
operator|.
name|UserDetail
operator|=
name|serverConfig
operator|.
name|get
argument_list|(
literal|"user.detail"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|boolean
name|hasKey
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
name|serverConfig
operator|.
name|containsKey
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
name|String
name|getValue
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
name|serverConfig
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isEnabled
parameter_list|()
block|{
return|return
name|enabled
return|;
block|}
comment|// Download and parse WoM-style config from given URL.
comment|// Logs an error message and returns an empty HashMap on failure.
specifier|private
specifier|static
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|fetchConfig
parameter_list|(
name|String
name|url
parameter_list|)
block|{
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|localHashMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
try|try
block|{
name|URLConnection
name|urlConnection
init|=
name|makeConnection
argument_list|(
name|url
argument_list|,
literal|""
argument_list|)
decl_stmt|;
try|try
init|(
name|BufferedReader
name|bufferedReader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|getInputStream
argument_list|(
name|urlConnection
argument_list|)
argument_list|)
argument_list|)
init|)
block|{
name|String
name|str
decl_stmt|;
while|while
condition|(
operator|(
name|str
operator|=
name|bufferedReader
operator|.
name|readLine
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|String
index|[]
name|arrayOfString
init|=
name|str
operator|.
name|split
argument_list|(
literal|"="
argument_list|,
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
name|arrayOfString
operator|.
name|length
operator|>
literal|1
condition|)
block|{
name|String
name|key
init|=
name|arrayOfString
index|[
literal|0
index|]
operator|.
name|trim
argument_list|()
decl_stmt|;
name|String
name|value
init|=
name|arrayOfString
index|[
literal|1
index|]
operator|.
name|trim
argument_list|()
decl_stmt|;
name|localHashMap
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|LogUtil
operator|.
name|logInfo
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"WoM Config: %s = %s"
argument_list|,
name|key
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Error fetching config from "
operator|+
name|url
argument_list|,
name|ex
argument_list|)
expr_stmt|;
name|localHashMap
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|localHashMap
return|;
block|}
specifier|private
specifier|static
name|InputStream
name|getInputStream
parameter_list|(
name|URLConnection
name|connection
parameter_list|)
throws|throws
name|IOException
block|{
name|InputStream
name|stream
init|=
name|connection
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
name|String
name|encoding
init|=
name|connection
operator|.
name|getContentEncoding
argument_list|()
decl_stmt|;
if|if
condition|(
name|encoding
operator|!=
literal|null
condition|)
block|{
name|encoding
operator|=
name|encoding
operator|.
name|toLowerCase
argument_list|()
expr_stmt|;
if|if
condition|(
name|encoding
operator|.
name|contains
argument_list|(
literal|"gzip"
argument_list|)
condition|)
block|{
name|stream
operator|=
operator|new
name|GZIPInputStream
argument_list|(
name|stream
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|encoding
operator|.
name|contains
argument_list|(
literal|"deflate"
argument_list|)
condition|)
block|{
name|stream
operator|=
operator|new
name|InflaterInputStream
argument_list|(
name|stream
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|stream
return|;
block|}
specifier|private
specifier|static
name|URLConnection
name|makeConnection
parameter_list|(
name|String
name|url
parameter_list|,
name|String
name|body
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|makeConnection
argument_list|(
name|url
argument_list|,
name|body
argument_list|,
name|url
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|URLConnection
name|makeConnection
parameter_list|(
name|String
name|url
parameter_list|,
name|String
name|body
parameter_list|,
name|String
name|referer
parameter_list|)
throws|throws
name|IOException
block|{
name|URLConnection
name|connection
init|=
operator|new
name|URL
argument_list|(
name|url
argument_list|)
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|connection
operator|.
name|addRequestProperty
argument_list|(
literal|"Referer"
argument_list|,
name|referer
argument_list|)
expr_stmt|;
name|connection
operator|.
name|setReadTimeout
argument_list|(
literal|40000
argument_list|)
expr_stmt|;
name|connection
operator|.
name|setConnectTimeout
argument_list|(
literal|15000
argument_list|)
expr_stmt|;
name|connection
operator|.
name|setDoInput
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|connection
operator|.
name|addRequestProperty
argument_list|(
literal|"User-Agent"
argument_list|,
name|Constants
operator|.
name|USER_AGENT
argument_list|)
expr_stmt|;
name|connection
operator|.
name|addRequestProperty
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
argument_list|)
expr_stmt|;
name|connection
operator|.
name|addRequestProperty
argument_list|(
literal|"Accept-Language"
argument_list|,
literal|"en-us,en;q=0.5"
argument_list|)
expr_stmt|;
name|connection
operator|.
name|addRequestProperty
argument_list|(
literal|"Accept-Encoding"
argument_list|,
literal|"gzip, deflate, compress"
argument_list|)
expr_stmt|;
name|connection
operator|.
name|addRequestProperty
argument_list|(
literal|"Connection"
argument_list|,
literal|"keep-alive"
argument_list|)
expr_stmt|;
if|if
condition|(
name|body
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|connection
operator|.
name|addRequestProperty
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/x-www-form-urlencoded"
argument_list|)
expr_stmt|;
name|connection
operator|.
name|addRequestProperty
argument_list|(
literal|"Content-Length"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|body
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connection
operator|.
name|setDoOutput
argument_list|(
literal|true
argument_list|)
expr_stmt|;
try|try
init|(
name|OutputStreamWriter
name|writer
init|=
operator|new
name|OutputStreamWriter
argument_list|(
name|connection
operator|.
name|getOutputStream
argument_list|()
argument_list|)
init|)
block|{
name|writer
operator|.
name|write
argument_list|(
name|body
argument_list|)
expr_stmt|;
block|}
block|}
name|connection
operator|.
name|connect
argument_list|()
expr_stmt|;
return|return
name|connection
return|;
block|}
block|}
end_class

end_unit

