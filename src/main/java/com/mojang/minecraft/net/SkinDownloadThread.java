begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|net
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|mob
operator|.
name|HumanoidMob
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|BufferedImage
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|imageio
operator|.
name|ImageIO
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|util
operator|.
name|LogUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|oyasunadev
operator|.
name|mcraft
operator|.
name|client
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_class
specifier|public
class|class
name|SkinDownloadThread
extends|extends
name|Thread
block|{
specifier|private
specifier|final
name|HumanoidMob
name|targetPlayer
decl_stmt|;
specifier|private
specifier|final
name|String
name|URL
decl_stmt|,
name|skinName
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|nonHumanoidSkin
decl_stmt|;
comment|// If "nonHumanoidSkin" is set, forces skin change even if player's modelName is not humanoid.
specifier|public
name|SkinDownloadThread
parameter_list|(
name|HumanoidMob
name|player
parameter_list|,
name|String
name|url
parameter_list|,
name|String
name|skinName
parameter_list|,
name|boolean
name|nonHumanoidSkin
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|targetPlayer
operator|=
name|player
expr_stmt|;
name|this
operator|.
name|URL
operator|=
name|url
expr_stmt|;
name|this
operator|.
name|skinName
operator|=
name|skinName
expr_stmt|;
name|this
operator|.
name|nonHumanoidSkin
operator|=
name|nonHumanoidSkin
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|HttpURLConnection
name|connection
init|=
literal|null
decl_stmt|;
try|try
block|{
name|URL
name|skinUrl
init|=
operator|new
name|URL
argument_list|(
name|this
operator|.
name|URL
argument_list|)
decl_stmt|;
name|connection
operator|=
operator|(
name|HttpURLConnection
operator|)
name|skinUrl
operator|.
name|openConnection
argument_list|()
expr_stmt|;
name|connection
operator|.
name|addRequestProperty
argument_list|(
literal|"User-Agent"
argument_list|,
name|Constants
operator|.
name|USER_AGENT
argument_list|)
expr_stmt|;
name|connection
operator|.
name|setUseCaches
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|connection
operator|.
name|setDoInput
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|connection
operator|.
name|setDoOutput
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|connection
operator|.
name|connect
argument_list|()
expr_stmt|;
name|int
name|responseCode
init|=
name|connection
operator|.
name|getResponseCode
argument_list|()
decl_stmt|;
comment|// may throw IOException
if|if
condition|(
name|responseCode
operator|==
name|HttpURLConnection
operator|.
name|HTTP_NOT_FOUND
operator|||
name|responseCode
operator|==
name|HttpURLConnection
operator|.
name|HTTP_FORBIDDEN
condition|)
block|{
comment|// Don't throw errors on 404 (file not found) errors.
comment|// Minecraft.net returns 403 for missing skins, for some reason. Skip those too.
return|return;
block|}
name|BufferedImage
name|image
init|=
name|ImageIO
operator|.
name|read
argument_list|(
name|connection
operator|.
name|getInputStream
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|nonHumanoidSkin
operator|&&
name|image
operator|.
name|getHeight
argument_list|()
operator|==
name|image
operator|.
name|getWidth
argument_list|()
condition|)
block|{
comment|// TODO: 1.8 skins
name|image
operator|=
name|image
operator|.
name|getSubimage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|image
operator|.
name|getWidth
argument_list|()
argument_list|,
name|image
operator|.
name|getHeight
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
block|}
name|targetPlayer
operator|.
name|setSkinImage
argument_list|(
name|skinName
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
comment|// Log connection errors
if|if
condition|(
name|connection
operator|!=
literal|null
condition|)
block|{
try|try
block|{
comment|// It's possible that an IOException was thrown by getResponseCode()
comment|// after a 4xx or 5xx response code was returned by the server.
comment|// This appears to be a bug in JRE 7u51 (and possibly other versions).
comment|// Calling getResponseCode() again should not throw a second exception, although
comment|// this behavior is implementation-dependent, and we don't rely on it.
name|int
name|responseCode
init|=
name|connection
operator|.
name|getResponseCode
argument_list|()
decl_stmt|;
if|if
condition|(
name|responseCode
operator|!=
name|HttpURLConnection
operator|.
name|HTTP_OK
condition|)
block|{
name|String
name|logMsg
init|=
name|String
operator|.
name|format
argument_list|(
literal|"Could not download skin from \"%s\". Server returned code %s"
argument_list|,
name|URL
argument_list|,
name|responseCode
argument_list|)
decl_stmt|;
name|LogUtil
operator|.
name|logWarning
argument_list|(
name|logMsg
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|ex2
parameter_list|)
block|{
comment|// If a secondary exception is raised by getResponseCode(), suppress it.
comment|// Original exception (ex) should have all the info we need to log.
block|}
block|}
name|String
name|errorMsg
init|=
name|String
operator|.
name|format
argument_list|(
literal|"Network error while downloading skin from \"%s\""
argument_list|,
name|this
operator|.
name|URL
argument_list|)
decl_stmt|;
name|LogUtil
operator|.
name|logWarning
argument_list|(
name|errorMsg
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// Log unexpected errors
name|String
name|errorMsg
init|=
name|String
operator|.
name|format
argument_list|(
literal|"Unexpected error while downloading skin from \"%s\""
argument_list|,
name|this
operator|.
name|URL
argument_list|)
decl_stmt|;
name|LogUtil
operator|.
name|logWarning
argument_list|(
name|errorMsg
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Clean up after ourselves
if|if
condition|(
name|connection
operator|!=
literal|null
condition|)
block|{
name|connection
operator|.
name|disconnect
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

