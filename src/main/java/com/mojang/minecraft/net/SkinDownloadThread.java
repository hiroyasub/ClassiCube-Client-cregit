begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|net
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|LogUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|oyasunadev
operator|.
name|mcraft
operator|.
name|client
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|imageio
operator|.
name|ImageIO
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|BufferedImage
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_class
specifier|public
class|class
name|SkinDownloadThread
extends|extends
name|Thread
block|{
name|String
name|skinServer
decl_stmt|;
specifier|private
name|NetworkPlayer
name|player
decl_stmt|;
specifier|public
name|SkinDownloadThread
parameter_list|(
name|NetworkPlayer
name|networkPlayer
parameter_list|,
name|String
name|skinServer
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|player
operator|=
name|networkPlayer
expr_stmt|;
name|this
operator|.
name|skinServer
operator|=
name|skinServer
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|HttpURLConnection
name|connection
init|=
literal|null
decl_stmt|;
try|try
block|{
name|String
name|skinName
init|=
operator|(
name|player
operator|.
name|SkinName
operator|==
literal|null
condition|?
name|player
operator|.
name|name
else|:
name|player
operator|.
name|SkinName
operator|)
decl_stmt|;
name|URL
name|skinUrl
init|=
operator|new
name|URL
argument_list|(
name|skinServer
operator|+
name|skinName
operator|+
literal|".png"
argument_list|)
decl_stmt|;
name|connection
operator|=
operator|(
name|HttpURLConnection
operator|)
name|skinUrl
operator|.
name|openConnection
argument_list|()
expr_stmt|;
name|connection
operator|.
name|addRequestProperty
argument_list|(
literal|"User-Agent"
argument_list|,
name|Constants
operator|.
name|USER_AGENT
argument_list|)
expr_stmt|;
name|connection
operator|.
name|setUseCaches
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|connection
operator|.
name|setDoInput
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|connection
operator|.
name|setDoOutput
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|connection
operator|.
name|connect
argument_list|()
expr_stmt|;
if|if
condition|(
name|connection
operator|.
name|getResponseCode
argument_list|()
operator|==
name|HttpURLConnection
operator|.
name|HTTP_NOT_FOUND
condition|)
block|{
comment|// Don't throw errors on 404 errors
return|return;
block|}
name|BufferedImage
name|image
init|=
name|ImageIO
operator|.
name|read
argument_list|(
name|connection
operator|.
name|getInputStream
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|image
operator|.
name|getHeight
argument_list|()
operator|==
name|image
operator|.
name|getWidth
argument_list|()
condition|)
block|{
name|player
operator|.
name|newTexture
operator|=
name|image
operator|.
name|getSubimage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|image
operator|.
name|getWidth
argument_list|()
argument_list|,
name|image
operator|.
name|getHeight
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|player
operator|.
name|newTexture
operator|=
name|image
operator|.
name|getSubimage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|image
operator|.
name|getWidth
argument_list|()
argument_list|,
name|image
operator|.
name|getHeight
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logWarning
argument_list|(
literal|"Error downloading a player skin."
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|connection
operator|!=
literal|null
condition|)
block|{
name|connection
operator|.
name|disconnect
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

