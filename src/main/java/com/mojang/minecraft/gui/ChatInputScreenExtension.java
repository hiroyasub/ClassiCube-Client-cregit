begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Desktop
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Toolkit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|datatransfer
operator|.
name|DataFlavor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|datatransfer
operator|.
name|StringSelection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|datatransfer
operator|.
name|Transferable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|datatransfer
operator|.
name|UnsupportedFlavorException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|input
operator|.
name|Keyboard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|input
operator|.
name|Mouse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|ChatClickData
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|ChatClickData
operator|.
name|LinkData
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|LogUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|net
operator|.
name|NetworkManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|net
operator|.
name|PacketType
import|;
end_import

begin_class
specifier|public
class|class
name|ChatInputScreenExtension
extends|extends
name|GuiScreen
block|{
specifier|public
specifier|static
name|Vector
argument_list|<
name|String
argument_list|>
name|history
init|=
operator|new
name|Vector
argument_list|<>
argument_list|()
decl_stmt|;
comment|/**      * The background color of the chat.      */
specifier|public
specifier|static
name|int
name|ChatRGB
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Color
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|130
argument_list|)
operator|.
name|getRGB
argument_list|()
decl_stmt|;
specifier|public
name|String
name|inputLine
init|=
literal|""
decl_stmt|;
specifier|public
name|int
name|caretPos
init|=
literal|0
decl_stmt|;
name|int
name|j
decl_stmt|;
specifier|private
name|int
name|tickCount
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|historyPos
init|=
literal|0
decl_stmt|;
specifier|private
name|String
name|getClipboard
parameter_list|()
block|{
name|Transferable
name|clipboard
init|=
name|Toolkit
operator|.
name|getDefaultToolkit
argument_list|()
operator|.
name|getSystemClipboard
argument_list|()
operator|.
name|getContents
argument_list|(
literal|null
argument_list|)
decl_stmt|;
try|try
block|{
if|if
condition|(
name|clipboard
operator|!=
literal|null
operator|&&
name|clipboard
operator|.
name|isDataFlavorSupported
argument_list|(
name|DataFlavor
operator|.
name|stringFlavor
argument_list|)
condition|)
block|{
return|return
operator|(
name|String
operator|)
name|clipboard
operator|.
name|getTransferData
argument_list|(
name|DataFlavor
operator|.
name|stringFlavor
argument_list|)
return|;
block|}
block|}
catch|catch
parameter_list|(
name|UnsupportedFlavorException
decl||
name|IOException
name|ex
parameter_list|)
block|{
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|setClipboard
parameter_list|(
name|String
name|paramString
parameter_list|)
block|{
name|StringSelection
name|localStringSelection
init|=
operator|new
name|StringSelection
argument_list|(
name|paramString
argument_list|)
decl_stmt|;
name|Toolkit
operator|.
name|getDefaultToolkit
argument_list|()
operator|.
name|getSystemClipboard
argument_list|()
operator|.
name|setContents
argument_list|(
name|localStringSelection
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|insertTextAtCaret
parameter_list|(
name|String
name|paramString
parameter_list|)
block|{
name|int
name|i
decl_stmt|;
if|if
condition|(
name|minecraft
operator|.
name|session
operator|!=
literal|null
condition|)
block|{
name|i
operator|=
literal|64
operator|-
name|minecraft
operator|.
name|session
operator|.
name|username
operator|.
name|length
argument_list|()
operator|-
literal|2
expr_stmt|;
block|}
else|else
block|{
name|i
operator|=
literal|64
expr_stmt|;
block|}
name|int
name|j
init|=
name|paramString
operator|.
name|length
argument_list|()
decl_stmt|;
name|inputLine
operator|=
name|inputLine
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|caretPos
argument_list|)
operator|+
name|paramString
operator|+
name|inputLine
operator|.
name|substring
argument_list|(
name|caretPos
argument_list|)
expr_stmt|;
name|caretPos
operator|+=
name|j
expr_stmt|;
if|if
condition|(
name|inputLine
operator|.
name|length
argument_list|()
operator|>
name|i
condition|)
block|{
name|inputLine
operator|=
name|inputLine
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|caretPos
operator|>
name|inputLine
operator|.
name|length
argument_list|()
condition|)
block|{
name|caretPos
operator|=
name|inputLine
operator|.
name|length
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|joinToString
parameter_list|(
name|String
index|[]
name|Names
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|buildable
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|Names
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Names cannot be null"
argument_list|)
throw|;
block|}
if|if
condition|(
name|Names
operator|.
name|length
operator|==
literal|0
condition|)
block|{
return|return
name|buildable
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|Names
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|buildable
operator|+=
name|Names
index|[
name|i
index|]
expr_stmt|;
if|if
condition|(
name|i
operator|!=
name|Names
operator|.
name|length
condition|)
block|{
name|buildable
operator|+=
literal|", "
expr_stmt|;
block|}
block|}
return|return
name|buildable
return|;
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|void
name|onClose
parameter_list|()
block|{
name|Keyboard
operator|.
name|enableRepeatEvents
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
specifier|final
name|void
name|onKeyPress
parameter_list|(
name|char
name|paramChar
parameter_list|,
name|int
name|paramInt
parameter_list|)
block|{
if|if
condition|(
name|paramInt
operator|==
name|Keyboard
operator|.
name|KEY_ESCAPE
condition|)
block|{
name|minecraft
operator|.
name|setCurrentScreen
argument_list|(
literal|null
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|paramInt
operator|==
name|Keyboard
operator|.
name|KEY_F2
condition|)
block|{
name|minecraft
operator|.
name|setCurrentScreen
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|minecraft
operator|.
name|takeAndSaveScreenshot
argument_list|(
name|minecraft
operator|.
name|width
argument_list|,
name|minecraft
operator|.
name|height
argument_list|)
expr_stmt|;
name|minecraft
operator|.
name|setCurrentScreen
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|Keyboard
operator|.
name|isKeyDown
argument_list|(
name|Keyboard
operator|.
name|KEY_TAB
argument_list|)
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|paramInt
operator|==
name|Keyboard
operator|.
name|KEY_RETURN
condition|)
block|{
comment|// 28
name|String
name|str1
init|=
name|inputLine
operator|.
name|trim
argument_list|()
decl_stmt|;
if|if
condition|(
name|str1
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"/client"
argument_list|)
condition|)
block|{
if|if
condition|(
name|str1
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"/client debug"
argument_list|)
condition|)
block|{
name|minecraft
operator|.
name|settings
operator|.
name|showDebug
operator|=
operator|!
name|minecraft
operator|.
name|settings
operator|.
name|showDebug
expr_stmt|;
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&eDebug:&a"
operator|+
operator|(
operator|!
name|minecraft
operator|.
name|settings
operator|.
name|showDebug
condition|?
literal|"On"
else|:
literal|"Off"
operator|)
operator|+
literal|" -> "
operator|+
operator|(
name|minecraft
operator|.
name|settings
operator|.
name|showDebug
condition|?
literal|"On"
else|:
literal|"Off"
operator|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|str1
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"/client gui"
argument_list|)
condition|)
block|{
name|minecraft
operator|.
name|canRenderGUI
operator|=
operator|!
name|minecraft
operator|.
name|canRenderGUI
expr_stmt|;
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&eGUI:&a"
operator|+
operator|(
operator|!
name|minecraft
operator|.
name|canRenderGUI
condition|?
literal|"On"
else|:
literal|"Off"
operator|)
operator|+
literal|" -> "
operator|+
operator|(
name|minecraft
operator|.
name|canRenderGUI
condition|?
literal|"On"
else|:
literal|"Off"
operator|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|str1
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"/client hacks"
argument_list|)
condition|)
block|{
name|minecraft
operator|.
name|settings
operator|.
name|HacksEnabled
operator|=
operator|!
name|minecraft
operator|.
name|settings
operator|.
name|HacksEnabled
expr_stmt|;
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&eHacks:&a"
operator|+
operator|(
operator|!
name|minecraft
operator|.
name|settings
operator|.
name|HacksEnabled
condition|?
literal|"Enabled"
else|:
literal|"Disabled"
operator|)
operator|+
literal|" -> "
operator|+
operator|(
name|minecraft
operator|.
name|settings
operator|.
name|HacksEnabled
condition|?
literal|"Enabled"
else|:
literal|"Disabled"
operator|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|str1
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"/client speedhack"
argument_list|)
condition|)
block|{
if|if
condition|(
name|minecraft
operator|.
name|settings
operator|.
name|HackType
operator|==
literal|1
condition|)
block|{
name|minecraft
operator|.
name|settings
operator|.
name|HackType
operator|=
literal|0
expr_stmt|;
block|}
else|else
block|{
name|minecraft
operator|.
name|settings
operator|.
name|HackType
operator|++
expr_stmt|;
block|}
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&eSpeedHack:&a"
operator|+
operator|(
operator|!
operator|(
name|minecraft
operator|.
name|settings
operator|.
name|HackType
operator|==
literal|0
operator|)
condition|?
literal|"Normal"
else|:
literal|"Advanced"
operator|)
operator|+
literal|" -> "
operator|+
operator|(
operator|(
name|minecraft
operator|.
name|settings
operator|.
name|HackType
operator|==
literal|0
operator|)
condition|?
literal|"Normal"
else|:
literal|"Advanced"
operator|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|str1
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"/client help"
argument_list|)
condition|)
block|{
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&a/Client GUI&e- Toggles the GUI"
argument_list|)
expr_stmt|;
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&a/Client Debug&e- Toggles the showing of the debug information"
argument_list|)
expr_stmt|;
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&a/Client Hacks&e- Toggles being able to use hacks"
argument_list|)
expr_stmt|;
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&a/Client SpeedHack&e- Switches between normal and advanced speedhack"
argument_list|)
expr_stmt|;
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&a/Client Status&e- Lists the settings and their current state"
argument_list|)
expr_stmt|;
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&a/Client Help&e- Displays this current page"
argument_list|)
expr_stmt|;
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&eTell us what you want as a command!"
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|str1
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"/client status"
argument_list|)
condition|)
block|{
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&eCurrent client command settings:"
argument_list|)
expr_stmt|;
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&eGUI:&a"
operator|+
operator|(
name|minecraft
operator|.
name|canRenderGUI
condition|?
literal|"On"
else|:
literal|"Off"
operator|)
argument_list|)
expr_stmt|;
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&eDebug:&a"
operator|+
operator|(
name|minecraft
operator|.
name|settings
operator|.
name|showDebug
condition|?
literal|"On"
else|:
literal|"Off"
operator|)
argument_list|)
expr_stmt|;
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&eHacks:&a"
operator|+
operator|(
name|minecraft
operator|.
name|settings
operator|.
name|HacksEnabled
condition|?
literal|"Enabled"
else|:
literal|"Disabled"
operator|)
argument_list|)
expr_stmt|;
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&eSpeedHack:&a"
operator|+
operator|(
operator|(
name|minecraft
operator|.
name|settings
operator|.
name|HackType
operator|==
literal|0
operator|)
condition|?
literal|"Normal"
else|:
literal|"Advanced"
operator|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&eTo see a list of client commands type in&a/Client Help"
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|minecraft
operator|.
name|session
operator|==
literal|null
condition|)
block|{
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&f"
operator|+
name|str1
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|str1
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
operator|(
name|str1
operator|=
name|str1
operator|.
name|trim
argument_list|()
operator|)
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|minecraft
operator|.
name|networkManager
operator|.
name|netHandler
operator|.
name|send
argument_list|(
name|PacketType
operator|.
name|CHAT_MESSAGE
argument_list|,
operator|-
literal|1
argument_list|,
name|str1
argument_list|)
expr_stmt|;
block|}
block|}
name|history
operator|.
name|add
argument_list|(
name|str1
argument_list|)
expr_stmt|;
name|minecraft
operator|.
name|setCurrentScreen
argument_list|(
literal|null
argument_list|)
expr_stmt|;
return|return;
block|}
name|int
name|i
init|=
name|inputLine
operator|.
name|length
argument_list|()
decl_stmt|;
if|if
condition|(
name|paramInt
operator|==
name|Keyboard
operator|.
name|KEY_BACK
operator|&&
name|i
operator|>
literal|0
operator|&&
name|caretPos
operator|>
literal|0
condition|)
block|{
name|inputLine
operator|=
name|inputLine
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|caretPos
operator|-
literal|1
argument_list|)
operator|+
name|inputLine
operator|.
name|substring
argument_list|(
name|caretPos
argument_list|)
expr_stmt|;
name|caretPos
operator|-=
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|paramInt
operator|==
name|Keyboard
operator|.
name|KEY_LEFT
operator|&&
name|caretPos
operator|>
literal|0
condition|)
block|{
name|caretPos
operator|-=
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|paramInt
operator|==
name|Keyboard
operator|.
name|KEY_RIGHT
operator|&&
name|caretPos
operator|<
name|i
condition|)
block|{
name|caretPos
operator|+=
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|paramInt
operator|==
name|Keyboard
operator|.
name|KEY_HOME
condition|)
block|{
name|caretPos
operator|=
literal|0
expr_stmt|;
block|}
if|if
condition|(
name|paramInt
operator|==
name|Keyboard
operator|.
name|KEY_END
condition|)
block|{
name|caretPos
operator|=
name|i
expr_stmt|;
block|}
if|if
condition|(
name|Keyboard
operator|.
name|isKeyDown
argument_list|(
name|Keyboard
operator|.
name|KEY_LMETA
argument_list|)
operator|||
name|Keyboard
operator|.
name|isKeyDown
argument_list|(
name|Keyboard
operator|.
name|KEY_RMETA
argument_list|)
operator|||
name|Keyboard
operator|.
name|isKeyDown
argument_list|(
name|Keyboard
operator|.
name|KEY_LCONTROL
argument_list|)
operator|||
name|Keyboard
operator|.
name|isKeyDown
argument_list|(
name|Keyboard
operator|.
name|KEY_RCONTROL
argument_list|)
condition|)
block|{
if|if
condition|(
name|paramInt
operator|==
name|Keyboard
operator|.
name|KEY_V
condition|)
block|{
name|paramChar
operator|=
literal|'\000'
expr_stmt|;
name|String
name|clipboardText
init|=
name|getClipboard
argument_list|()
decl_stmt|;
if|if
condition|(
name|clipboardText
operator|!=
literal|null
condition|)
block|{
name|insertTextAtCaret
argument_list|(
name|clipboardText
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|paramInt
operator|==
name|Keyboard
operator|.
name|KEY_C
condition|)
block|{
name|paramChar
operator|=
literal|'\000'
expr_stmt|;
name|setClipboard
argument_list|(
name|inputLine
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*          * if (paramInt == Keyboard.KEY_TAB) { String namePart = this.inputLine;          * if (namePart == null || namePart.length() == 0) return; List<String>          * potentials = new ArrayList<String>(); for (int index = 0; index<          * this.minecraft.networkManager.players.size(); index++) { if          * (this.minecraft          * .networkManager.players.get(index).name.toLowerCase().contains          * (namePart .toLowerCase())) {          * potentials.add(this.minecraft.networkManager          * .players.get(index).name); } } if (potentials.size() == 0) return; if          * (potentials.size() == 1) { this.inputLine = potentials.get(0); } else          * { try { this.minecraft.hud.addChat(joinToString((String[])          * potentials.toArray())); } catch (Exception e) { e.printStackTrace();          * } } }          */
if|if
condition|(
name|paramInt
operator|==
name|Keyboard
operator|.
name|KEY_UP
condition|)
block|{
name|j
operator|=
name|history
operator|.
name|size
argument_list|()
expr_stmt|;
if|if
condition|(
name|historyPos
operator|<
name|j
condition|)
block|{
name|historyPos
operator|+=
literal|1
expr_stmt|;
name|inputLine
operator|=
name|history
operator|.
name|get
argument_list|(
name|j
operator|-
name|historyPos
argument_list|)
expr_stmt|;
name|caretPos
operator|=
name|inputLine
operator|.
name|length
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|paramInt
operator|==
name|Keyboard
operator|.
name|KEY_DOWN
condition|)
block|{
name|j
operator|=
name|history
operator|.
name|size
argument_list|()
expr_stmt|;
if|if
condition|(
name|historyPos
operator|>
literal|0
condition|)
block|{
name|historyPos
operator|-=
literal|1
expr_stmt|;
if|if
condition|(
name|historyPos
operator|>
literal|0
condition|)
block|{
name|inputLine
operator|=
name|history
operator|.
name|get
argument_list|(
name|j
operator|-
name|historyPos
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|inputLine
operator|=
literal|""
expr_stmt|;
block|}
name|caretPos
operator|=
name|inputLine
operator|.
name|length
argument_list|()
expr_stmt|;
block|}
block|}
name|int
name|j
init|=
literal|"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 ,.:-_'*!\\\"#%/()=+?[]{}<>@|$;~`^"
operator|.
name|indexOf
argument_list|(
name|paramChar
argument_list|)
operator|>=
literal|0
condition|?
literal|1
else|:
literal|0
decl_stmt|;
if|if
condition|(
name|j
operator|!=
literal|0
condition|)
block|{
name|insertTextAtCaret
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|paramChar
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
specifier|final
name|void
name|onMouseClick
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|clickType
parameter_list|)
block|{
if|if
condition|(
name|clickType
operator|==
literal|0
operator|&&
name|minecraft
operator|.
name|hud
operator|.
name|hoveredPlayer
operator|!=
literal|null
condition|)
block|{
name|insertTextAtCaret
argument_list|(
name|minecraft
operator|.
name|hud
operator|.
name|hoveredPlayer
operator|+
literal|" "
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|clickType
operator|==
literal|0
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|minecraft
operator|.
name|hud
operator|.
name|chat
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
for|for
control|(
name|ChatScreenData
name|data
range|:
name|minecraft
operator|.
name|hud
operator|.
name|chatsOnScreen
control|)
block|{
if|if
condition|(
name|x
operator|>
name|data
operator|.
name|bounds
operator|.
name|maxX
operator|&&
name|x
argument_list|<
name|data
operator|.
name|bounds
operator|.
name|minX
operator|&&
name|y
argument_list|>
name|data
operator|.
name|bounds
operator|.
name|maxY
operator|&&
name|y
operator|<
name|data
operator|.
name|bounds
operator|.
name|minY
condition|)
block|{
name|ChatClickData
name|chatClickData
init|=
operator|new
name|ChatClickData
argument_list|(
name|fontRenderer
argument_list|,
name|minecraft
operator|.
name|hud
operator|.
name|chat
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|data
operator|.
name|string
operator|.
name|equals
argument_list|(
name|chatClickData
operator|.
name|message
argument_list|)
condition|)
block|{
for|for
control|(
name|LinkData
name|ld
range|:
name|chatClickData
operator|.
name|getClickedUrls
argument_list|()
control|)
block|{
if|if
condition|(
name|ld
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|x
operator|>
name|ld
operator|.
name|x0
operator|&&
name|x
argument_list|<
name|ld
operator|.
name|x1
operator|&&
name|y
argument_list|>
name|data
operator|.
name|bounds
operator|.
name|maxY
operator|&&
name|y
operator|<
name|data
operator|.
name|bounds
operator|.
name|minY
condition|)
block|{
name|String
name|s
init|=
name|FontRenderer
operator|.
name|stripColor
argument_list|(
name|ld
operator|.
name|link
argument_list|)
decl_stmt|;
name|URI
name|uri
init|=
name|chatClickData
operator|.
name|getURI
argument_list|(
name|s
argument_list|)
decl_stmt|;
if|if
condition|(
name|uri
operator|!=
literal|null
condition|)
block|{
name|openWebpage
argument_list|(
name|uri
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
block|}
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|void
name|onOpen
parameter_list|()
block|{
name|Keyboard
operator|.
name|enableRepeatEvents
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|openWebpage
parameter_list|(
name|URI
name|uri
parameter_list|)
block|{
name|Desktop
name|desktop
init|=
name|Desktop
operator|.
name|isDesktopSupported
argument_list|()
condition|?
name|Desktop
operator|.
name|getDesktop
argument_list|()
else|:
literal|null
decl_stmt|;
if|if
condition|(
name|desktop
operator|!=
literal|null
operator|&&
name|desktop
operator|.
name|isSupported
argument_list|(
name|Desktop
operator|.
name|Action
operator|.
name|BROWSE
argument_list|)
condition|)
block|{
try|try
block|{
name|desktop
operator|.
name|browse
argument_list|(
name|uri
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Error opening a chat link: "
operator|+
name|uri
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|render
parameter_list|(
name|int
name|paramInt1
parameter_list|,
name|int
name|paramInt2
parameter_list|)
block|{
comment|// super.drawBox(2, height - 14, width - 2, height - 2, -2147483648);
name|char
index|[]
name|temp
init|=
operator|new
name|char
index|[
literal|128
index|]
decl_stmt|;
for|for
control|(
name|int
name|a
init|=
literal|0
init|;
name|a
operator|<
name|inputLine
operator|.
name|length
argument_list|()
condition|;
name|a
operator|++
control|)
block|{
name|temp
index|[
name|a
index|]
operator|=
name|inputLine
operator|.
name|toCharArray
argument_list|()
index|[
name|a
index|]
expr_stmt|;
block|}
if|if
condition|(
name|temp
operator|.
name|length
operator|==
literal|0
condition|)
block|{
name|temp
index|[
name|temp
operator|.
name|length
index|]
operator|=
name|tickCount
operator|/
literal|6
operator|%
literal|2
operator|==
literal|0
condition|?
literal|'_'
else|:
literal|' '
expr_stmt|;
block|}
else|else
block|{
name|temp
index|[
name|caretPos
index|]
operator|=
name|tickCount
operator|/
literal|6
operator|%
literal|2
operator|==
literal|0
condition|?
literal|'_'
else|:
name|temp
index|[
name|caretPos
index|]
expr_stmt|;
block|}
name|String
name|string
init|=
literal|""
decl_stmt|;
name|String
name|messageNoCaret
init|=
literal|""
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|temp
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|!=
name|caretPos
condition|)
block|{
name|messageNoCaret
operator|+=
name|temp
index|[
name|i
index|]
expr_stmt|;
block|}
name|string
operator|+=
name|temp
index|[
name|i
index|]
expr_stmt|;
block|}
name|int
name|x1
init|=
literal|2
decl_stmt|;
comment|/*          * Add the beginning position of the box + the length of '> _' + the          * length of the trimmed message + the x position of the '> _' string.          */
name|int
name|x2
init|=
name|x1
operator|+
name|fontRenderer
operator|.
name|getWidth
argument_list|(
literal|"> _"
operator|+
name|messageNoCaret
operator|.
name|replace
argument_list|(
literal|" "
argument_list|,
literal|".."
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
operator|+
literal|4
decl_stmt|;
name|int
name|y1
init|=
name|height
operator|-
literal|14
decl_stmt|;
name|int
name|y2
init|=
name|y1
operator|+
literal|12
decl_stmt|;
name|super
operator|.
name|drawBox
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|,
name|ChatRGB
argument_list|)
expr_stmt|;
name|drawString
argument_list|(
name|fontRenderer
argument_list|,
literal|"> "
operator|+
name|string
argument_list|,
literal|4
argument_list|,
name|height
operator|-
literal|12
argument_list|,
literal|14737632
argument_list|)
expr_stmt|;
name|float
name|scale
init|=
literal|0.6f
decl_stmt|;
name|int
name|x
init|=
name|Mouse
operator|.
name|getEventX
argument_list|()
operator|*
name|width
operator|/
name|minecraft
operator|.
name|width
decl_stmt|;
name|int
name|y
init|=
name|height
operator|-
name|Mouse
operator|.
name|getEventY
argument_list|()
operator|*
name|height
operator|/
name|minecraft
operator|.
name|height
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|minecraft
operator|.
name|hud
operator|.
name|chat
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
for|for
control|(
name|ChatScreenData
name|data
range|:
name|minecraft
operator|.
name|hud
operator|.
name|chatsOnScreen
control|)
block|{
if|if
condition|(
name|x
operator|>
name|data
operator|.
name|bounds
operator|.
name|maxX
operator|&&
name|x
argument_list|<
name|data
operator|.
name|bounds
operator|.
name|minX
operator|&&
name|y
argument_list|>
name|data
operator|.
name|bounds
operator|.
name|maxY
operator|&&
name|y
operator|<
name|data
operator|.
name|bounds
operator|.
name|minY
condition|)
block|{
name|ChatClickData
name|chatClickData
init|=
operator|new
name|ChatClickData
argument_list|(
name|fontRenderer
argument_list|,
name|minecraft
operator|.
name|hud
operator|.
name|chat
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|data
operator|.
name|string
operator|.
name|equals
argument_list|(
name|chatClickData
operator|.
name|message
argument_list|)
condition|)
block|{
for|for
control|(
name|LinkData
name|ld
range|:
name|chatClickData
operator|.
name|getClickedUrls
argument_list|()
control|)
block|{
if|if
condition|(
name|ld
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|x
operator|>
name|ld
operator|.
name|x0
operator|&&
name|x
argument_list|<
name|ld
operator|.
name|x1
operator|&&
name|y
argument_list|>
name|data
operator|.
name|bounds
operator|.
name|maxY
operator|&&
name|y
operator|<
name|data
operator|.
name|bounds
operator|.
name|minY
condition|)
block|{
name|super
operator|.
name|drawBox
argument_list|(
name|ld
operator|.
name|x0
argument_list|,
name|data
operator|.
name|y
operator|-
literal|1
argument_list|,
name|ld
operator|.
name|x1
operator|+
literal|3
operator|*
name|scale
argument_list|,
name|data
operator|.
name|y
operator|+
literal|9
operator|*
name|scale
argument_list|,
operator|-
literal|2147483648
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|void
name|tick
parameter_list|()
block|{
operator|++
name|tickCount
expr_stmt|;
block|}
block|}
end_class

end_unit

