begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|GameSettings
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|Setting
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|OptionsScreen
extends|extends
name|GuiScreen
block|{
specifier|private
specifier|final
specifier|static
name|Setting
index|[]
name|settingsOrder
init|=
operator|new
name|Setting
index|[]
block|{
name|Setting
operator|.
name|MUSIC
block|,
name|Setting
operator|.
name|SOUND
block|,
name|Setting
operator|.
name|INVERT_MOUSE
block|,
name|Setting
operator|.
name|VIEW_BOBBING
block|,
name|Setting
operator|.
name|VIEW_DISTANCE
block|,
name|Setting
operator|.
name|LIMIT_FRAMERATE
block|,
name|Setting
operator|.
name|SMOOTHING
block|,
name|Setting
operator|.
name|ANISOTROPIC
block|,
name|Setting
operator|.
name|FONT_SCALE
block|,
name|Setting
operator|.
name|SHOW_NAMES
block|}
decl_stmt|;
specifier|private
specifier|final
name|String
name|title
init|=
literal|"Options"
decl_stmt|;
specifier|private
specifier|final
name|GameSettings
name|settings
decl_stmt|;
specifier|public
name|OptionsScreen
parameter_list|(
name|GameSettings
name|settings
parameter_list|)
block|{
name|this
operator|.
name|settings
operator|=
name|settings
expr_stmt|;
block|}
comment|// TODO To util?
specifier|private
specifier|static
parameter_list|<
name|T
parameter_list|>
name|int
name|indexOf
parameter_list|(
name|T
name|needle
parameter_list|,
name|T
index|[]
name|haystack
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|haystack
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|haystack
index|[
name|i
index|]
operator|!=
literal|null
operator|&&
name|haystack
index|[
name|i
index|]
operator|.
name|equals
argument_list|(
name|needle
argument_list|)
operator|||
name|needle
operator|==
literal|null
operator|&&
name|haystack
index|[
name|i
index|]
operator|==
literal|null
condition|)
block|{
return|return
name|i
return|;
block|}
block|}
return|return
operator|-
literal|1
return|;
block|}
annotation|@
name|Override
specifier|protected
specifier|final
name|void
name|onButtonClick
parameter_list|(
name|Button
name|clickedButton
parameter_list|)
block|{
if|if
condition|(
name|clickedButton
operator|.
name|active
condition|)
block|{
if|if
condition|(
name|clickedButton
operator|.
name|id
operator|<
literal|100
condition|)
block|{
comment|// A settings button was clicked
name|Setting
name|affectedSetting
init|=
name|settingsOrder
index|[
name|clickedButton
operator|.
name|id
index|]
decl_stmt|;
name|settings
operator|.
name|toggleSetting
argument_list|(
name|affectedSetting
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|clickedButton
operator|.
name|text
operator|=
name|settings
operator|.
name|getSetting
argument_list|(
name|affectedSetting
argument_list|)
expr_stmt|;
name|checkSettingsConsistency
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|clickedButton
operator|.
name|id
operator|==
literal|100
condition|)
block|{
comment|// [Advanced Options] was clicked
name|minecraft
operator|.
name|setCurrentScreen
argument_list|(
operator|new
name|AdvancedOptionsScreen
argument_list|(
name|this
argument_list|,
name|settings
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|clickedButton
operator|.
name|id
operator|==
literal|200
condition|)
block|{
comment|// [Controls] was clicked
name|minecraft
operator|.
name|setCurrentScreen
argument_list|(
operator|new
name|ControlsScreen
argument_list|(
name|settings
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|clickedButton
operator|.
name|id
operator|==
literal|300
condition|)
block|{
comment|// [Done] was clicked
name|minecraft
operator|.
name|setCurrentScreen
argument_list|(
operator|new
name|PauseScreen
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|void
name|onOpen
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|settingsOrder
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|buttons
operator|.
name|add
argument_list|(
operator|new
name|OptionButton
argument_list|(
name|i
argument_list|,
name|width
operator|/
literal|2
operator|-
literal|155
operator|+
operator|(
name|i
operator|%
literal|2
operator|)
operator|*
literal|160
argument_list|,
name|height
operator|/
literal|6
operator|+
literal|24
operator|*
operator|(
name|i
operator|/
literal|2
operator|)
argument_list|,
name|settings
operator|.
name|getSetting
argument_list|(
name|settingsOrder
index|[
name|i
index|]
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|checkSettingsConsistency
argument_list|()
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
operator|new
name|Button
argument_list|(
literal|100
argument_list|,
name|width
operator|/
literal|2
operator|-
literal|100
argument_list|,
name|height
operator|/
literal|6
operator|+
literal|90
operator|+
literal|32
argument_list|,
literal|"Advanced Options..."
argument_list|)
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
operator|new
name|Button
argument_list|(
literal|200
argument_list|,
name|width
operator|/
literal|2
operator|-
literal|100
argument_list|,
name|height
operator|/
literal|6
operator|+
literal|120
operator|+
literal|26
argument_list|,
literal|"Controls..."
argument_list|)
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
operator|new
name|Button
argument_list|(
literal|300
argument_list|,
name|width
operator|/
literal|2
operator|-
literal|100
argument_list|,
name|height
operator|/
literal|6
operator|+
literal|168
argument_list|,
literal|"Done"
argument_list|)
argument_list|)
expr_stmt|;
comment|// [Show Names] requires "OP"
name|buttons
operator|.
name|get
argument_list|(
literal|9
argument_list|)
operator|.
name|active
operator|=
name|minecraft
operator|.
name|player
operator|.
name|userType
operator|>=
literal|100
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|void
name|render
parameter_list|(
name|int
name|mouseX
parameter_list|,
name|int
name|mouseY
parameter_list|)
block|{
name|drawFadingBox
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
literal|1610941696
argument_list|,
operator|-
literal|1607454624
argument_list|)
expr_stmt|;
name|drawCenteredString
argument_list|(
name|fontRenderer
argument_list|,
name|title
argument_list|,
name|width
operator|/
literal|2
argument_list|,
literal|20
argument_list|,
literal|16777215
argument_list|)
expr_stmt|;
name|super
operator|.
name|render
argument_list|(
name|mouseX
argument_list|,
name|mouseY
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkSettingsConsistency
parameter_list|()
block|{
comment|// [Anisotropic] should only ne enabled if smoothing is on
name|boolean
name|smoothingOn
init|=
operator|(
name|minecraft
operator|.
name|settings
operator|.
name|smoothing
operator|>
literal|0
operator|)
decl_stmt|;
name|buttons
operator|.
name|get
argument_list|(
name|indexOf
argument_list|(
name|Setting
operator|.
name|ANISOTROPIC
argument_list|,
name|settingsOrder
argument_list|)
argument_list|)
operator|.
name|active
operator|=
name|smoothingOn
expr_stmt|;
block|}
block|}
end_class

end_unit

