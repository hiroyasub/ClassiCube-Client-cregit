begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|particle
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|TextureManager
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|ParticleManager
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
specifier|public
name|List
index|[]
name|particles
init|=
operator|new
name|List
index|[
literal|2
index|]
decl_stmt|;
specifier|public
name|TextureManager
name|textureManager
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
specifier|public
name|ParticleManager
parameter_list|(
name|TextureManager
name|textureManager
parameter_list|)
block|{
name|this
operator|.
name|textureManager
operator|=
name|textureManager
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|particles
index|[
name|i
index|]
operator|=
operator|new
name|ArrayList
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * Spawn a particle.      *      * @param entity The entity spawning the particle.      */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
specifier|final
name|void
name|spawnParticle
parameter_list|(
name|Entity
name|entity
parameter_list|)
block|{
name|Particle
name|particle
init|=
operator|(
name|Particle
operator|)
name|entity
decl_stmt|;
name|int
name|textureID
init|=
name|particle
operator|.
name|getParticleTexture
argument_list|()
decl_stmt|;
name|particles
index|[
name|textureID
index|]
operator|.
name|add
argument_list|(
name|particle
argument_list|)
expr_stmt|;
block|}
comment|/**      * A tick. Calls tick() for all particles I control.      */
specifier|public
specifier|final
name|void
name|tick
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|particles
index|[
name|i
index|]
operator|.
name|size
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
name|Particle
name|particle
init|=
operator|(
name|Particle
operator|)
name|particles
index|[
name|i
index|]
operator|.
name|get
argument_list|(
name|j
argument_list|)
decl_stmt|;
name|particle
operator|.
name|tick
argument_list|()
expr_stmt|;
if|if
condition|(
name|particle
operator|.
name|removed
condition|)
block|{
name|particles
index|[
name|i
index|]
operator|.
name|remove
argument_list|(
name|j
operator|--
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

