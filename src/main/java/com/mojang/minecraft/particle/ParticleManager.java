begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|particle
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|TextureManager
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|ParticleManager
block|{
specifier|public
name|List
index|[]
name|particles
init|=
operator|new
name|List
index|[
literal|2
index|]
decl_stmt|;
specifier|public
name|TextureManager
name|textureManager
decl_stmt|;
specifier|public
name|ParticleManager
parameter_list|(
name|Level
name|var1
parameter_list|,
name|TextureManager
name|var2
parameter_list|)
block|{
if|if
condition|(
name|var1
operator|!=
literal|null
condition|)
block|{
name|var1
operator|.
name|particleEngine
operator|=
name|this
expr_stmt|;
block|}
name|this
operator|.
name|textureManager
operator|=
name|var2
expr_stmt|;
for|for
control|(
name|int
name|var3
init|=
literal|0
init|;
name|var3
operator|<
literal|2
condition|;
operator|++
name|var3
control|)
block|{
name|this
operator|.
name|particles
index|[
name|var3
index|]
operator|=
operator|new
name|ArrayList
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|final
name|void
name|spawnParticle
parameter_list|(
name|Entity
name|var1
parameter_list|)
block|{
name|Particle
name|var3
decl_stmt|;
name|int
name|var2
init|=
operator|(
name|var3
operator|=
operator|(
name|Particle
operator|)
name|var1
operator|)
operator|.
name|getParticleTexture
argument_list|()
decl_stmt|;
name|this
operator|.
name|particles
index|[
name|var2
index|]
operator|.
name|add
argument_list|(
name|var3
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|final
name|void
name|tick
parameter_list|()
block|{
for|for
control|(
name|int
name|var1
init|=
literal|0
init|;
name|var1
operator|<
literal|2
condition|;
operator|++
name|var1
control|)
block|{
for|for
control|(
name|int
name|var2
init|=
literal|0
init|;
name|var2
operator|<
name|this
operator|.
name|particles
index|[
name|var1
index|]
operator|.
name|size
argument_list|()
condition|;
operator|++
name|var2
control|)
block|{
name|Particle
name|var3
decl_stmt|;
operator|(
name|var3
operator|=
operator|(
name|Particle
operator|)
name|this
operator|.
name|particles
index|[
name|var1
index|]
operator|.
name|get
argument_list|(
name|var2
argument_list|)
operator|)
operator|.
name|tick
argument_list|()
expr_stmt|;
if|if
condition|(
name|var3
operator|.
name|removed
condition|)
block|{
name|this
operator|.
name|particles
index|[
name|var1
index|]
operator|.
name|remove
argument_list|(
name|var2
operator|--
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

