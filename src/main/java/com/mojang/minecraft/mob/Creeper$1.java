begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|mob
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|tile
operator|.
name|Block
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|mob
operator|.
name|ai
operator|.
name|BasicAttackAI
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|particle
operator|.
name|TerrainParticle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|util
operator|.
name|MathHelper
import|;
end_import

begin_class
specifier|final
class|class
name|Creeper$1
extends|extends
name|BasicAttackAI
block|{
specifier|public
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
comment|// $FF: synthetic field
specifier|final
name|Creeper
name|creeper
decl_stmt|;
name|Creeper$1
parameter_list|(
name|Creeper
name|creeper
parameter_list|)
block|{
name|this
operator|.
name|creeper
operator|=
name|creeper
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|boolean
name|attack
parameter_list|(
name|Entity
name|other
parameter_list|)
block|{
if|if
condition|(
operator|!
name|super
operator|.
name|attack
argument_list|(
name|other
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
else|else
block|{
name|mob
operator|.
name|hurt
argument_list|(
name|other
argument_list|,
literal|6
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|void
name|beforeRemove
parameter_list|()
block|{
name|float
name|radius
init|=
literal|4F
decl_stmt|;
name|level
operator|.
name|explode
argument_list|(
name|mob
argument_list|,
name|mob
operator|.
name|x
argument_list|,
name|mob
operator|.
name|y
argument_list|,
name|mob
operator|.
name|z
argument_list|,
name|radius
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|500
condition|;
operator|++
name|i
control|)
block|{
name|float
name|var3
init|=
operator|(
name|float
operator|)
name|random
operator|.
name|nextGaussian
argument_list|()
operator|*
name|radius
operator|/
literal|4F
decl_stmt|;
name|float
name|var4
init|=
operator|(
name|float
operator|)
name|random
operator|.
name|nextGaussian
argument_list|()
operator|*
name|radius
operator|/
literal|4F
decl_stmt|;
name|float
name|var5
init|=
operator|(
name|float
operator|)
name|random
operator|.
name|nextGaussian
argument_list|()
operator|*
name|radius
operator|/
literal|4F
decl_stmt|;
name|float
name|var6
init|=
name|MathHelper
operator|.
name|sqrt
argument_list|(
name|var3
operator|*
name|var3
operator|+
name|var4
operator|*
name|var4
operator|+
name|var5
operator|*
name|var5
argument_list|)
decl_stmt|;
name|float
name|var7
init|=
name|var3
operator|/
name|var6
operator|/
name|var6
decl_stmt|;
name|float
name|var8
init|=
name|var4
operator|/
name|var6
operator|/
name|var6
decl_stmt|;
name|var6
operator|=
name|var5
operator|/
name|var6
operator|/
name|var6
expr_stmt|;
name|level
operator|.
name|particleEngine
operator|.
name|spawnParticle
argument_list|(
operator|new
name|TerrainParticle
argument_list|(
name|level
argument_list|,
name|mob
operator|.
name|x
operator|+
name|var3
argument_list|,
name|mob
operator|.
name|y
operator|+
name|var4
argument_list|,
name|mob
operator|.
name|z
operator|+
name|var5
argument_list|,
name|var7
argument_list|,
name|var8
argument_list|,
name|var6
argument_list|,
name|Block
operator|.
name|LEAVES
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

