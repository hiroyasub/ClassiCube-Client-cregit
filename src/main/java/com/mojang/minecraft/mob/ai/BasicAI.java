begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|mob
operator|.
name|ai
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|mob
operator|.
name|Mob
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_class
specifier|public
class|class
name|BasicAI
extends|extends
name|AI
block|{
specifier|public
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
specifier|public
name|float
name|xxa
decl_stmt|;
specifier|public
name|float
name|yya
decl_stmt|;
specifier|protected
name|float
name|yRotA
decl_stmt|;
specifier|public
name|Level
name|level
decl_stmt|;
specifier|public
name|Mob
name|mob
decl_stmt|;
comment|//public boolean jumping = false;
specifier|protected
name|int
name|attackDelay
init|=
literal|0
decl_stmt|;
comment|//public float runSpeed = 0.7F;
specifier|protected
name|int
name|noActionTime
init|=
literal|0
decl_stmt|;
specifier|public
name|Entity
name|attackTarget
init|=
literal|null
decl_stmt|;
specifier|public
name|boolean
name|running
init|=
literal|false
decl_stmt|;
specifier|public
name|void
name|tick
parameter_list|(
name|Level
name|var1
parameter_list|,
name|Mob
name|var2
parameter_list|)
block|{
operator|++
name|this
operator|.
name|noActionTime
expr_stmt|;
name|Entity
name|var3
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|noActionTime
operator|>
literal|600
operator|&&
name|this
operator|.
name|random
operator|.
name|nextInt
argument_list|(
literal|800
argument_list|)
operator|==
literal|0
operator|&&
operator|(
name|var3
operator|=
name|var1
operator|.
name|getPlayer
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|float
name|var4
init|=
name|var3
operator|.
name|x
operator|-
name|var2
operator|.
name|x
decl_stmt|;
name|float
name|var5
init|=
name|var3
operator|.
name|y
operator|-
name|var2
operator|.
name|y
decl_stmt|;
name|float
name|var6
init|=
name|var3
operator|.
name|z
operator|-
name|var2
operator|.
name|z
decl_stmt|;
if|if
condition|(
name|var4
operator|*
name|var4
operator|+
name|var5
operator|*
name|var5
operator|+
name|var6
operator|*
name|var6
operator|<
literal|1024.0F
condition|)
block|{
name|this
operator|.
name|noActionTime
operator|=
literal|0
expr_stmt|;
block|}
else|else
block|{
name|var2
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
name|this
operator|.
name|level
operator|=
name|var1
expr_stmt|;
name|this
operator|.
name|mob
operator|=
name|var2
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|attackDelay
operator|>
literal|0
condition|)
block|{
operator|--
name|this
operator|.
name|attackDelay
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|.
name|health
operator|<=
literal|0
condition|)
block|{
comment|//this.jumping = false;
name|this
operator|.
name|xxa
operator|=
literal|0.0F
expr_stmt|;
name|this
operator|.
name|yya
operator|=
literal|0.0F
expr_stmt|;
name|this
operator|.
name|yRotA
operator|=
literal|0.0F
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
comment|/*boolean var7 = var2.isInWater(); 		boolean var9 = var2.isInLava(); 		boolean varA = var2.isInSpiderWeb(); 		if(this.jumping) { 			if(var7) { 				var2.yd += 0.04F; 			} else if(var9|| varA) { 				var2.yd += 0.04F; 			} else if(var2.onGround) { 				this.jumpFromGround(); 			} 		}*/
name|this
operator|.
name|xxa
operator|*=
literal|0.98F
expr_stmt|;
name|this
operator|.
name|yya
operator|*=
literal|0.98F
expr_stmt|;
name|this
operator|.
name|yRotA
operator|*=
literal|0.9F
expr_stmt|;
name|var2
operator|.
name|travel
argument_list|(
name|this
operator|.
name|xxa
argument_list|,
name|this
operator|.
name|yya
argument_list|)
expr_stmt|;
name|List
name|var11
decl_stmt|;
if|if
condition|(
operator|(
name|var11
operator|=
name|var1
operator|.
name|findEntities
argument_list|(
name|var2
argument_list|,
name|var2
operator|.
name|bb
operator|.
name|grow
argument_list|(
literal|0.2F
argument_list|,
literal|0.0F
argument_list|,
literal|0.2F
argument_list|)
argument_list|)
operator|)
operator|!=
literal|null
operator|&&
name|var11
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|int
name|var8
init|=
literal|0
init|;
name|var8
operator|<
name|var11
operator|.
name|size
argument_list|()
condition|;
operator|++
name|var8
control|)
block|{
name|Entity
name|var10
decl_stmt|;
if|if
condition|(
operator|(
name|var10
operator|=
operator|(
name|Entity
operator|)
name|var11
operator|.
name|get
argument_list|(
name|var8
argument_list|)
operator|)
operator|.
name|isPushable
argument_list|()
condition|)
block|{
name|var10
operator|.
name|push
argument_list|(
name|var2
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|protected
name|void
name|jumpFromGround
parameter_list|()
block|{
comment|//this.mob.yd = 0.42F;
block|}
specifier|protected
name|void
name|update
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|random
operator|.
name|nextFloat
argument_list|()
operator|<
literal|0.07F
condition|)
block|{
name|this
operator|.
name|xxa
operator|=
operator|(
name|this
operator|.
name|random
operator|.
name|nextFloat
argument_list|()
operator|-
literal|0.5F
operator|)
expr_stmt|;
name|this
operator|.
name|yya
operator|=
name|this
operator|.
name|random
operator|.
name|nextFloat
argument_list|()
expr_stmt|;
block|}
comment|//this.jumping = this.random.nextFloat()< 0.01F;
if|if
condition|(
name|this
operator|.
name|random
operator|.
name|nextFloat
argument_list|()
operator|<
literal|0.04F
condition|)
block|{
name|this
operator|.
name|yRotA
operator|=
operator|(
name|this
operator|.
name|random
operator|.
name|nextFloat
argument_list|()
operator|-
literal|0.5F
operator|)
operator|*
literal|60.0F
expr_stmt|;
block|}
name|this
operator|.
name|mob
operator|.
name|yRot
operator|+=
name|this
operator|.
name|yRotA
expr_stmt|;
name|this
operator|.
name|mob
operator|.
name|xRot
operator|=
operator|(
name|float
operator|)
name|this
operator|.
name|defaultLookAngle
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|attackTarget
operator|!=
literal|null
condition|)
block|{
comment|//this.yya = this.runSpeed;
comment|//this.jumping = this.random.nextFloat()< 0.04F;
block|}
comment|/*boolean var1 = this.mob.isInWater(); 		boolean var2 = this.mob.isInLava(); 		boolean var3 = this.mob.isInSpiderWeb(); 		if(var1 || var2 || var3) { 			this.jumping = this.random.nextFloat()< 0.8F; 		}*/
block|}
specifier|public
name|void
name|beforeRemove
parameter_list|()
block|{
block|}
specifier|public
name|void
name|hurt
parameter_list|(
name|Entity
name|var1
parameter_list|,
name|int
name|var2
parameter_list|)
block|{
name|super
operator|.
name|hurt
argument_list|(
name|var1
argument_list|,
name|var2
argument_list|)
expr_stmt|;
name|this
operator|.
name|noActionTime
operator|=
literal|0
expr_stmt|;
block|}
block|}
end_class

end_unit

