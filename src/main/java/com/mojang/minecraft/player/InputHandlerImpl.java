begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|player
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|GameSettings
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|Minecraft
import|;
end_import

begin_class
specifier|public
class|class
name|InputHandlerImpl
extends|extends
name|InputHandler
block|{
specifier|public
name|InputHandlerImpl
parameter_list|(
name|GameSettings
name|gameSettings
parameter_list|)
block|{
name|settings
operator|=
name|gameSettings
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateMovement
parameter_list|(
name|int
name|hackMode
parameter_list|)
block|{
name|HackState
operator|=
name|hackMode
expr_stmt|;
if|if
condition|(
name|HackState
operator|==
literal|0
condition|)
block|{
name|xxa
operator|=
literal|0.0F
expr_stmt|;
name|yya
operator|=
literal|0.0F
expr_stmt|;
if|if
condition|(
name|keyStates
index|[
literal|0
index|]
condition|)
block|{
name|yya
operator|--
expr_stmt|;
block|}
if|if
condition|(
name|keyStates
index|[
literal|1
index|]
condition|)
block|{
name|yya
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|keyStates
index|[
literal|2
index|]
condition|)
block|{
name|xxa
operator|--
expr_stmt|;
block|}
if|if
condition|(
name|keyStates
index|[
literal|3
index|]
condition|)
block|{
name|xxa
operator|++
expr_stmt|;
block|}
name|jumping
operator|=
name|keyStates
index|[
literal|4
index|]
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|settings
operator|.
name|HacksEnabled
condition|)
block|{
if|if
condition|(
name|settings
operator|.
name|CanSpeed
condition|)
block|{
name|running
operator|=
name|keyStates
index|[
literal|5
index|]
expr_stmt|;
name|Minecraft
operator|.
name|PlayerIsRunning
operator|=
name|keyStates
index|[
literal|5
index|]
expr_stmt|;
block|}
name|flyingUp
operator|=
name|keyStates
index|[
literal|6
index|]
expr_stmt|;
name|flyingDown
operator|=
name|keyStates
index|[
literal|7
index|]
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|boolean
index|[]
name|keylist
init|=
operator|new
name|boolean
index|[
literal|10
index|]
decl_stmt|;
specifier|public
specifier|final
name|void
name|clear
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
name|this
operator|.
name|keylist
index|[
name|i
index|]
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|public
specifier|final
name|void
name|calc
parameter_list|()
block|{
name|this
operator|.
name|move
operator|=
literal|0.0F
expr_stmt|;
name|this
operator|.
name|strafe
operator|=
literal|0.0F
expr_stmt|;
name|this
operator|.
name|elevate
operator|=
literal|0.0F
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|keylist
index|[
literal|0
index|]
operator|!=
literal|false
condition|)
name|this
operator|.
name|move
operator|-=
literal|1.0F
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|keylist
index|[
literal|1
index|]
operator|!=
literal|false
condition|)
name|this
operator|.
name|strafe
operator|-=
literal|1.0F
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|keylist
index|[
literal|2
index|]
operator|!=
literal|false
condition|)
name|this
operator|.
name|move
operator|+=
literal|1.0F
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|keylist
index|[
literal|3
index|]
operator|!=
literal|false
condition|)
name|this
operator|.
name|strafe
operator|+=
literal|1.0F
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|fly
condition|)
block|{
if|if
condition|(
name|this
operator|.
name|keylist
index|[
literal|5
index|]
operator|!=
literal|false
condition|)
name|this
operator|.
name|elevate
operator|+=
literal|0.3F
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|keylist
index|[
literal|6
index|]
operator|!=
literal|false
condition|)
name|this
operator|.
name|elevate
operator|-=
literal|0.3F
expr_stmt|;
block|}
name|this
operator|.
name|mult
operator|=
literal|1.0F
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|keylist
index|[
literal|7
index|]
operator|!=
literal|false
condition|)
name|this
operator|.
name|mult
operator|=
literal|5.0F
expr_stmt|;
if|else if
condition|(
name|this
operator|.
name|keylist
index|[
literal|8
index|]
operator|!=
literal|false
condition|)
name|this
operator|.
name|mult
operator|=
literal|2.0F
expr_stmt|;
name|this
operator|.
name|noclip
operator|=
name|this
operator|.
name|cliplock
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|keylist
index|[
literal|9
index|]
operator|!=
literal|false
condition|)
block|{
name|this
operator|.
name|noclip
operator|=
operator|(
operator|!
name|this
operator|.
name|noclip
operator|)
expr_stmt|;
block|}
name|this
operator|.
name|jump
operator|=
name|this
operator|.
name|keylist
index|[
literal|4
index|]
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|resetKeys
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|keyStates
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|keyStates
index|[
name|i
index|]
operator|=
literal|false
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setKeyState
parameter_list|(
name|int
name|key
parameter_list|,
name|boolean
name|state
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|HackState
operator|==
literal|0
condition|)
block|{
name|byte
name|index
init|=
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|key
operator|==
name|settings
operator|.
name|forwardKey
operator|.
name|key
condition|)
block|{
name|index
operator|=
literal|0
expr_stmt|;
block|}
if|if
condition|(
name|key
operator|==
name|settings
operator|.
name|backKey
operator|.
name|key
condition|)
block|{
name|index
operator|=
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|key
operator|==
name|settings
operator|.
name|leftKey
operator|.
name|key
condition|)
block|{
name|index
operator|=
literal|2
expr_stmt|;
block|}
if|if
condition|(
name|key
operator|==
name|settings
operator|.
name|rightKey
operator|.
name|key
condition|)
block|{
name|index
operator|=
literal|3
expr_stmt|;
block|}
if|if
condition|(
name|key
operator|==
name|settings
operator|.
name|jumpKey
operator|.
name|key
condition|)
block|{
name|index
operator|=
literal|4
expr_stmt|;
block|}
if|if
condition|(
name|key
operator|==
name|settings
operator|.
name|runKey
operator|.
name|key
condition|)
block|{
name|index
operator|=
literal|5
expr_stmt|;
block|}
if|if
condition|(
name|key
operator|==
name|settings
operator|.
name|flyUp
operator|.
name|key
condition|)
block|{
name|index
operator|=
literal|6
expr_stmt|;
block|}
if|if
condition|(
name|key
operator|==
name|settings
operator|.
name|flyDown
operator|.
name|key
condition|)
block|{
name|index
operator|=
literal|7
expr_stmt|;
block|}
if|if
condition|(
name|index
operator|>=
literal|0
condition|)
block|{
name|keyStates
index|[
name|index
index|]
operator|=
name|state
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|key
operator|==
name|settings
operator|.
name|forwardKey
operator|.
name|key
condition|)
name|this
operator|.
name|keylist
index|[
literal|0
index|]
operator|=
name|state
expr_stmt|;
if|if
condition|(
name|key
operator|==
name|settings
operator|.
name|leftKey
operator|.
name|key
condition|)
name|this
operator|.
name|keylist
index|[
literal|1
index|]
operator|=
name|state
expr_stmt|;
if|if
condition|(
name|key
operator|==
name|settings
operator|.
name|backKey
operator|.
name|key
condition|)
name|this
operator|.
name|keylist
index|[
literal|2
index|]
operator|=
name|state
expr_stmt|;
if|if
condition|(
name|key
operator|==
name|settings
operator|.
name|rightKey
operator|.
name|key
condition|)
name|this
operator|.
name|keylist
index|[
literal|3
index|]
operator|=
name|state
expr_stmt|;
if|if
condition|(
name|key
operator|==
literal|57
condition|)
name|this
operator|.
name|keylist
index|[
literal|4
index|]
operator|=
name|state
expr_stmt|;
if|if
condition|(
name|key
operator|==
literal|16
condition|)
name|this
operator|.
name|keylist
index|[
literal|5
index|]
operator|=
name|state
expr_stmt|;
if|if
condition|(
name|key
operator|==
literal|18
condition|)
name|this
operator|.
name|keylist
index|[
literal|6
index|]
operator|=
name|state
expr_stmt|;
if|if
condition|(
name|key
operator|==
literal|42
condition|)
name|this
operator|.
name|keylist
index|[
literal|7
index|]
operator|=
name|state
expr_stmt|;
if|if
condition|(
name|key
operator|==
literal|29
condition|)
name|this
operator|.
name|keylist
index|[
literal|8
index|]
operator|=
name|state
expr_stmt|;
if|if
condition|(
name|key
operator|==
literal|45
condition|)
name|this
operator|.
name|keylist
index|[
literal|9
index|]
operator|=
name|state
expr_stmt|;
if|if
condition|(
operator|(
name|key
operator|==
literal|60
operator|)
operator|&&
operator|(
name|state
operator|)
condition|)
name|this
operator|.
name|cliplock
operator|=
operator|(
operator|!
name|this
operator|.
name|cliplock
operator|)
expr_stmt|;
if|if
condition|(
operator|(
name|key
operator|==
name|settings
operator|.
name|flyKey
operator|.
name|key
operator|)
operator|&&
operator|(
name|state
operator|)
condition|)
name|this
operator|.
name|fly
operator|=
operator|(
operator|!
name|this
operator|.
name|fly
operator|)
expr_stmt|;
block|}
block|}
specifier|private
name|boolean
index|[]
name|keyStates
init|=
operator|new
name|boolean
index|[
literal|100
index|]
decl_stmt|;
specifier|private
specifier|transient
name|GameSettings
name|settings
decl_stmt|;
block|}
end_class

end_unit

