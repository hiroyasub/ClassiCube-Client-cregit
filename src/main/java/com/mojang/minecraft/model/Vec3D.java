begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|model
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|util
operator|.
name|MathHelper
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|Vec3D
block|{
specifier|public
name|float
name|x
decl_stmt|;
specifier|public
name|float
name|y
decl_stmt|;
specifier|public
name|float
name|z
decl_stmt|;
specifier|public
name|Vec3D
parameter_list|(
name|float
name|var1
parameter_list|,
name|float
name|var2
parameter_list|,
name|float
name|var3
parameter_list|)
block|{
name|x
operator|=
name|var1
expr_stmt|;
name|y
operator|=
name|var2
expr_stmt|;
name|z
operator|=
name|var3
expr_stmt|;
block|}
specifier|public
specifier|final
name|Vec3D
name|add
parameter_list|(
name|float
name|var1
parameter_list|,
name|float
name|var2
parameter_list|,
name|float
name|var3
parameter_list|)
block|{
return|return
operator|new
name|Vec3D
argument_list|(
name|x
operator|+
name|var1
argument_list|,
name|y
operator|+
name|var2
argument_list|,
name|z
operator|+
name|var3
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|float
name|distance
parameter_list|(
name|Vec3D
name|var1
parameter_list|)
block|{
name|float
name|var2
init|=
name|var1
operator|.
name|x
operator|-
name|x
decl_stmt|;
name|float
name|var3
init|=
name|var1
operator|.
name|y
operator|-
name|y
decl_stmt|;
name|float
name|var4
init|=
name|var1
operator|.
name|z
operator|-
name|z
decl_stmt|;
return|return
name|MathHelper
operator|.
name|sqrt
argument_list|(
name|var2
operator|*
name|var2
operator|+
name|var3
operator|*
name|var3
operator|+
name|var4
operator|*
name|var4
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|float
name|distanceSquared
parameter_list|(
name|Vec3D
name|var1
parameter_list|)
block|{
name|float
name|var2
init|=
name|var1
operator|.
name|x
operator|-
name|x
decl_stmt|;
name|float
name|var3
init|=
name|var1
operator|.
name|y
operator|-
name|y
decl_stmt|;
name|float
name|var4
init|=
name|var1
operator|.
name|z
operator|-
name|z
decl_stmt|;
return|return
name|var2
operator|*
name|var2
operator|+
name|var3
operator|*
name|var3
operator|+
name|var4
operator|*
name|var4
return|;
block|}
specifier|public
specifier|final
name|Vec3D
name|getXIntersection
parameter_list|(
name|Vec3D
name|var1
parameter_list|,
name|float
name|var2
parameter_list|)
block|{
name|float
name|var3
init|=
name|var1
operator|.
name|x
operator|-
name|x
decl_stmt|;
name|float
name|var4
init|=
name|var1
operator|.
name|y
operator|-
name|y
decl_stmt|;
name|float
name|var5
init|=
name|var1
operator|.
name|z
operator|-
name|z
decl_stmt|;
return|return
name|var3
operator|*
name|var3
operator|<
literal|1.0E
operator|-
literal|7F
condition|?
literal|null
else|:
operator|(
name|var2
operator|=
operator|(
name|var2
operator|-
name|x
operator|)
operator|/
name|var3
operator|)
operator|>=
literal|0.0F
operator|&&
name|var2
operator|<=
literal|1.0F
condition|?
operator|new
name|Vec3D
argument_list|(
name|x
operator|+
name|var3
operator|*
name|var2
argument_list|,
name|y
operator|+
name|var4
operator|*
name|var2
argument_list|,
name|z
operator|+
name|var5
operator|*
name|var2
argument_list|)
else|:
literal|null
return|;
block|}
specifier|public
specifier|final
name|Vec3D
name|getYIntersection
parameter_list|(
name|Vec3D
name|var1
parameter_list|,
name|float
name|var2
parameter_list|)
block|{
name|float
name|var3
init|=
name|var1
operator|.
name|x
operator|-
name|x
decl_stmt|;
name|float
name|var4
init|=
name|var1
operator|.
name|y
operator|-
name|y
decl_stmt|;
name|float
name|var5
init|=
name|var1
operator|.
name|z
operator|-
name|z
decl_stmt|;
return|return
name|var4
operator|*
name|var4
operator|<
literal|1.0E
operator|-
literal|7F
condition|?
literal|null
else|:
operator|(
name|var2
operator|=
operator|(
name|var2
operator|-
name|y
operator|)
operator|/
name|var4
operator|)
operator|>=
literal|0.0F
operator|&&
name|var2
operator|<=
literal|1.0F
condition|?
operator|new
name|Vec3D
argument_list|(
name|x
operator|+
name|var3
operator|*
name|var2
argument_list|,
name|y
operator|+
name|var4
operator|*
name|var2
argument_list|,
name|z
operator|+
name|var5
operator|*
name|var2
argument_list|)
else|:
literal|null
return|;
block|}
specifier|public
specifier|final
name|Vec3D
name|getZIntersection
parameter_list|(
name|Vec3D
name|var1
parameter_list|,
name|float
name|var2
parameter_list|)
block|{
name|float
name|var3
init|=
name|var1
operator|.
name|x
operator|-
name|x
decl_stmt|;
name|float
name|var4
init|=
name|var1
operator|.
name|y
operator|-
name|y
decl_stmt|;
name|float
name|var5
decl_stmt|;
return|return
operator|(
name|var5
operator|=
name|var1
operator|.
name|z
operator|-
name|z
operator|)
operator|*
name|var5
operator|<
literal|1.0E
operator|-
literal|7F
condition|?
literal|null
else|:
operator|(
name|var2
operator|=
operator|(
name|var2
operator|-
name|z
operator|)
operator|/
name|var5
operator|)
operator|>=
literal|0.0F
operator|&&
name|var2
operator|<=
literal|1.0F
condition|?
operator|new
name|Vec3D
argument_list|(
name|x
operator|+
name|var3
operator|*
name|var2
argument_list|,
name|y
operator|+
name|var4
operator|*
name|var2
argument_list|,
name|z
operator|+
name|var5
operator|*
name|var2
argument_list|)
else|:
literal|null
return|;
block|}
specifier|public
specifier|final
name|Vec3D
name|normalize
parameter_list|()
block|{
name|float
name|var1
init|=
name|MathHelper
operator|.
name|sqrt
argument_list|(
name|x
operator|*
name|x
operator|+
name|y
operator|*
name|y
operator|+
name|z
operator|*
name|z
argument_list|)
decl_stmt|;
return|return
operator|new
name|Vec3D
argument_list|(
name|x
operator|/
name|var1
argument_list|,
name|y
operator|/
name|var1
argument_list|,
name|z
operator|/
name|var1
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Vec3D
name|subtract
parameter_list|(
name|Vec3D
name|var1
parameter_list|)
block|{
return|return
operator|new
name|Vec3D
argument_list|(
name|x
operator|-
name|var1
operator|.
name|x
argument_list|,
name|y
operator|-
name|var1
operator|.
name|y
argument_list|,
name|z
operator|-
name|var1
operator|.
name|z
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"("
operator|+
name|x
operator|+
literal|", "
operator|+
name|y
operator|+
literal|", "
operator|+
name|z
operator|+
literal|")"
return|;
block|}
block|}
end_class

end_unit

