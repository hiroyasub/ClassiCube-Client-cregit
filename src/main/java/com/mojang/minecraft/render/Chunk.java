begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|tile
operator|.
name|Block
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|player
operator|.
name|Player
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|util
operator|.
name|MathHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|opengl
operator|.
name|GL11
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|Chunk
block|{
specifier|public
name|Level
name|level
decl_stmt|;
specifier|private
name|int
name|baseListId
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|static
name|ShapeRenderer
name|renderer
init|=
name|ShapeRenderer
operator|.
name|instance
decl_stmt|;
specifier|public
specifier|static
name|int
name|chunkUpdates
init|=
literal|0
decl_stmt|;
specifier|public
name|int
name|x
decl_stmt|;
specifier|public
name|int
name|y
decl_stmt|;
specifier|public
name|int
name|z
decl_stmt|;
specifier|public
name|int
name|width
decl_stmt|;
specifier|public
name|int
name|height
decl_stmt|;
specifier|public
name|int
name|depth
decl_stmt|;
specifier|public
name|boolean
name|visible
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
index|[]
name|dirty
init|=
operator|new
name|boolean
index|[
literal|2
index|]
decl_stmt|;
specifier|public
name|boolean
name|loaded
decl_stmt|;
specifier|public
name|Chunk
parameter_list|(
name|Level
name|var1
parameter_list|,
name|int
name|var2
parameter_list|,
name|int
name|var3
parameter_list|,
name|int
name|var4
parameter_list|,
name|int
name|var5
parameter_list|,
name|int
name|var6
parameter_list|)
block|{
name|this
operator|.
name|level
operator|=
name|var1
expr_stmt|;
name|this
operator|.
name|x
operator|=
name|var2
expr_stmt|;
name|this
operator|.
name|y
operator|=
name|var3
expr_stmt|;
name|this
operator|.
name|z
operator|=
name|var4
expr_stmt|;
name|this
operator|.
name|width
operator|=
name|this
operator|.
name|height
operator|=
name|this
operator|.
name|depth
operator|=
literal|16
expr_stmt|;
name|MathHelper
operator|.
name|sqrt
argument_list|(
operator|(
name|float
operator|)
operator|(
name|this
operator|.
name|width
operator|*
name|this
operator|.
name|width
operator|+
name|this
operator|.
name|height
operator|*
name|this
operator|.
name|height
operator|+
name|this
operator|.
name|depth
operator|*
name|this
operator|.
name|depth
operator|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|baseListId
operator|=
name|var6
expr_stmt|;
name|this
operator|.
name|setAllDirty
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|final
name|void
name|update
parameter_list|()
block|{
operator|++
name|chunkUpdates
expr_stmt|;
name|int
name|X
init|=
name|this
operator|.
name|x
decl_stmt|;
name|int
name|Y
init|=
name|this
operator|.
name|y
decl_stmt|;
name|int
name|Z
init|=
name|this
operator|.
name|z
decl_stmt|;
name|int
name|var4
init|=
name|this
operator|.
name|x
operator|+
name|this
operator|.
name|width
decl_stmt|;
name|int
name|var5
init|=
name|this
operator|.
name|y
operator|+
name|this
operator|.
name|height
decl_stmt|;
name|int
name|var6
init|=
name|this
operator|.
name|z
operator|+
name|this
operator|.
name|depth
decl_stmt|;
name|int
name|var7
decl_stmt|;
for|for
control|(
name|var7
operator|=
literal|0
init|;
name|var7
operator|<
literal|2
condition|;
operator|++
name|var7
control|)
block|{
name|this
operator|.
name|dirty
index|[
name|var7
index|]
operator|=
literal|true
expr_stmt|;
block|}
for|for
control|(
name|var7
operator|=
literal|0
init|;
name|var7
operator|<
literal|2
condition|;
operator|++
name|var7
control|)
block|{
name|boolean
name|var8
init|=
literal|false
decl_stmt|;
name|boolean
name|var9
init|=
literal|false
decl_stmt|;
name|GL11
operator|.
name|glNewList
argument_list|(
name|this
operator|.
name|baseListId
operator|+
name|var7
argument_list|,
literal|4864
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|begin
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|var10
init|=
name|X
init|;
name|var10
operator|<
name|var4
condition|;
operator|++
name|var10
control|)
block|{
for|for
control|(
name|int
name|var11
init|=
name|Y
init|;
name|var11
operator|<
name|var5
condition|;
operator|++
name|var11
control|)
block|{
for|for
control|(
name|int
name|var12
init|=
name|Z
init|;
name|var12
operator|<
name|var6
condition|;
operator|++
name|var12
control|)
block|{
name|int
name|var13
decl_stmt|;
if|if
condition|(
operator|(
name|var13
operator|=
name|this
operator|.
name|level
operator|.
name|getTile
argument_list|(
name|var10
argument_list|,
name|var11
argument_list|,
name|var12
argument_list|)
operator|)
operator|>
literal|0
condition|)
block|{
name|Block
name|var14
decl_stmt|;
if|if
condition|(
operator|(
name|var14
operator|=
name|Block
operator|.
name|blocks
index|[
name|var13
index|]
operator|)
operator|.
name|getRenderPass
argument_list|()
operator|!=
name|var7
condition|)
block|{
name|var8
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|var9
operator||=
name|var14
operator|.
name|render
argument_list|(
name|this
operator|.
name|level
argument_list|,
name|var10
argument_list|,
name|var11
argument_list|,
name|var12
argument_list|,
name|renderer
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
name|renderer
operator|.
name|end
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glEndList
argument_list|()
expr_stmt|;
if|if
condition|(
name|var9
condition|)
block|{
name|this
operator|.
name|dirty
index|[
name|var7
index|]
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|var8
condition|)
block|{
break|break;
block|}
block|}
block|}
specifier|public
specifier|final
name|float
name|distanceSquared
parameter_list|(
name|Player
name|var1
parameter_list|)
block|{
name|float
name|var2
init|=
name|var1
operator|.
name|x
operator|-
operator|(
name|float
operator|)
name|this
operator|.
name|x
decl_stmt|;
name|float
name|var3
init|=
name|var1
operator|.
name|y
operator|-
operator|(
name|float
operator|)
name|this
operator|.
name|y
decl_stmt|;
name|float
name|var4
init|=
name|var1
operator|.
name|z
operator|-
operator|(
name|float
operator|)
name|this
operator|.
name|z
decl_stmt|;
return|return
name|var2
operator|*
name|var2
operator|+
name|var3
operator|*
name|var3
operator|+
name|var4
operator|*
name|var4
return|;
block|}
specifier|private
name|void
name|setAllDirty
parameter_list|()
block|{
for|for
control|(
name|int
name|var1
init|=
literal|0
init|;
name|var1
operator|<
literal|2
condition|;
operator|++
name|var1
control|)
block|{
name|this
operator|.
name|dirty
index|[
name|var1
index|]
operator|=
literal|true
expr_stmt|;
block|}
block|}
specifier|public
specifier|final
name|void
name|dispose
parameter_list|()
block|{
name|this
operator|.
name|setAllDirty
argument_list|()
expr_stmt|;
name|this
operator|.
name|level
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
specifier|final
name|int
name|appendLists
parameter_list|(
name|int
index|[]
name|var1
parameter_list|,
name|int
name|var2
parameter_list|,
name|int
name|var3
parameter_list|)
block|{
if|if
condition|(
operator|!
name|this
operator|.
name|visible
condition|)
block|{
return|return
name|var2
return|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|this
operator|.
name|dirty
index|[
name|var3
index|]
condition|)
block|{
name|var1
index|[
name|var2
operator|++
index|]
operator|=
name|this
operator|.
name|baseListId
operator|+
name|var3
expr_stmt|;
block|}
return|return
name|var2
return|;
block|}
block|}
specifier|public
specifier|final
name|void
name|clip
parameter_list|(
name|Frustrum
name|var1
parameter_list|)
block|{
name|this
operator|.
name|visible
operator|=
name|var1
operator|.
name|isBoxInFrustrum
argument_list|(
operator|(
name|float
operator|)
name|this
operator|.
name|x
argument_list|,
operator|(
name|float
operator|)
name|this
operator|.
name|y
argument_list|,
operator|(
name|float
operator|)
name|this
operator|.
name|z
argument_list|,
operator|(
name|float
operator|)
operator|(
name|this
operator|.
name|x
operator|+
name|this
operator|.
name|width
operator|)
argument_list|,
operator|(
name|float
operator|)
operator|(
name|this
operator|.
name|y
operator|+
name|this
operator|.
name|height
operator|)
argument_list|,
operator|(
name|float
operator|)
operator|(
name|this
operator|.
name|z
operator|+
name|this
operator|.
name|depth
operator|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

