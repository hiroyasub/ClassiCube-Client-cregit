begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|texture
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|tile
operator|.
name|Block
import|;
end_import

begin_class
specifier|public
class|class
name|TextureFireFX
extends|extends
name|TextureFX
block|{
specifier|protected
name|float
name|a
index|[]
decl_stmt|;
specifier|protected
name|float
name|b
index|[]
decl_stmt|;
specifier|public
name|TextureFireFX
parameter_list|()
block|{
name|super
argument_list|(
name|Block
operator|.
name|FIRE
operator|.
name|textureId
argument_list|)
expr_stmt|;
name|a
operator|=
operator|new
name|float
index|[
literal|320
index|]
expr_stmt|;
name|b
operator|=
operator|new
name|float
index|[
literal|320
index|]
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|animate
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|16
condition|;
name|i
operator|++
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|20
condition|;
name|j
operator|++
control|)
block|{
name|int
name|k
init|=
literal|18
decl_stmt|;
name|float
name|f
init|=
name|a
index|[
name|i
operator|+
operator|(
name|j
operator|+
literal|1
operator|)
operator|%
literal|20
operator|*
literal|16
index|]
operator|*
name|k
decl_stmt|;
for|for
control|(
name|int
name|i1
init|=
name|i
operator|-
literal|1
init|;
name|i1
operator|<=
name|i
operator|+
literal|1
condition|;
name|i1
operator|++
control|)
block|{
for|for
control|(
name|int
name|j1
init|=
name|j
init|;
name|j1
operator|<=
name|j
operator|+
literal|1
condition|;
name|j1
operator|++
control|)
block|{
name|int
name|l1
init|=
name|i1
decl_stmt|;
name|int
name|j2
init|=
name|j1
decl_stmt|;
if|if
condition|(
name|l1
operator|>=
literal|0
operator|&&
name|j2
operator|>=
literal|0
operator|&&
name|l1
operator|<
literal|16
operator|&&
name|j2
operator|<
literal|20
condition|)
block|{
name|f
operator|+=
name|a
index|[
name|l1
operator|+
name|j2
operator|*
literal|16
index|]
expr_stmt|;
block|}
name|k
operator|++
expr_stmt|;
block|}
block|}
name|b
index|[
name|i
operator|+
name|j
operator|*
literal|16
index|]
operator|=
name|f
operator|/
operator|(
name|k
operator|*
literal|1.06F
operator|)
expr_stmt|;
if|if
condition|(
name|j
operator|>=
literal|19
condition|)
block|{
name|b
index|[
name|i
operator|+
name|j
operator|*
literal|16
index|]
operator|=
operator|(
name|float
operator|)
operator|(
name|Math
operator|.
name|random
argument_list|()
operator|*
name|Math
operator|.
name|random
argument_list|()
operator|*
name|Math
operator|.
name|random
argument_list|()
operator|*
literal|4D
operator|+
name|Math
operator|.
name|random
argument_list|()
operator|*
literal|0.1
operator|+
literal|0.2
operator|)
expr_stmt|;
block|}
block|}
block|}
name|float
name|af
index|[]
init|=
name|b
decl_stmt|;
name|b
operator|=
name|a
expr_stmt|;
name|a
operator|=
name|af
expr_stmt|;
for|for
control|(
name|int
name|l
init|=
literal|0
init|;
name|l
operator|<
literal|256
condition|;
name|l
operator|++
control|)
block|{
name|float
name|f1
init|=
name|a
index|[
name|l
index|]
operator|*
literal|1.8F
decl_stmt|;
if|if
condition|(
name|f1
operator|>
literal|1F
condition|)
block|{
name|f1
operator|=
literal|1F
expr_stmt|;
block|}
if|if
condition|(
name|f1
operator|<
literal|0F
condition|)
block|{
name|f1
operator|=
literal|0F
expr_stmt|;
block|}
name|float
name|f2
init|=
name|f1
decl_stmt|;
name|int
name|k1
init|=
operator|(
name|int
operator|)
operator|(
name|f2
operator|*
literal|155F
operator|+
literal|100F
operator|)
decl_stmt|;
name|int
name|i2
init|=
operator|(
name|int
operator|)
operator|(
name|f2
operator|*
name|f2
operator|*
literal|255F
operator|)
decl_stmt|;
name|int
name|k2
init|=
operator|(
name|int
operator|)
operator|(
name|f2
operator|*
name|f2
operator|*
name|f2
operator|*
name|f2
operator|*
name|f2
operator|*
name|f2
operator|*
name|f2
operator|*
name|f2
operator|*
name|f2
operator|*
name|f2
operator|*
literal|255F
operator|)
decl_stmt|;
name|char
name|c
init|=
literal|'\377'
decl_stmt|;
if|if
condition|(
name|f2
operator|<
literal|0.5F
condition|)
block|{
name|c
operator|=
literal|'\0'
expr_stmt|;
block|}
name|f2
operator|=
operator|(
name|f2
operator|-
literal|0.5F
operator|)
operator|*
literal|2F
expr_stmt|;
name|textureData
index|[
name|l
operator|*
literal|4
operator|+
literal|0
index|]
operator|=
operator|(
name|byte
operator|)
name|k1
expr_stmt|;
name|textureData
index|[
name|l
operator|*
literal|4
operator|+
literal|1
index|]
operator|=
operator|(
name|byte
operator|)
name|i2
expr_stmt|;
name|textureData
index|[
name|l
operator|*
literal|4
operator|+
literal|2
index|]
operator|=
operator|(
name|byte
operator|)
name|k2
expr_stmt|;
name|textureData
index|[
name|l
operator|*
literal|4
operator|+
literal|3
index|]
operator|=
operator|(
name|byte
operator|)
name|c
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

