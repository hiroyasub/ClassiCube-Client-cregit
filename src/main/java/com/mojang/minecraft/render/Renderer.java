begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|GameSettings
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|Minecraft
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|MovingObjectPosition
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|SelectionBoxData
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|liquid
operator|.
name|LiquidType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|tile
operator|.
name|Block
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|physics
operator|.
name|AABB
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|physics
operator|.
name|CustomAABB
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|player
operator|.
name|Player
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|util
operator|.
name|ColorCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|util
operator|.
name|MathHelper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|util
operator|.
name|Vec3D
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|FloatBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|BufferUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|opengl
operator|.
name|GL11
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|Renderer
block|{
comment|// TODO: adaptive chunk update rate, based on framerate
specifier|public
specifier|static
specifier|final
name|int
name|MAX_CHUNK_UPDATES_PER_FRAME
init|=
literal|4
decl_stmt|;
specifier|public
name|Minecraft
name|minecraft
decl_stmt|;
specifier|public
name|float
name|fogColorMultiplier
init|=
literal|1F
decl_stmt|;
specifier|public
name|boolean
name|displayActive
init|=
literal|false
decl_stmt|;
specifier|public
name|float
name|fogEnd
init|=
literal|0F
decl_stmt|;
specifier|public
name|HeldBlock
name|heldBlock
decl_stmt|;
specifier|public
name|int
name|levelTicks
decl_stmt|;
specifier|public
name|Entity
name|entity
init|=
literal|null
decl_stmt|;
specifier|public
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
specifier|public
name|float
name|fogRed
decl_stmt|;
specifier|public
name|float
name|fogBlue
decl_stmt|;
specifier|public
name|float
name|fogGreen
decl_stmt|;
specifier|private
specifier|final
name|FloatBuffer
name|buffer
init|=
name|BufferUtils
operator|.
name|createFloatBuffer
argument_list|(
literal|16
argument_list|)
decl_stmt|;
specifier|public
name|Renderer
parameter_list|(
name|Minecraft
name|minecraft
parameter_list|)
block|{
name|this
operator|.
name|minecraft
operator|=
name|minecraft
expr_stmt|;
name|heldBlock
operator|=
operator|new
name|HeldBlock
argument_list|(
name|minecraft
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|applyBobbing
parameter_list|(
name|float
name|delta
parameter_list|,
name|boolean
name|isEnabled
parameter_list|)
block|{
name|Player
name|player
init|=
name|minecraft
operator|.
name|player
decl_stmt|;
name|float
name|var2
init|=
name|player
operator|.
name|walkDist
operator|-
name|player
operator|.
name|walkDistO
decl_stmt|;
name|var2
operator|=
name|player
operator|.
name|walkDist
operator|+
name|var2
operator|*
name|delta
expr_stmt|;
name|float
name|newBob
init|=
name|player
operator|.
name|oBob
operator|+
operator|(
name|player
operator|.
name|bob
operator|-
name|player
operator|.
name|oBob
operator|)
operator|*
name|delta
decl_stmt|;
name|float
name|newTilt
init|=
name|player
operator|.
name|oTilt
operator|+
operator|(
name|player
operator|.
name|tilt
operator|-
name|player
operator|.
name|oTilt
operator|)
operator|*
name|delta
decl_stmt|;
if|if
condition|(
name|isEnabled
condition|)
block|{
name|GL11
operator|.
name|glTranslatef
argument_list|(
name|MathHelper
operator|.
name|sin
argument_list|(
name|var2
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
argument_list|)
operator|*
name|newBob
operator|*
literal|0.5F
argument_list|,
operator|-
name|Math
operator|.
name|abs
argument_list|(
name|MathHelper
operator|.
name|cos
argument_list|(
name|var2
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
argument_list|)
operator|*
name|newBob
argument_list|)
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
name|MathHelper
operator|.
name|sin
argument_list|(
name|var2
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
argument_list|)
operator|*
name|newBob
operator|*
literal|3F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|,
literal|1F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|MathHelper
operator|.
name|cos
argument_list|(
name|var2
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
operator|+
literal|0.2F
argument_list|)
operator|*
name|newBob
argument_list|)
operator|*
literal|5F
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
block|}
name|GL11
operator|.
name|glRotatef
argument_list|(
name|newTilt
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
block|}
specifier|private
name|FloatBuffer
name|createBuffer
parameter_list|(
name|float
name|var1
parameter_list|,
name|float
name|var2
parameter_list|,
name|float
name|var3
parameter_list|,
name|float
name|var4
parameter_list|)
block|{
name|buffer
operator|.
name|clear
argument_list|()
expr_stmt|;
name|buffer
operator|.
name|put
argument_list|(
name|var1
argument_list|)
operator|.
name|put
argument_list|(
name|var2
argument_list|)
operator|.
name|put
argument_list|(
name|var3
argument_list|)
operator|.
name|put
argument_list|(
name|var4
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|flip
argument_list|()
expr_stmt|;
return|return
name|buffer
return|;
block|}
specifier|public
specifier|final
name|void
name|enableGuiMode
parameter_list|()
block|{
name|int
name|var1
init|=
name|minecraft
operator|.
name|width
operator|*
literal|240
operator|/
name|minecraft
operator|.
name|height
decl_stmt|;
name|int
name|var2
init|=
name|minecraft
operator|.
name|height
operator|*
literal|240
operator|/
name|minecraft
operator|.
name|height
decl_stmt|;
name|GL11
operator|.
name|glClear
argument_list|(
name|GL11
operator|.
name|GL_DEPTH_BUFFER_BIT
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glMatrixMode
argument_list|(
name|GL11
operator|.
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glOrtho
argument_list|(
literal|0D
argument_list|,
name|var1
argument_list|,
name|var2
argument_list|,
literal|0D
argument_list|,
literal|100D
argument_list|,
literal|300D
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glMatrixMode
argument_list|(
name|GL11
operator|.
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glTranslatef
argument_list|(
literal|0F
argument_list|,
literal|0F
argument_list|,
operator|-
literal|200F
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Vec3D
name|getPlayerVector
parameter_list|(
name|float
name|delta
parameter_list|)
block|{
name|Player
name|player
init|=
name|minecraft
operator|.
name|player
decl_stmt|;
name|float
name|newX
init|=
name|player
operator|.
name|xo
operator|+
operator|(
name|player
operator|.
name|x
operator|-
name|player
operator|.
name|xo
operator|)
operator|*
name|delta
decl_stmt|;
name|float
name|newY
init|=
name|player
operator|.
name|yo
operator|+
operator|(
name|player
operator|.
name|y
operator|-
name|player
operator|.
name|yo
operator|)
operator|*
name|delta
decl_stmt|;
name|float
name|newZ
init|=
name|player
operator|.
name|zo
operator|+
operator|(
name|player
operator|.
name|z
operator|-
name|player
operator|.
name|zo
operator|)
operator|*
name|delta
decl_stmt|;
return|return
operator|new
name|Vec3D
argument_list|(
name|newX
argument_list|,
name|newY
argument_list|,
name|newZ
argument_list|)
return|;
block|}
comment|// SURVIVAL: hurt effect
specifier|public
name|void
name|hurtEffect
parameter_list|(
name|float
name|delta
parameter_list|)
block|{
name|Player
name|player
init|=
name|minecraft
operator|.
name|player
decl_stmt|;
name|float
name|var2
init|=
name|player
operator|.
name|hurtTime
operator|-
name|delta
decl_stmt|;
if|if
condition|(
name|player
operator|.
name|health
operator|<=
literal|0
condition|)
block|{
name|delta
operator|+=
name|player
operator|.
name|deathTime
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
literal|40F
operator|-
literal|8000F
operator|/
operator|(
name|delta
operator|+
literal|200F
operator|)
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|,
literal|1F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|>=
literal|0F
condition|)
block|{
name|var2
operator|/=
name|player
operator|.
name|hurtDuration
expr_stmt|;
name|var2
operator|=
name|MathHelper
operator|.
name|sin
argument_list|(
name|var2
operator|*
name|var2
operator|*
name|var2
operator|*
name|var2
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
argument_list|)
expr_stmt|;
name|delta
operator|=
name|player
operator|.
name|hurtDir
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
operator|-
name|player
operator|.
name|hurtDir
argument_list|,
literal|0F
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
operator|-
name|var2
operator|*
literal|14F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|,
literal|1F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
name|delta
argument_list|,
literal|0F
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|final
name|void
name|setLighting
parameter_list|(
name|boolean
name|var1
parameter_list|)
block|{
if|if
condition|(
operator|!
name|var1
condition|)
block|{
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_LIGHTING
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_LIGHT0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_LIGHTING
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_LIGHT0
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_COLOR_MATERIAL
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glColorMaterial
argument_list|(
name|GL11
operator|.
name|GL_FRONT_AND_BACK
argument_list|,
name|GL11
operator|.
name|GL_AMBIENT_AND_DIFFUSE
argument_list|)
expr_stmt|;
name|float
name|ambientBrightness
init|=
literal|0.7F
decl_stmt|;
name|float
name|diffuseBrightness
init|=
literal|0.3F
decl_stmt|;
name|Vec3D
name|sunPosition
init|=
operator|new
name|Vec3D
argument_list|(
literal|0F
argument_list|,
operator|-
literal|1F
argument_list|,
literal|0.5F
argument_list|)
operator|.
name|normalize
argument_list|()
decl_stmt|;
name|GL11
operator|.
name|glLight
argument_list|(
name|GL11
operator|.
name|GL_LIGHT0
argument_list|,
name|GL11
operator|.
name|GL_POSITION
argument_list|,
name|createBuffer
argument_list|(
name|sunPosition
operator|.
name|x
argument_list|,
name|sunPosition
operator|.
name|y
argument_list|,
name|sunPosition
operator|.
name|z
argument_list|,
literal|0F
argument_list|)
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glLight
argument_list|(
name|GL11
operator|.
name|GL_LIGHT0
argument_list|,
name|GL11
operator|.
name|GL_DIFFUSE
argument_list|,
name|createBuffer
argument_list|(
name|diffuseBrightness
argument_list|,
name|diffuseBrightness
argument_list|,
name|diffuseBrightness
argument_list|,
literal|1F
argument_list|)
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glLight
argument_list|(
name|GL11
operator|.
name|GL_LIGHT0
argument_list|,
name|GL11
operator|.
name|GL_AMBIENT
argument_list|,
name|createBuffer
argument_list|(
literal|0F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|,
literal|1F
argument_list|)
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glLightModel
argument_list|(
name|GL11
operator|.
name|GL_LIGHT_MODEL_AMBIENT
argument_list|,
name|createBuffer
argument_list|(
name|ambientBrightness
argument_list|,
name|ambientBrightness
argument_list|,
name|ambientBrightness
argument_list|,
literal|1F
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Sets fog parameters. Note: does NOT enable GL_FOG
specifier|public
name|void
name|updateFog
parameter_list|()
block|{
name|Player
name|player
init|=
name|minecraft
operator|.
name|player
decl_stmt|;
name|GL11
operator|.
name|glFog
argument_list|(
name|GL11
operator|.
name|GL_FOG_COLOR
argument_list|,
name|createBuffer
argument_list|(
name|fogRed
argument_list|,
name|fogBlue
argument_list|,
name|fogGreen
argument_list|,
literal|1F
argument_list|)
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glNormal3f
argument_list|(
literal|0F
argument_list|,
operator|-
literal|1F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glColor4f
argument_list|(
literal|1F
argument_list|,
literal|1F
argument_list|,
literal|1F
argument_list|,
literal|1F
argument_list|)
expr_stmt|;
name|Block
name|headBlock
init|=
name|Block
operator|.
name|blocks
index|[
name|minecraft
operator|.
name|level
operator|.
name|getTile
argument_list|(
operator|(
name|int
operator|)
name|player
operator|.
name|x
argument_list|,
operator|(
name|int
operator|)
operator|(
name|player
operator|.
name|y
operator|+
literal|0.12F
operator|)
argument_list|,
operator|(
name|int
operator|)
name|player
operator|.
name|z
argument_list|)
index|]
decl_stmt|;
if|if
condition|(
name|headBlock
operator|!=
literal|null
operator|&&
name|headBlock
operator|.
name|getLiquidType
argument_list|()
operator|!=
name|LiquidType
operator|.
name|notLiquid
condition|)
block|{
comment|// Colored fog when inside water/lava
name|LiquidType
name|liquidType
init|=
name|headBlock
operator|.
name|getLiquidType
argument_list|()
decl_stmt|;
name|GL11
operator|.
name|glFogi
argument_list|(
name|GL11
operator|.
name|GL_FOG_MODE
argument_list|,
name|GL11
operator|.
name|GL_EXP
argument_list|)
expr_stmt|;
if|if
condition|(
name|liquidType
operator|==
name|LiquidType
operator|.
name|water
condition|)
block|{
name|GL11
operator|.
name|glFogf
argument_list|(
name|GL11
operator|.
name|GL_FOG_DENSITY
argument_list|,
literal|0.1F
argument_list|)
expr_stmt|;
name|float
name|red
init|=
literal|0.4F
decl_stmt|;
name|float
name|green
init|=
literal|0.4F
decl_stmt|;
name|float
name|blue
init|=
literal|0.9F
decl_stmt|;
name|GL11
operator|.
name|glLightModel
argument_list|(
name|GL11
operator|.
name|GL_LIGHT_MODEL_AMBIENT
argument_list|,
name|createBuffer
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
literal|1F
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|liquidType
operator|==
name|LiquidType
operator|.
name|lava
condition|)
block|{
name|GL11
operator|.
name|glFogf
argument_list|(
name|GL11
operator|.
name|GL_FOG_DENSITY
argument_list|,
literal|2F
argument_list|)
expr_stmt|;
name|float
name|red
init|=
literal|0.4F
decl_stmt|;
name|float
name|green
init|=
literal|0.3F
decl_stmt|;
name|float
name|blue
init|=
literal|0.3F
decl_stmt|;
name|GL11
operator|.
name|glLightModel
argument_list|(
name|GL11
operator|.
name|GL_LIGHT_MODEL_AMBIENT
argument_list|,
name|createBuffer
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
literal|1F
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// Regular fog, when not in liquid
name|GL11
operator|.
name|glFogi
argument_list|(
name|GL11
operator|.
name|GL_FOG_MODE
argument_list|,
name|GL11
operator|.
name|GL_LINEAR
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glFogf
argument_list|(
name|GL11
operator|.
name|GL_FOG_START
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glFogf
argument_list|(
name|GL11
operator|.
name|GL_FOG_END
argument_list|,
name|fogEnd
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glLightModel
argument_list|(
name|GL11
operator|.
name|GL_LIGHT_MODEL_AMBIENT
argument_list|,
name|createBuffer
argument_list|(
literal|1F
argument_list|,
literal|1F
argument_list|,
literal|1F
argument_list|,
literal|1F
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_COLOR_MATERIAL
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glColorMaterial
argument_list|(
name|GL11
operator|.
name|GL_FRONT
argument_list|,
name|GL11
operator|.
name|GL_AMBIENT
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCamera
parameter_list|(
name|float
name|delta
parameter_list|,
name|MovingObjectPosition
name|selected
parameter_list|)
block|{
name|GameSettings
name|settings
init|=
name|minecraft
operator|.
name|settings
decl_stmt|;
name|Player
name|player
init|=
name|minecraft
operator|.
name|player
decl_stmt|;
name|applyBobbing
argument_list|(
name|delta
argument_list|,
name|settings
operator|.
name|viewBobbing
argument_list|)
expr_stmt|;
name|float
name|cameraDistance
init|=
operator|-
literal|5.1F
decl_stmt|;
if|if
condition|(
name|selected
operator|!=
literal|null
operator|&&
name|settings
operator|.
name|thirdPersonMode
operator|==
literal|2
condition|)
block|{
name|cameraDistance
operator|=
operator|-
operator|(
name|selected
operator|.
name|vec
operator|.
name|distance
argument_list|(
name|getPlayerVector
argument_list|(
name|delta
argument_list|)
argument_list|)
operator|-
literal|0.51F
operator|)
expr_stmt|;
if|if
condition|(
name|cameraDistance
operator|<
operator|-
literal|5.1F
condition|)
block|{
name|cameraDistance
operator|=
operator|-
literal|5.1F
expr_stmt|;
block|}
block|}
if|if
condition|(
name|settings
operator|.
name|thirdPersonMode
operator|==
literal|0
condition|)
block|{
name|GL11
operator|.
name|glTranslatef
argument_list|(
literal|0F
argument_list|,
literal|0F
argument_list|,
operator|-
literal|0.1F
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|GL11
operator|.
name|glTranslatef
argument_list|(
literal|0F
argument_list|,
literal|0F
argument_list|,
name|cameraDistance
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|settings
operator|.
name|thirdPersonMode
operator|==
literal|2
condition|)
block|{
name|GL11
operator|.
name|glRotatef
argument_list|(
operator|-
name|player
operator|.
name|xRotO
operator|+
operator|(
name|player
operator|.
name|xRot
operator|-
name|player
operator|.
name|xRotO
operator|)
operator|*
name|delta
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
name|player
operator|.
name|yRotO
operator|+
operator|(
name|player
operator|.
name|yRot
operator|-
name|player
operator|.
name|yRotO
operator|)
operator|*
name|delta
operator|+
literal|180
argument_list|,
literal|0F
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|GL11
operator|.
name|glRotatef
argument_list|(
name|player
operator|.
name|xRotO
operator|+
operator|(
name|player
operator|.
name|xRot
operator|-
name|player
operator|.
name|xRotO
operator|)
operator|*
name|delta
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
name|player
operator|.
name|yRotO
operator|+
operator|(
name|player
operator|.
name|yRot
operator|-
name|player
operator|.
name|yRotO
operator|)
operator|*
name|delta
argument_list|,
literal|0F
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
block|}
name|float
name|cameraX
init|=
name|player
operator|.
name|xo
operator|+
operator|(
name|player
operator|.
name|x
operator|-
name|player
operator|.
name|xo
operator|)
operator|*
name|delta
decl_stmt|;
name|float
name|cameraY
init|=
name|player
operator|.
name|yo
operator|+
operator|(
name|player
operator|.
name|y
operator|-
name|player
operator|.
name|yo
operator|)
operator|*
name|delta
decl_stmt|;
name|float
name|cameraZ
init|=
name|player
operator|.
name|zo
operator|+
operator|(
name|player
operator|.
name|z
operator|-
name|player
operator|.
name|zo
operator|)
operator|*
name|delta
decl_stmt|;
name|GL11
operator|.
name|glTranslatef
argument_list|(
operator|-
name|cameraX
argument_list|,
operator|-
name|cameraY
argument_list|,
operator|-
name|cameraZ
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|drawWeather
parameter_list|(
name|float
name|delta
parameter_list|,
name|ShapeRenderer
name|shapeRenderer
parameter_list|)
block|{
comment|// set up OpenGL state for drawing weather
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glNormal3f
argument_list|(
literal|0F
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glBlendFunc
argument_list|(
name|GL11
operator|.
name|GL_SRC_ALPHA
argument_list|,
name|GL11
operator|.
name|GL_ONE_MINUS_SRC_ALPHA
argument_list|)
expr_stmt|;
name|float
name|speed
init|=
literal|1F
decl_stmt|;
if|if
condition|(
name|minecraft
operator|.
name|isRaining
condition|)
block|{
name|GL11
operator|.
name|glBindTexture
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|,
name|minecraft
operator|.
name|textureManager
operator|.
name|load
argument_list|(
literal|"/rain.png"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|minecraft
operator|.
name|isSnowing
condition|)
block|{
name|GL11
operator|.
name|glBindTexture
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|,
name|minecraft
operator|.
name|textureManager
operator|.
name|load
argument_list|(
literal|"/snow.png"
argument_list|)
argument_list|)
expr_stmt|;
name|speed
operator|=
literal|0.2F
expr_stmt|;
block|}
name|int
name|playerX
init|=
operator|(
name|int
operator|)
name|minecraft
operator|.
name|player
operator|.
name|x
decl_stmt|;
name|int
name|playerY
init|=
operator|(
name|int
operator|)
name|minecraft
operator|.
name|player
operator|.
name|y
decl_stmt|;
name|int
name|playerZ
init|=
operator|(
name|int
operator|)
name|minecraft
operator|.
name|player
operator|.
name|z
decl_stmt|;
comment|// Go through all tile columns within 5 blocks of the player
for|for
control|(
name|int
name|x
init|=
name|playerX
operator|-
literal|5
init|;
name|x
operator|<=
name|playerX
operator|+
literal|5
condition|;
operator|++
name|x
control|)
block|{
for|for
control|(
name|int
name|z
init|=
name|playerZ
operator|-
literal|5
init|;
name|z
operator|<=
name|playerZ
operator|+
literal|5
condition|;
operator|++
name|z
control|)
block|{
name|int
name|groundLevel
init|=
name|minecraft
operator|.
name|level
operator|.
name|getHighestTile
argument_list|(
name|x
argument_list|,
name|z
argument_list|)
decl_stmt|;
name|int
name|lowestTile
init|=
name|playerY
operator|-
literal|5
decl_stmt|;
name|int
name|highestTile
init|=
name|playerY
operator|+
literal|5
decl_stmt|;
if|if
condition|(
name|lowestTile
operator|<
name|groundLevel
condition|)
block|{
name|lowestTile
operator|=
name|groundLevel
expr_stmt|;
block|}
if|if
condition|(
name|highestTile
operator|<
name|groundLevel
condition|)
block|{
name|highestTile
operator|=
name|groundLevel
expr_stmt|;
block|}
if|if
condition|(
name|lowestTile
operator|==
name|highestTile
condition|)
block|{
comment|// No weather needs to be drawn for this column
continue|continue;
block|}
name|float
name|var74
init|=
operator|(
operator|(
name|levelTicks
operator|+
name|x
operator|*
literal|3121
operator|+
name|z
operator|*
literal|418711
operator|)
operator|%
literal|32
operator|+
name|delta
operator|)
operator|/
literal|32F
operator|*
name|speed
decl_stmt|;
name|float
name|var124
init|=
name|x
operator|+
literal|0.5F
operator|-
name|minecraft
operator|.
name|player
operator|.
name|x
decl_stmt|;
name|float
name|var35
init|=
name|z
operator|+
literal|0.5F
operator|-
name|minecraft
operator|.
name|player
operator|.
name|z
decl_stmt|;
name|float
name|var92
init|=
name|MathHelper
operator|.
name|sqrt
argument_list|(
name|var124
operator|*
name|var124
operator|+
name|var35
operator|*
name|var35
argument_list|)
operator|/
literal|5
decl_stmt|;
name|GL11
operator|.
name|glColor4f
argument_list|(
literal|1F
argument_list|,
literal|1F
argument_list|,
literal|1F
argument_list|,
operator|(
literal|1F
operator|-
name|var92
operator|*
name|var92
operator|)
operator|*
literal|0.7F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|begin
argument_list|()
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
argument_list|,
name|lowestTile
argument_list|,
name|z
argument_list|,
literal|0F
argument_list|,
name|lowestTile
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
operator|+
literal|1
argument_list|,
name|lowestTile
argument_list|,
name|z
operator|+
literal|1
argument_list|,
literal|2F
argument_list|,
name|lowestTile
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
operator|+
literal|1
argument_list|,
name|highestTile
argument_list|,
name|z
operator|+
literal|1
argument_list|,
literal|2F
argument_list|,
name|highestTile
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
argument_list|,
name|highestTile
argument_list|,
name|z
argument_list|,
literal|0F
argument_list|,
name|highestTile
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
argument_list|,
name|lowestTile
argument_list|,
name|z
operator|+
literal|1
argument_list|,
literal|0F
argument_list|,
name|lowestTile
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
operator|+
literal|1
argument_list|,
name|lowestTile
argument_list|,
name|z
argument_list|,
literal|2F
argument_list|,
name|lowestTile
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
operator|+
literal|1
argument_list|,
name|highestTile
argument_list|,
name|z
argument_list|,
literal|2F
argument_list|,
name|highestTile
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
argument_list|,
name|highestTile
argument_list|,
name|z
operator|+
literal|1
argument_list|,
literal|0F
argument_list|,
name|highestTile
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
block|}
comment|// Restore OpenGL state after drawing weather
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|drawWireframeBox
parameter_list|(
name|AABB
name|aabb
parameter_list|)
block|{
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glBlendFunc
argument_list|(
name|GL11
operator|.
name|GL_SRC_ALPHA
argument_list|,
name|GL11
operator|.
name|GL_ONE_MINUS_SRC_ALPHA
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glColor4f
argument_list|(
literal|0F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|,
literal|0.4F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glLineWidth
argument_list|(
literal|2F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDepthMask
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glBegin
argument_list|(
name|GL11
operator|.
name|GL_LINE_STRIP
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnd
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glBegin
argument_list|(
name|GL11
operator|.
name|GL_LINE_STRIP
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnd
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glBegin
argument_list|(
name|GL11
operator|.
name|GL_LINES
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnd
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glDepthMask
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_ALPHA_TEST
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|drawSelectionCuboid
parameter_list|(
name|SelectionBoxData
name|box
parameter_list|,
name|ShapeRenderer
name|shapeRenderer
parameter_list|)
block|{
name|CustomAABB
name|bounds
init|=
name|box
operator|.
name|bounds
decl_stmt|;
name|ColorCache
name|color
init|=
name|box
operator|.
name|color
decl_stmt|;
name|GL11
operator|.
name|glColor4f
argument_list|(
name|color
operator|.
name|R
argument_list|,
name|color
operator|.
name|G
argument_list|,
name|color
operator|.
name|B
argument_list|,
name|color
operator|.
name|A
argument_list|)
expr_stmt|;
comment|// Front Face
comment|// Bottom Left
name|shapeRenderer
operator|.
name|begin
argument_list|()
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Bottom Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Top Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Top Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Back Face
comment|// Bottom Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Top Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Top Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Bottom Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Top Face
comment|// Top Left
comment|// Bottom Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Bottom Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Top Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Bottom Face
comment|// Top Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Top Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Bottom Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Bottom Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Right face
comment|// Bottom Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Top Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Top Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Bottom Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Left Face
comment|// Bottom Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Bottom Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Top Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Top Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glColor4f
argument_list|(
name|color
operator|.
name|R
argument_list|,
name|color
operator|.
name|G
argument_list|,
name|color
operator|.
name|B
argument_list|,
name|color
operator|.
name|A
operator|+
literal|0.2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|startDrawing
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
name|shapeRenderer
operator|.
name|startDrawing
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
name|shapeRenderer
operator|.
name|startDrawing
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

