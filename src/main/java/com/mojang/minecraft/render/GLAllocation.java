begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteOrder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|FloatBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|IntBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|opengl
operator|.
name|GL11
import|;
end_import

begin_class
specifier|public
class|class
name|GLAllocation
block|{
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|Integer
argument_list|,
name|Integer
argument_list|>
name|displayLists
init|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|?
argument_list|>
name|textures
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
specifier|public
specifier|static
specifier|synchronized
name|ByteBuffer
name|createDirectByteBuffer
parameter_list|(
name|int
name|par0
parameter_list|)
block|{
return|return
name|ByteBuffer
operator|.
name|allocateDirect
argument_list|(
name|par0
argument_list|)
operator|.
name|order
argument_list|(
name|ByteOrder
operator|.
name|nativeOrder
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|FloatBuffer
name|createDirectFloatBuffer
parameter_list|(
name|int
name|par0
parameter_list|)
block|{
return|return
name|createDirectByteBuffer
argument_list|(
name|par0
operator|<<
literal|2
argument_list|)
operator|.
name|asFloatBuffer
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|IntBuffer
name|createDirectIntBuffer
parameter_list|(
name|int
name|par0
parameter_list|)
block|{
return|return
name|createDirectByteBuffer
argument_list|(
name|par0
operator|<<
literal|2
argument_list|)
operator|.
name|asIntBuffer
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|synchronized
name|void
name|deleteDisplayLists
parameter_list|(
name|int
name|par0
parameter_list|)
block|{
name|GL11
operator|.
name|glDeleteLists
argument_list|(
name|par0
argument_list|,
name|displayLists
operator|.
name|remove
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|par0
argument_list|)
argument_list|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
specifier|synchronized
name|void
name|deleteTextures
parameter_list|()
block|{
for|for
control|(
name|int
name|var0
init|=
literal|0
init|;
name|var0
operator|<
name|textures
operator|.
name|size
argument_list|()
condition|;
operator|++
name|var0
control|)
block|{
name|GL11
operator|.
name|glDeleteTextures
argument_list|(
operator|(
operator|(
name|Integer
operator|)
name|textures
operator|.
name|get
argument_list|(
name|var0
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|textures
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
specifier|synchronized
name|void
name|deleteTexturesAndDisplayLists
parameter_list|()
block|{
name|Iterator
argument_list|<
name|?
argument_list|>
name|var0
init|=
name|displayLists
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|var0
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Entry
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|var1
init|=
operator|(
name|Entry
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|var0
operator|.
name|next
argument_list|()
decl_stmt|;
name|GL11
operator|.
name|glDeleteLists
argument_list|(
operator|(
operator|(
name|Integer
operator|)
name|var1
operator|.
name|getKey
argument_list|()
operator|)
operator|.
name|intValue
argument_list|()
argument_list|,
operator|(
operator|(
name|Integer
operator|)
name|var1
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|displayLists
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteTextures
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
specifier|synchronized
name|int
name|generateDisplayLists
parameter_list|(
name|int
name|par0
parameter_list|)
block|{
name|int
name|var1
init|=
name|GL11
operator|.
name|glGenLists
argument_list|(
name|par0
argument_list|)
decl_stmt|;
name|displayLists
operator|.
name|put
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|var1
argument_list|)
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|par0
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|var1
return|;
block|}
block|}
end_class

end_unit

