begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
package|;
end_package

begin_class
specifier|public
class|class
name|Frustum
block|{
specifier|public
name|float
name|frustum
index|[]
index|[]
decl_stmt|;
specifier|public
name|float
name|projectionMatrix
index|[]
decl_stmt|;
specifier|public
name|float
name|modelViewMatrix
index|[]
decl_stmt|;
specifier|public
name|float
name|clippingMatrix
index|[]
decl_stmt|;
specifier|public
name|Frustum
parameter_list|()
block|{
name|frustum
operator|=
operator|new
name|float
index|[
literal|16
index|]
index|[
literal|16
index|]
expr_stmt|;
name|projectionMatrix
operator|=
operator|new
name|float
index|[
literal|16
index|]
expr_stmt|;
name|modelViewMatrix
operator|=
operator|new
name|float
index|[
literal|16
index|]
expr_stmt|;
name|clippingMatrix
operator|=
operator|new
name|float
index|[
literal|16
index|]
expr_stmt|;
block|}
comment|/**      * Returns true if the box is inside all 6 clipping planes, otherwise returns false.      */
specifier|public
name|boolean
name|isBoxInFrustum
parameter_list|(
name|float
name|F0
parameter_list|,
name|float
name|F1
parameter_list|,
name|float
name|F2
parameter_list|,
name|float
name|F3
parameter_list|,
name|float
name|F4
parameter_list|,
name|float
name|F5
parameter_list|)
block|{
specifier|final
name|float
name|frustum00F0
init|=
name|frustum
index|[
literal|0
index|]
index|[
literal|0
index|]
operator|*
name|F0
decl_stmt|;
specifier|final
name|float
name|frustum01F1
init|=
name|frustum
index|[
literal|0
index|]
index|[
literal|1
index|]
operator|*
name|F1
decl_stmt|;
specifier|final
name|float
name|frustum02F2
init|=
name|frustum
index|[
literal|0
index|]
index|[
literal|2
index|]
operator|*
name|F2
decl_stmt|;
return|return
operator|!
operator|(
name|frustum00F0
operator|+
name|frustum01F1
operator|+
name|frustum02F2
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|3
index|]
operator|<=
literal|0
operator|&&
name|frustum
index|[
literal|0
index|]
index|[
literal|0
index|]
operator|*
name|F3
operator|+
name|frustum01F1
operator|+
name|frustum02F2
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|3
index|]
operator|<=
literal|0
operator|&&
name|frustum00F0
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|1
index|]
operator|*
name|F4
operator|+
name|frustum02F2
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|3
index|]
operator|<=
literal|0
operator|&&
name|frustum
index|[
literal|0
index|]
index|[
literal|0
index|]
operator|*
name|F3
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|1
index|]
operator|*
name|F4
operator|+
name|frustum02F2
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|3
index|]
operator|<=
literal|0
operator|&&
name|frustum00F0
operator|+
name|frustum01F1
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|2
index|]
operator|*
name|F5
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|3
index|]
operator|<=
literal|0
operator|&&
name|frustum
index|[
literal|0
index|]
index|[
literal|0
index|]
operator|*
name|F3
operator|+
name|frustum01F1
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|2
index|]
operator|*
name|F5
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|3
index|]
operator|<=
literal|0
operator|&&
name|frustum00F0
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|1
index|]
operator|*
name|F4
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|2
index|]
operator|*
name|F5
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|3
index|]
operator|<=
literal|0
operator|&&
name|frustum
index|[
literal|0
index|]
index|[
literal|0
index|]
operator|*
name|F3
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|1
index|]
operator|*
name|F4
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|2
index|]
operator|*
name|F5
operator|+
name|frustum
index|[
literal|0
index|]
index|[
literal|3
index|]
operator|<=
literal|0
operator|)
return|;
block|}
block|}
end_class

end_unit

