begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|tile
package|;
end_package

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|opengl
operator|.
name|GL11
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|ShapeRenderer
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|IceBlock
extends|extends
name|Block
block|{
name|int
name|ID
decl_stmt|;
name|boolean
name|showNeighborSides
init|=
literal|false
decl_stmt|;
specifier|protected
name|IceBlock
parameter_list|(
name|int
name|var1
parameter_list|,
name|int
name|var2
parameter_list|)
block|{
name|super
argument_list|(
name|var1
argument_list|,
name|var2
argument_list|)
expr_stmt|;
name|ID
operator|=
name|var1
expr_stmt|;
name|Block
operator|.
name|liquid
index|[
name|var1
index|]
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
specifier|final
name|boolean
name|isOpaque
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isSolid
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
specifier|final
name|boolean
name|canRenderSide
parameter_list|(
name|Level
name|level
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|,
name|int
name|side
parameter_list|)
block|{
name|int
name|var6
init|=
name|level
operator|.
name|getTile
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
decl_stmt|;
return|return
operator|!
name|this
operator|.
name|showNeighborSides
operator|&&
name|var6
operator|==
name|this
operator|.
name|id
condition|?
literal|false
else|:
name|super
operator|.
name|canRenderSide
argument_list|(
name|level
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|side
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|int
name|getRenderPass
parameter_list|()
block|{
return|return
literal|1
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|renderPreview
parameter_list|(
name|ShapeRenderer
name|var1
parameter_list|)
block|{
name|var1
operator|.
name|begin
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glBlendFunc
argument_list|(
literal|770
argument_list|,
literal|771
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|var2
init|=
literal|0
init|;
name|var2
operator|<
literal|6
condition|;
operator|++
name|var2
control|)
block|{
if|if
condition|(
name|var2
operator|==
literal|0
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|0.0F
argument_list|,
literal|1.0F
argument_list|,
literal|0.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|1
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|0.0F
argument_list|,
operator|-
literal|1.0F
argument_list|,
literal|0.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|2
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|0.0F
argument_list|,
literal|0.0F
argument_list|,
literal|1.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|3
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|0.0F
argument_list|,
literal|0.0F
argument_list|,
operator|-
literal|1.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|4
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|1.0F
argument_list|,
literal|0.0F
argument_list|,
literal|0.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|5
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
operator|-
literal|1.0F
argument_list|,
literal|0.0F
argument_list|,
literal|0.0F
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|renderInside
argument_list|(
name|var1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|var2
argument_list|)
expr_stmt|;
block|}
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|var1
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

