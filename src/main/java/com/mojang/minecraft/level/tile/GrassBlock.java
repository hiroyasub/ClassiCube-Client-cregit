begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|tile
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|GrassBlock
extends|extends
name|Block
block|{
specifier|protected
name|GrassBlock
parameter_list|(
name|int
name|var1
parameter_list|)
block|{
name|super
argument_list|(
name|var1
argument_list|)
expr_stmt|;
name|this
operator|.
name|textureId
operator|=
literal|3
expr_stmt|;
name|this
operator|.
name|setPhysics
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|int
name|getDrop
parameter_list|()
block|{
return|return
name|DIRT
operator|.
name|getDrop
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
specifier|final
name|int
name|getTextureId
parameter_list|(
name|int
name|texture
parameter_list|)
block|{
return|return
name|texture
operator|==
literal|1
condition|?
literal|0
else|:
operator|(
name|texture
operator|==
literal|0
condition|?
literal|2
else|:
literal|3
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|void
name|update
parameter_list|(
name|Level
name|level
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|,
name|Random
name|rand
parameter_list|)
block|{
if|if
condition|(
name|rand
operator|.
name|nextInt
argument_list|(
literal|4
argument_list|)
operator|==
literal|0
condition|)
block|{
if|if
condition|(
operator|!
name|level
operator|.
name|isLit
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
condition|)
block|{
name|level
operator|.
name|setTile
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|DIRT
operator|.
name|id
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|int
name|var9
init|=
literal|0
init|;
name|var9
operator|<
literal|4
condition|;
operator|++
name|var9
control|)
block|{
name|int
name|var6
init|=
name|x
operator|+
name|rand
operator|.
name|nextInt
argument_list|(
literal|3
argument_list|)
operator|-
literal|1
decl_stmt|;
name|int
name|var7
init|=
name|y
operator|+
name|rand
operator|.
name|nextInt
argument_list|(
literal|5
argument_list|)
operator|-
literal|3
decl_stmt|;
name|int
name|var8
init|=
name|z
operator|+
name|rand
operator|.
name|nextInt
argument_list|(
literal|3
argument_list|)
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|level
operator|.
name|getTile
argument_list|(
name|var6
argument_list|,
name|var7
argument_list|,
name|var8
argument_list|)
operator|==
name|DIRT
operator|.
name|id
operator|&&
name|level
operator|.
name|isLit
argument_list|(
name|var6
argument_list|,
name|var7
argument_list|,
name|var8
argument_list|)
condition|)
block|{
name|level
operator|.
name|setTile
argument_list|(
name|var6
argument_list|,
name|var7
argument_list|,
name|var8
argument_list|,
name|DIRT
operator|.
name|id
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

