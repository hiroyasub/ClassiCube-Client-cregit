begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|tile
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|MovingObjectPosition
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|model
operator|.
name|Vec3D
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|phys
operator|.
name|AABB
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|ShapeRenderer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|ColorCache
import|;
end_import

begin_class
specifier|public
class|class
name|BlockModelRenderer
block|{
specifier|public
name|BlockModelRenderer
parameter_list|(
name|int
name|id
parameter_list|)
block|{
name|this
operator|.
name|textureId
operator|=
name|id
expr_stmt|;
name|setBounds
argument_list|(
literal|0.0F
argument_list|,
literal|0.0F
argument_list|,
literal|0.0F
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|textureId
decl_stmt|;
specifier|public
name|float
name|x1
decl_stmt|;
specifier|public
name|float
name|y1
decl_stmt|;
specifier|public
name|float
name|z1
decl_stmt|;
specifier|public
name|float
name|x2
decl_stmt|;
specifier|public
name|float
name|y2
decl_stmt|;
specifier|public
name|float
name|z2
decl_stmt|;
specifier|protected
name|void
name|setBounds
parameter_list|(
name|float
name|x1
parameter_list|,
name|float
name|y1
parameter_list|,
name|float
name|z1
parameter_list|,
name|float
name|x2
parameter_list|,
name|float
name|y2
parameter_list|,
name|float
name|z2
parameter_list|)
block|{
name|this
operator|.
name|x1
operator|=
name|x1
expr_stmt|;
name|this
operator|.
name|y1
operator|=
name|y1
expr_stmt|;
name|this
operator|.
name|z1
operator|=
name|z1
expr_stmt|;
name|this
operator|.
name|x2
operator|=
name|x2
expr_stmt|;
name|this
operator|.
name|y2
operator|=
name|y2
expr_stmt|;
name|this
operator|.
name|z2
operator|=
name|z2
expr_stmt|;
block|}
specifier|public
name|void
name|renderFullbright
parameter_list|(
name|ShapeRenderer
name|shapeRenderer
parameter_list|)
block|{
name|float
name|red
init|=
literal|0.5F
decl_stmt|;
name|float
name|green
init|=
literal|0.8F
decl_stmt|;
name|float
name|blue
init|=
literal|0.6F
decl_stmt|;
name|shapeRenderer
operator|.
name|color
argument_list|(
name|red
argument_list|,
name|red
argument_list|,
name|red
argument_list|)
expr_stmt|;
name|renderInside
argument_list|(
name|shapeRenderer
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|color
argument_list|(
literal|1.0F
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|)
expr_stmt|;
name|renderInside
argument_list|(
name|shapeRenderer
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|color
argument_list|(
name|green
argument_list|,
name|green
argument_list|,
name|green
argument_list|)
expr_stmt|;
name|renderInside
argument_list|(
name|shapeRenderer
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|color
argument_list|(
name|green
argument_list|,
name|green
argument_list|,
name|green
argument_list|)
expr_stmt|;
name|renderInside
argument_list|(
name|shapeRenderer
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|color
argument_list|(
name|blue
argument_list|,
name|blue
argument_list|,
name|blue
argument_list|)
expr_stmt|;
name|renderInside
argument_list|(
name|shapeRenderer
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|color
argument_list|(
name|blue
argument_list|,
name|blue
argument_list|,
name|blue
argument_list|)
expr_stmt|;
name|renderInside
argument_list|(
name|shapeRenderer
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|ColorCache
name|getBrightness
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|)
block|{
return|return
operator|new
name|ColorCache
argument_list|(
literal|1.0f
argument_list|,
literal|1.0f
argument_list|,
literal|1.0f
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|canRenderSide
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|,
name|int
name|side
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|protected
name|int
name|getTextureId
parameter_list|(
name|int
name|texture
parameter_list|)
block|{
return|return
name|textureId
return|;
block|}
specifier|public
name|void
name|renderInside
parameter_list|(
name|ShapeRenderer
name|shapeRenderer
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|,
name|int
name|side
parameter_list|)
block|{
name|int
name|textureID1
init|=
name|getTextureId
argument_list|(
name|side
argument_list|)
decl_stmt|;
name|renderSide
argument_list|(
name|shapeRenderer
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|side
argument_list|,
name|textureID1
argument_list|)
expr_stmt|;
block|}
comment|// TODO.
specifier|public
name|void
name|renderSide
parameter_list|(
name|ShapeRenderer
name|shapeRenderer
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|,
name|int
name|side
parameter_list|,
name|int
name|textureID
parameter_list|)
block|{
name|int
name|var7
init|=
name|textureID
operator|%
literal|16
operator|<<
literal|4
decl_stmt|;
name|int
name|var8
init|=
name|textureID
operator|/
literal|16
operator|<<
literal|4
decl_stmt|;
name|float
name|var9
init|=
operator|(
name|float
operator|)
name|var7
operator|/
literal|256.0F
decl_stmt|;
name|float
name|var17
init|=
operator|(
operator|(
name|float
operator|)
name|var7
operator|+
literal|15.99F
operator|)
operator|/
literal|256.0F
decl_stmt|;
name|float
name|var10
init|=
operator|(
name|float
operator|)
name|var8
operator|/
literal|256.0F
decl_stmt|;
name|float
name|var11
init|=
operator|(
operator|(
name|float
operator|)
name|var8
operator|+
literal|15.99F
operator|)
operator|/
literal|256.0F
decl_stmt|;
if|if
condition|(
name|side
operator|>=
literal|2
operator|&&
name|textureID
operator|<
literal|240
condition|)
block|{
if|if
condition|(
name|this
operator|.
name|y1
operator|>=
literal|0.0F
operator|&&
name|this
operator|.
name|y2
operator|<=
literal|1.0F
condition|)
block|{
name|var10
operator|=
operator|(
operator|(
name|float
operator|)
name|var8
operator|+
name|this
operator|.
name|y1
operator|*
literal|15.99F
operator|)
operator|/
literal|256.0F
expr_stmt|;
name|var11
operator|=
operator|(
operator|(
name|float
operator|)
name|var8
operator|+
name|this
operator|.
name|y2
operator|*
literal|15.99F
operator|)
operator|/
literal|256.0F
expr_stmt|;
block|}
else|else
block|{
name|var10
operator|=
operator|(
name|float
operator|)
name|var8
operator|/
literal|256.0F
expr_stmt|;
name|var11
operator|=
operator|(
operator|(
name|float
operator|)
name|var8
operator|+
literal|15.99F
operator|)
operator|/
literal|256.0F
expr_stmt|;
block|}
block|}
name|float
name|var16
init|=
operator|(
name|float
operator|)
name|x
operator|+
name|this
operator|.
name|x1
decl_stmt|;
name|float
name|var14
init|=
operator|(
name|float
operator|)
name|x
operator|+
name|this
operator|.
name|x2
decl_stmt|;
name|float
name|var18
init|=
operator|(
name|float
operator|)
name|y
operator|+
name|this
operator|.
name|y1
decl_stmt|;
name|float
name|var15
init|=
operator|(
name|float
operator|)
name|y
operator|+
name|this
operator|.
name|y2
decl_stmt|;
name|float
name|var12
init|=
operator|(
name|float
operator|)
name|z
operator|+
name|this
operator|.
name|z1
decl_stmt|;
name|float
name|var13
init|=
operator|(
name|float
operator|)
name|z
operator|+
name|this
operator|.
name|z2
decl_stmt|;
if|if
condition|(
name|side
operator|==
literal|0
condition|)
block|{
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var18
argument_list|,
name|var13
argument_list|,
name|var9
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var18
argument_list|,
name|var12
argument_list|,
name|var9
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var18
argument_list|,
name|var12
argument_list|,
name|var17
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var18
argument_list|,
name|var13
argument_list|,
name|var17
argument_list|,
name|var11
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|side
operator|==
literal|1
condition|)
block|{
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var17
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var17
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var9
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var9
argument_list|,
name|var11
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|side
operator|==
literal|2
condition|)
block|{
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var17
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var9
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var18
argument_list|,
name|var12
argument_list|,
name|var9
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var18
argument_list|,
name|var12
argument_list|,
name|var17
argument_list|,
name|var11
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|side
operator|==
literal|3
condition|)
block|{
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var9
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var18
argument_list|,
name|var13
argument_list|,
name|var9
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var18
argument_list|,
name|var13
argument_list|,
name|var17
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var17
argument_list|,
name|var10
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|side
operator|==
literal|4
condition|)
block|{
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var17
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var9
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var18
argument_list|,
name|var12
argument_list|,
name|var9
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var18
argument_list|,
name|var13
argument_list|,
name|var17
argument_list|,
name|var11
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|side
operator|==
literal|5
condition|)
block|{
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var18
argument_list|,
name|var13
argument_list|,
name|var9
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var18
argument_list|,
name|var12
argument_list|,
name|var17
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var17
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var9
argument_list|,
name|var10
argument_list|)
expr_stmt|;
block|}
block|}
comment|// TODO.
specifier|public
name|void
name|renderSide
parameter_list|(
name|ShapeRenderer
name|var1
parameter_list|,
name|int
name|var2
parameter_list|,
name|int
name|var3
parameter_list|,
name|int
name|var4
parameter_list|,
name|int
name|var5
parameter_list|)
block|{
name|int
name|var6
decl_stmt|;
name|float
name|var7
decl_stmt|;
name|float
name|var8
init|=
operator|(
name|var7
operator|=
operator|(
name|float
operator|)
operator|(
operator|(
name|var6
operator|=
name|this
operator|.
name|getTextureId
argument_list|(
name|var5
argument_list|)
operator|)
operator|%
literal|16
operator|)
operator|/
literal|16.0F
operator|)
operator|+
literal|0.0624375F
decl_stmt|;
name|float
name|var16
decl_stmt|;
name|float
name|var9
init|=
operator|(
name|var16
operator|=
operator|(
name|float
operator|)
operator|(
name|var6
operator|/
literal|16
operator|)
operator|/
literal|16.0F
operator|)
operator|+
literal|0.0624375F
decl_stmt|;
name|float
name|var10
init|=
operator|(
name|float
operator|)
name|var2
operator|+
name|this
operator|.
name|x1
decl_stmt|;
name|float
name|var14
init|=
operator|(
name|float
operator|)
name|var2
operator|+
name|this
operator|.
name|x2
decl_stmt|;
name|float
name|var11
init|=
operator|(
name|float
operator|)
name|var3
operator|+
name|this
operator|.
name|y1
decl_stmt|;
name|float
name|var15
init|=
operator|(
name|float
operator|)
name|var3
operator|+
name|this
operator|.
name|y2
decl_stmt|;
name|float
name|var12
init|=
operator|(
name|float
operator|)
name|var4
operator|+
name|this
operator|.
name|z1
decl_stmt|;
name|float
name|var13
init|=
operator|(
name|float
operator|)
name|var4
operator|+
name|this
operator|.
name|z2
decl_stmt|;
if|if
condition|(
name|var5
operator|==
literal|0
condition|)
block|{
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var11
argument_list|,
name|var13
argument_list|,
name|var8
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var11
argument_list|,
name|var12
argument_list|,
name|var8
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var11
argument_list|,
name|var12
argument_list|,
name|var7
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var11
argument_list|,
name|var13
argument_list|,
name|var7
argument_list|,
name|var9
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|1
condition|)
block|{
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var7
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var7
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var8
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var8
argument_list|,
name|var9
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|2
condition|)
block|{
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var11
argument_list|,
name|var12
argument_list|,
name|var8
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var11
argument_list|,
name|var12
argument_list|,
name|var7
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var7
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var8
argument_list|,
name|var16
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|3
condition|)
block|{
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var8
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var11
argument_list|,
name|var13
argument_list|,
name|var8
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var11
argument_list|,
name|var13
argument_list|,
name|var7
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var7
argument_list|,
name|var16
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|4
condition|)
block|{
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var11
argument_list|,
name|var13
argument_list|,
name|var8
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var11
argument_list|,
name|var12
argument_list|,
name|var7
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var7
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var8
argument_list|,
name|var16
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|5
condition|)
block|{
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var7
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var8
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var11
argument_list|,
name|var12
argument_list|,
name|var8
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var11
argument_list|,
name|var13
argument_list|,
name|var7
argument_list|,
name|var9
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|AABB
name|getSelectionBox
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|)
block|{
name|AABB
name|aabb
init|=
operator|new
name|AABB
argument_list|(
operator|(
name|float
operator|)
name|x
operator|+
name|x1
argument_list|,
operator|(
name|float
operator|)
name|y
operator|+
name|y1
argument_list|,
operator|(
name|float
operator|)
name|z
operator|+
name|z1
argument_list|,
operator|(
name|float
operator|)
name|x
operator|+
name|x2
argument_list|,
operator|(
name|float
operator|)
name|y
operator|+
name|y2
argument_list|,
operator|(
name|float
operator|)
name|z
operator|+
name|z2
argument_list|)
decl_stmt|;
empty_stmt|;
return|return
name|aabb
return|;
block|}
specifier|public
name|AABB
name|getCollisionBox
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|)
block|{
name|AABB
name|aabb
init|=
operator|new
name|AABB
argument_list|(
operator|(
name|float
operator|)
name|x
operator|+
name|x1
argument_list|,
operator|(
name|float
operator|)
name|y
operator|+
name|y1
argument_list|,
operator|(
name|float
operator|)
name|z
operator|+
name|z1
argument_list|,
operator|(
name|float
operator|)
name|x
operator|+
name|x2
argument_list|,
operator|(
name|float
operator|)
name|y
operator|+
name|y2
argument_list|,
operator|(
name|float
operator|)
name|z
operator|+
name|z2
argument_list|)
decl_stmt|;
empty_stmt|;
return|return
name|aabb
return|;
block|}
specifier|public
name|void
name|renderPreview
parameter_list|(
name|ShapeRenderer
name|var1
parameter_list|)
block|{
name|var1
operator|.
name|begin
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|var2
init|=
literal|0
init|;
name|var2
operator|<
literal|6
condition|;
operator|++
name|var2
control|)
block|{
if|if
condition|(
name|var2
operator|==
literal|0
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|0.0F
argument_list|,
literal|1.0F
argument_list|,
literal|0.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|1
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|0.0F
argument_list|,
operator|-
literal|1.0F
argument_list|,
literal|0.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|2
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|0.0F
argument_list|,
literal|0.0F
argument_list|,
literal|1.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|3
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|0.0F
argument_list|,
literal|0.0F
argument_list|,
operator|-
literal|1.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|4
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|1.0F
argument_list|,
literal|0.0F
argument_list|,
literal|0.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|5
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
operator|-
literal|1.0F
argument_list|,
literal|0.0F
argument_list|,
literal|0.0F
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|renderInside
argument_list|(
name|var1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|var2
argument_list|)
expr_stmt|;
block|}
name|var1
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|final
name|MovingObjectPosition
name|clip
parameter_list|(
name|int
name|var1
parameter_list|,
name|int
name|var2
parameter_list|,
name|int
name|var3
parameter_list|,
name|Vec3D
name|var4
parameter_list|,
name|Vec3D
name|var5
parameter_list|)
block|{
name|var4
operator|=
name|var4
operator|.
name|add
argument_list|(
operator|(
name|float
operator|)
operator|(
operator|-
name|var1
operator|)
argument_list|,
operator|(
name|float
operator|)
operator|(
operator|-
name|var2
operator|)
argument_list|,
operator|(
name|float
operator|)
operator|(
operator|-
name|var3
operator|)
argument_list|)
expr_stmt|;
name|var5
operator|=
name|var5
operator|.
name|add
argument_list|(
operator|(
name|float
operator|)
operator|(
operator|-
name|var1
operator|)
argument_list|,
operator|(
name|float
operator|)
operator|(
operator|-
name|var2
operator|)
argument_list|,
operator|(
name|float
operator|)
operator|(
operator|-
name|var3
operator|)
argument_list|)
expr_stmt|;
name|Vec3D
name|var6
init|=
name|var4
operator|.
name|getXIntersection
argument_list|(
name|var5
argument_list|,
name|this
operator|.
name|x1
argument_list|)
decl_stmt|;
name|Vec3D
name|var7
init|=
name|var4
operator|.
name|getXIntersection
argument_list|(
name|var5
argument_list|,
name|this
operator|.
name|x2
argument_list|)
decl_stmt|;
name|Vec3D
name|var8
init|=
name|var4
operator|.
name|getYIntersection
argument_list|(
name|var5
argument_list|,
name|this
operator|.
name|y1
argument_list|)
decl_stmt|;
name|Vec3D
name|var9
init|=
name|var4
operator|.
name|getYIntersection
argument_list|(
name|var5
argument_list|,
name|this
operator|.
name|y2
argument_list|)
decl_stmt|;
name|Vec3D
name|var10
init|=
name|var4
operator|.
name|getZIntersection
argument_list|(
name|var5
argument_list|,
name|this
operator|.
name|z1
argument_list|)
decl_stmt|;
name|var5
operator|=
name|var4
operator|.
name|getZIntersection
argument_list|(
name|var5
argument_list|,
name|this
operator|.
name|z2
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|this
operator|.
name|xIntersects
argument_list|(
name|var6
argument_list|)
condition|)
block|{
name|var6
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|this
operator|.
name|xIntersects
argument_list|(
name|var7
argument_list|)
condition|)
block|{
name|var7
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|this
operator|.
name|yIntersects
argument_list|(
name|var8
argument_list|)
condition|)
block|{
name|var8
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|this
operator|.
name|yIntersects
argument_list|(
name|var9
argument_list|)
condition|)
block|{
name|var9
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|this
operator|.
name|zIntersects
argument_list|(
name|var10
argument_list|)
condition|)
block|{
name|var10
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|this
operator|.
name|zIntersects
argument_list|(
name|var5
argument_list|)
condition|)
block|{
name|var5
operator|=
literal|null
expr_stmt|;
block|}
name|Vec3D
name|var11
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|var6
operator|!=
literal|null
condition|)
block|{
name|var11
operator|=
name|var6
expr_stmt|;
block|}
if|if
condition|(
name|var7
operator|!=
literal|null
operator|&&
operator|(
name|var11
operator|==
literal|null
operator|||
name|var4
operator|.
name|distance
argument_list|(
name|var7
argument_list|)
operator|<
name|var4
operator|.
name|distance
argument_list|(
name|var11
argument_list|)
operator|)
condition|)
block|{
name|var11
operator|=
name|var7
expr_stmt|;
block|}
if|if
condition|(
name|var8
operator|!=
literal|null
operator|&&
operator|(
name|var11
operator|==
literal|null
operator|||
name|var4
operator|.
name|distance
argument_list|(
name|var8
argument_list|)
operator|<
name|var4
operator|.
name|distance
argument_list|(
name|var11
argument_list|)
operator|)
condition|)
block|{
name|var11
operator|=
name|var8
expr_stmt|;
block|}
if|if
condition|(
name|var9
operator|!=
literal|null
operator|&&
operator|(
name|var11
operator|==
literal|null
operator|||
name|var4
operator|.
name|distance
argument_list|(
name|var9
argument_list|)
operator|<
name|var4
operator|.
name|distance
argument_list|(
name|var11
argument_list|)
operator|)
condition|)
block|{
name|var11
operator|=
name|var9
expr_stmt|;
block|}
if|if
condition|(
name|var10
operator|!=
literal|null
operator|&&
operator|(
name|var11
operator|==
literal|null
operator|||
name|var4
operator|.
name|distance
argument_list|(
name|var10
argument_list|)
operator|<
name|var4
operator|.
name|distance
argument_list|(
name|var11
argument_list|)
operator|)
condition|)
block|{
name|var11
operator|=
name|var10
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|!=
literal|null
operator|&&
operator|(
name|var11
operator|==
literal|null
operator|||
name|var4
operator|.
name|distance
argument_list|(
name|var5
argument_list|)
operator|<
name|var4
operator|.
name|distance
argument_list|(
name|var11
argument_list|)
operator|)
condition|)
block|{
name|var11
operator|=
name|var5
expr_stmt|;
block|}
if|if
condition|(
name|var11
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
else|else
block|{
name|byte
name|var12
init|=
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|var11
operator|==
name|var6
condition|)
block|{
name|var12
operator|=
literal|4
expr_stmt|;
block|}
if|if
condition|(
name|var11
operator|==
name|var7
condition|)
block|{
name|var12
operator|=
literal|5
expr_stmt|;
block|}
if|if
condition|(
name|var11
operator|==
name|var8
condition|)
block|{
name|var12
operator|=
literal|0
expr_stmt|;
block|}
if|if
condition|(
name|var11
operator|==
name|var9
condition|)
block|{
name|var12
operator|=
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|var11
operator|==
name|var10
condition|)
block|{
name|var12
operator|=
literal|2
expr_stmt|;
block|}
if|if
condition|(
name|var11
operator|==
name|var5
condition|)
block|{
name|var12
operator|=
literal|3
expr_stmt|;
block|}
return|return
operator|new
name|MovingObjectPosition
argument_list|(
name|var1
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var12
argument_list|,
name|var11
operator|.
name|add
argument_list|(
operator|(
name|float
operator|)
name|var1
argument_list|,
operator|(
name|float
operator|)
name|var2
argument_list|,
operator|(
name|float
operator|)
name|var3
argument_list|)
argument_list|)
return|;
block|}
block|}
specifier|private
name|boolean
name|xIntersects
parameter_list|(
name|Vec3D
name|var1
parameter_list|)
block|{
return|return
name|var1
operator|==
literal|null
condition|?
literal|false
else|:
name|var1
operator|.
name|y
operator|>=
name|this
operator|.
name|y1
operator|&&
name|var1
operator|.
name|y
operator|<=
name|this
operator|.
name|y2
operator|&&
name|var1
operator|.
name|z
operator|>=
name|this
operator|.
name|z1
operator|&&
name|var1
operator|.
name|z
operator|<=
name|this
operator|.
name|z2
return|;
block|}
specifier|private
name|boolean
name|yIntersects
parameter_list|(
name|Vec3D
name|var1
parameter_list|)
block|{
return|return
name|var1
operator|==
literal|null
condition|?
literal|false
else|:
name|var1
operator|.
name|x
operator|>=
name|this
operator|.
name|x1
operator|&&
name|var1
operator|.
name|x
operator|<=
name|this
operator|.
name|x2
operator|&&
name|var1
operator|.
name|z
operator|>=
name|this
operator|.
name|z1
operator|&&
name|var1
operator|.
name|z
operator|<=
name|this
operator|.
name|z2
return|;
block|}
specifier|private
name|boolean
name|zIntersects
parameter_list|(
name|Vec3D
name|var1
parameter_list|)
block|{
return|return
name|var1
operator|==
literal|null
condition|?
literal|false
else|:
name|var1
operator|.
name|x
operator|>=
name|this
operator|.
name|x1
operator|&&
name|var1
operator|.
name|x
operator|<=
name|this
operator|.
name|x2
operator|&&
name|var1
operator|.
name|y
operator|>=
name|this
operator|.
name|y1
operator|&&
name|var1
operator|.
name|y
operator|<=
name|this
operator|.
name|y2
return|;
block|}
specifier|public
name|boolean
name|render
parameter_list|(
name|int
name|var2
parameter_list|,
name|int
name|var3
parameter_list|,
name|int
name|var4
parameter_list|,
name|ShapeRenderer
name|var5
parameter_list|)
block|{
name|boolean
name|var6
init|=
literal|false
decl_stmt|;
name|float
name|var7
init|=
literal|0.5F
decl_stmt|;
name|float
name|var8
init|=
literal|0.8F
decl_stmt|;
name|float
name|var9
init|=
literal|0.6F
decl_stmt|;
name|ColorCache
name|var10
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|canRenderSide
argument_list|(
name|var2
argument_list|,
name|var3
operator|-
literal|1
argument_list|,
name|var4
argument_list|,
literal|0
argument_list|)
condition|)
block|{
name|var10
operator|=
name|this
operator|.
name|getBrightness
argument_list|(
name|var2
argument_list|,
name|var3
operator|-
literal|1
argument_list|,
name|var4
argument_list|)
expr_stmt|;
name|var5
operator|.
name|color
argument_list|(
name|var7
operator|*
name|var10
operator|.
name|R
argument_list|,
name|var7
operator|*
name|var10
operator|.
name|G
argument_list|,
name|var7
operator|*
name|var10
operator|.
name|B
argument_list|)
expr_stmt|;
name|this
operator|.
name|renderInside
argument_list|(
name|var5
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|var6
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|canRenderSide
argument_list|(
name|var2
argument_list|,
name|var3
operator|+
literal|1
argument_list|,
name|var4
argument_list|,
literal|1
argument_list|)
condition|)
block|{
name|var10
operator|=
name|this
operator|.
name|getBrightness
argument_list|(
name|var2
argument_list|,
name|var3
operator|+
literal|1
argument_list|,
name|var4
argument_list|)
expr_stmt|;
name|var5
operator|.
name|color
argument_list|(
name|var10
operator|.
name|R
operator|*
literal|1.0F
argument_list|,
name|var10
operator|.
name|G
operator|*
literal|1.0F
argument_list|,
name|var10
operator|.
name|B
operator|*
literal|1.0F
argument_list|)
expr_stmt|;
name|this
operator|.
name|renderInside
argument_list|(
name|var5
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|var6
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|canRenderSide
argument_list|(
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
operator|-
literal|1
argument_list|,
literal|2
argument_list|)
condition|)
block|{
name|var10
operator|=
name|this
operator|.
name|getBrightness
argument_list|(
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
operator|-
literal|1
argument_list|)
expr_stmt|;
name|var5
operator|.
name|color
argument_list|(
name|var8
operator|*
name|var10
operator|.
name|R
argument_list|,
name|var8
operator|*
name|var10
operator|.
name|G
argument_list|,
name|var8
operator|*
name|var10
operator|.
name|B
argument_list|)
expr_stmt|;
name|this
operator|.
name|renderInside
argument_list|(
name|var5
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|var6
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|canRenderSide
argument_list|(
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
operator|+
literal|1
argument_list|,
literal|3
argument_list|)
condition|)
block|{
name|var10
operator|=
name|this
operator|.
name|getBrightness
argument_list|(
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
operator|+
literal|1
argument_list|)
expr_stmt|;
name|var5
operator|.
name|color
argument_list|(
name|var8
operator|*
name|var10
operator|.
name|R
argument_list|,
name|var8
operator|*
name|var10
operator|.
name|G
argument_list|,
name|var8
operator|*
name|var10
operator|.
name|B
argument_list|)
expr_stmt|;
name|this
operator|.
name|renderInside
argument_list|(
name|var5
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|var6
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|canRenderSide
argument_list|(
name|var2
operator|-
literal|1
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|4
argument_list|)
condition|)
block|{
name|var10
operator|=
name|this
operator|.
name|getBrightness
argument_list|(
name|var2
operator|-
literal|1
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|)
expr_stmt|;
name|var5
operator|.
name|color
argument_list|(
name|var9
operator|*
name|var10
operator|.
name|R
argument_list|,
name|var9
operator|*
name|var10
operator|.
name|G
argument_list|,
name|var9
operator|*
name|var10
operator|.
name|B
argument_list|)
expr_stmt|;
name|this
operator|.
name|renderInside
argument_list|(
name|var5
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|var6
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|canRenderSide
argument_list|(
name|var2
operator|+
literal|1
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|5
argument_list|)
condition|)
block|{
name|var10
operator|=
name|this
operator|.
name|getBrightness
argument_list|(
name|var2
operator|+
literal|1
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|)
expr_stmt|;
name|var5
operator|.
name|color
argument_list|(
name|var9
operator|*
name|var10
operator|.
name|R
argument_list|,
name|var9
operator|*
name|var10
operator|.
name|G
argument_list|,
name|var9
operator|*
name|var10
operator|.
name|B
argument_list|)
expr_stmt|;
name|this
operator|.
name|renderInside
argument_list|(
name|var5
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|var6
operator|=
literal|true
expr_stmt|;
block|}
return|return
name|var6
return|;
block|}
block|}
end_class

end_unit

