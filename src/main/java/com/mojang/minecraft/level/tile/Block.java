begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|tile
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|MovingObjectPosition
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|item
operator|.
name|Item
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|liquid
operator|.
name|LiquidType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|model
operator|.
name|Vec3D
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|particle
operator|.
name|ParticleManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|particle
operator|.
name|TerrainParticle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|phys
operator|.
name|AABB
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|ShapeRenderer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|ColorCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|sound
operator|.
name|StepSound
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|sound
operator|.
name|StepSoundStone
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|sound
operator|.
name|StepSoundSand
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_class
specifier|public
class|class
name|Block
block|{
specifier|protected
specifier|static
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
index|[]
name|blocks
init|=
operator|new
name|Block
index|[
literal|256
index|]
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|boolean
index|[]
name|physics
init|=
operator|new
name|boolean
index|[
literal|256
index|]
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|boolean
index|[]
name|liquid
init|=
operator|new
name|boolean
index|[
literal|256
index|]
decl_stmt|;
specifier|public
name|StepSound
name|stepSound
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StepSound
name|soundNone
init|=
operator|new
name|StepSound
argument_list|(
literal|"-"
argument_list|,
literal|0.0F
argument_list|,
literal|0.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StepSound
name|soundPowderFootstep
init|=
operator|new
name|StepSound
argument_list|(
literal|"stone"
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StepSound
name|soundWoodFootstep
init|=
operator|new
name|StepSound
argument_list|(
literal|"wood"
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StepSound
name|soundGravelFootstep
init|=
operator|new
name|StepSound
argument_list|(
literal|"gravel"
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StepSound
name|soundGrassFootstep
init|=
operator|new
name|StepSound
argument_list|(
literal|"grass"
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StepSound
name|soundStoneFootstep
init|=
operator|new
name|StepSound
argument_list|(
literal|"stone"
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StepSound
name|soundMetalFootstep
init|=
operator|new
name|StepSound
argument_list|(
literal|"stone"
argument_list|,
literal|1.0F
argument_list|,
literal|1.5F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StepSound
name|soundGlassFootstep
init|=
operator|new
name|StepSoundStone
argument_list|(
literal|"stone"
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StepSound
name|soundClothFootstep
init|=
operator|new
name|StepSound
argument_list|(
literal|"cloth"
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StepSound
name|soundSandFootstep
init|=
operator|new
name|StepSound
argument_list|(
literal|"sand"
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StepSound
name|soundSnowFootstep
init|=
operator|new
name|StepSound
argument_list|(
literal|"snow"
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StepSound
name|soundLadderFootstep
init|=
operator|new
name|StepSoundSand
argument_list|(
literal|"ladder"
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|)
decl_stmt|;
specifier|public
name|int
name|textureId
decl_stmt|;
specifier|public
specifier|final
name|int
name|id
decl_stmt|;
specifier|private
name|int
name|hardness
decl_stmt|;
specifier|private
name|boolean
name|explodes
decl_stmt|;
specifier|public
name|float
name|x1
decl_stmt|;
specifier|public
name|float
name|y1
decl_stmt|;
specifier|public
name|float
name|z1
decl_stmt|;
specifier|public
name|float
name|x2
decl_stmt|;
specifier|public
name|float
name|y2
decl_stmt|;
specifier|public
name|float
name|z2
decl_stmt|;
specifier|public
name|float
name|particleGravity
decl_stmt|;
specifier|public
name|boolean
name|isLiquid
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|STONE
init|=
operator|(
operator|new
name|StoneBlock
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|setTextureId
argument_list|(
literal|1
argument_list|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|1.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|GRASS
init|=
operator|(
operator|new
name|GrassBlock
argument_list|(
literal|2
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundGrassFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|2
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.6F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|DIRT
init|=
operator|(
operator|new
name|DirtBlock
argument_list|(
literal|3
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundGravelFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|2
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.5F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|COBLESTONE
init|=
operator|(
operator|new
name|CobblestoneBlock
argument_list|(
literal|4
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|16
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|1.5F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|WOOD
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|5
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundWoodFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|4
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|1.5F
argument_list|)
decl_stmt|;
comment|//Used to be known as 'WOOD'
specifier|public
specifier|static
specifier|final
name|Block
name|SAPLING
init|=
operator|(
operator|new
name|FlowerBlock
argument_list|(
literal|6
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundGrassFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|15
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|BEDROCK
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|7
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|17
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|999.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|WATER
init|=
operator|(
operator|new
name|LiquidBlock
argument_list|(
literal|8
argument_list|,
name|LiquidType
operator|.
name|water
argument_list|)
operator|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|100.0F
argument_list|)
operator|.
name|setLiquid
argument_list|(
literal|true
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|STATIONARY_WATER
init|=
operator|(
operator|new
name|StillLiquidBlock
argument_list|(
literal|9
argument_list|,
name|LiquidType
operator|.
name|water
argument_list|)
operator|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|100.0F
argument_list|)
operator|.
name|setLiquid
argument_list|(
literal|true
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|LAVA
init|=
operator|(
operator|new
name|LiquidBlock
argument_list|(
literal|10
argument_list|,
name|LiquidType
operator|.
name|lava
argument_list|)
operator|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|100.0F
argument_list|)
operator|.
name|setLiquid
argument_list|(
literal|true
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|STATIONARY_LAVA
init|=
operator|(
operator|new
name|StillLiquidBlock
argument_list|(
literal|11
argument_list|,
name|LiquidType
operator|.
name|lava
argument_list|)
operator|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|100.0F
argument_list|)
operator|.
name|setLiquid
argument_list|(
literal|true
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|SAND
init|=
operator|(
operator|new
name|SandBlock
argument_list|(
literal|12
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundSandFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|18
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.5F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|GRAVEL
init|=
operator|(
operator|new
name|SandBlock
argument_list|(
literal|13
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundGravelFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|19
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.6F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|GOLD_ORE
init|=
operator|(
operator|new
name|OreBlock
argument_list|(
literal|14
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|32
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.5F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|IRON_ORE
init|=
operator|(
operator|new
name|OreBlock
argument_list|(
literal|15
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|33
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.5F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|COAL_ORE
init|=
operator|(
operator|new
name|OreBlock
argument_list|(
literal|16
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|34
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.5F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|LOG
init|=
operator|(
operator|new
name|WoodBlock
argument_list|(
literal|17
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundWoodFootstep
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|2.5F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|LEAVES
init|=
operator|(
operator|new
name|LeavesBlock
argument_list|(
literal|18
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundGrassFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|22
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|0.4F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.2F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|SPONGE
init|=
operator|(
operator|new
name|SpongeBlock
argument_list|(
literal|19
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundGrassFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|48
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|0.9F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.6F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|GLASS
init|=
operator|(
operator|new
name|GlassBlock
argument_list|(
literal|20
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundGlassFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|49
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.3F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|RED_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|21
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|64
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|ORANGE_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|22
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|65
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|YELLOW_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|23
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|66
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|LIME_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|24
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|67
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|GREEN_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|25
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|68
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|AQUA_GREEN_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|26
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|69
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|CYAN_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|27
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|70
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|BLUE_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|28
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|71
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|PURPLE_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|29
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|72
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|INDIGO_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|30
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|73
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|VIOLET_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|31
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|74
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|MAGENTA_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|32
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|75
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|PINK_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|33
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|76
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|BLACK_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|34
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|77
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|GRAY_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|35
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|78
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|WHITE_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|36
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|79
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|DANDELION
init|=
operator|(
operator|new
name|FlowerBlock
argument_list|(
literal|37
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundGrassFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|13
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|ROSE
init|=
operator|(
operator|new
name|FlowerBlock
argument_list|(
literal|38
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundGrassFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|12
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|BROWN_MUSHROOM
init|=
operator|(
operator|new
name|MushroomBlock
argument_list|(
literal|39
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundGrassFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|29
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|RED_MUSHROOM
init|=
operator|(
operator|new
name|MushroomBlock
argument_list|(
literal|40
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundGrassFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|28
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|GOLD_BLOCK
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|41
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundMetalFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|24
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|3.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|IRON_BLOCK
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|42
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundMetalFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|23
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|5.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|DOUBLE_SLAB
init|=
operator|(
operator|new
name|SlabBlock
argument_list|(
literal|43
argument_list|,
literal|true
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|2.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|SLAB
init|=
operator|(
operator|new
name|SlabBlock
argument_list|(
literal|44
argument_list|,
literal|false
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|2.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|BRICK
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|45
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|7
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|2.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|TNT
init|=
operator|(
operator|new
name|TNTBlock
argument_list|(
literal|46
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundGrassFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|8
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|BOOKSHELF
init|=
operator|(
operator|new
name|BookshelfBlock
argument_list|(
literal|47
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundWoodFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|35
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|1.5F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|MOSSY_COBBLESTONE
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|48
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|36
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|1.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|OBSIDIAN
init|=
operator|(
operator|new
name|StoneBlock
argument_list|(
literal|49
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|37
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|10.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|COBBLESTONE_SLAB
init|=
operator|(
operator|new
name|CobblestoneSlabBlock
argument_list|(
literal|50
argument_list|,
literal|false
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|6
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|1.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|ROPE
init|=
operator|(
operator|new
name|RopeBlock
argument_list|(
literal|51
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|11
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|SANDSTONE
init|=
operator|(
operator|new
name|SandStoneBlock
argument_list|(
literal|52
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|41
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|3.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|SNOW
init|=
operator|new
name|SnowBlock
argument_list|(
literal|53
argument_list|)
operator|.
name|setStepSound
argument_list|(
name|soundSnowFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|50
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|3.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|FIRE
init|=
operator|new
name|FireBlock
argument_list|(
literal|54
argument_list|)
operator|.
name|setStepSound
argument_list|(
name|soundWoodFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|38
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.0F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|LIGHT_PINK_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|55
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|80
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|FOREST_GREEN_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|56
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|81
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|BROWN_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|57
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|82
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|DEEP_BLUE_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|58
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|83
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|TURQOISE_WOOL
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|59
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundClothFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|84
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|ICE
init|=
operator|(
operator|new
name|IceBlock
argument_list|(
literal|60
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundGlassFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|51
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|CERAMIC_TOLE
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|61
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|54
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|MAGMA
init|=
operator|(
operator|new
name|MagmaBlock
argument_list|(
literal|62
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|86
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|QUARTZ
init|=
operator|(
operator|new
name|MetalBlock
argument_list|(
literal|63
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|42
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|CRATE
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|64
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundWoodFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|53
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Block
name|STONEBRICK
init|=
operator|(
operator|new
name|Block
argument_list|(
literal|65
argument_list|)
operator|)
operator|.
name|setStepSound
argument_list|(
name|soundStoneFootstep
argument_list|)
operator|.
name|setTextureId
argument_list|(
literal|52
argument_list|)
operator|.
name|setParticleGravity
argument_list|(
literal|1.0F
argument_list|)
operator|.
name|setHardness
argument_list|(
literal|0.8F
argument_list|)
decl_stmt|;
specifier|public
name|Block
parameter_list|(
name|int
name|id
parameter_list|)
block|{
name|explodes
operator|=
literal|true
expr_stmt|;
name|blocks
index|[
name|id
index|]
operator|=
name|this
expr_stmt|;
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|setBounds
argument_list|(
literal|0.0F
argument_list|,
literal|0.0F
argument_list|,
literal|0.0F
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|)
expr_stmt|;
name|liquid
index|[
name|id
index|]
operator|=
literal|false
expr_stmt|;
name|isLiquid
operator|=
literal|false
expr_stmt|;
block|}
specifier|protected
name|Block
parameter_list|(
name|int
name|id
parameter_list|,
name|int
name|textureID
parameter_list|)
block|{
name|this
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|textureId
operator|=
name|textureID
expr_stmt|;
block|}
specifier|protected
name|Block
name|setTextureId
parameter_list|(
name|int
name|var1
parameter_list|)
block|{
name|this
operator|.
name|textureId
operator|=
name|var1
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|protected
name|Block
name|setHardness
parameter_list|(
name|float
name|var1
parameter_list|)
block|{
name|this
operator|.
name|hardness
operator|=
operator|(
name|int
operator|)
operator|(
name|var1
operator|*
literal|20.0F
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|protected
name|Block
name|setLiquid
parameter_list|(
name|boolean
name|var1
parameter_list|)
block|{
name|this
operator|.
name|isLiquid
operator|=
name|var1
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isLiquid
parameter_list|()
block|{
return|return
name|this
operator|.
name|isLiquid
return|;
block|}
specifier|protected
name|Block
name|setParticleGravity
parameter_list|(
name|float
name|var1
parameter_list|)
block|{
name|this
operator|.
name|particleGravity
operator|=
name|var1
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|protected
name|Block
name|setStepSound
parameter_list|(
name|StepSound
name|par1StepSound
parameter_list|)
block|{
name|this
operator|.
name|stepSound
operator|=
name|par1StepSound
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|canExplode
parameter_list|()
block|{
return|return
name|this
operator|.
name|explodes
return|;
block|}
specifier|public
name|boolean
name|canRenderSide
parameter_list|(
name|Level
name|level
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|,
name|int
name|side
parameter_list|)
block|{
return|return
operator|!
name|level
operator|.
name|isSolidTile
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|MovingObjectPosition
name|clip
parameter_list|(
name|int
name|var1
parameter_list|,
name|int
name|var2
parameter_list|,
name|int
name|var3
parameter_list|,
name|Vec3D
name|var4
parameter_list|,
name|Vec3D
name|var5
parameter_list|)
block|{
name|var4
operator|=
name|var4
operator|.
name|add
argument_list|(
operator|(
operator|-
name|var1
operator|)
argument_list|,
operator|(
operator|-
name|var2
operator|)
argument_list|,
operator|(
operator|-
name|var3
operator|)
argument_list|)
expr_stmt|;
name|var5
operator|=
name|var5
operator|.
name|add
argument_list|(
operator|(
operator|-
name|var1
operator|)
argument_list|,
operator|(
operator|-
name|var2
operator|)
argument_list|,
operator|(
operator|-
name|var3
operator|)
argument_list|)
expr_stmt|;
name|Vec3D
name|var6
init|=
name|var4
operator|.
name|getXIntersection
argument_list|(
name|var5
argument_list|,
name|this
operator|.
name|x1
argument_list|)
decl_stmt|;
name|Vec3D
name|var7
init|=
name|var4
operator|.
name|getXIntersection
argument_list|(
name|var5
argument_list|,
name|this
operator|.
name|x2
argument_list|)
decl_stmt|;
name|Vec3D
name|var8
init|=
name|var4
operator|.
name|getYIntersection
argument_list|(
name|var5
argument_list|,
name|this
operator|.
name|y1
argument_list|)
decl_stmt|;
name|Vec3D
name|var9
init|=
name|var4
operator|.
name|getYIntersection
argument_list|(
name|var5
argument_list|,
name|this
operator|.
name|y2
argument_list|)
decl_stmt|;
name|Vec3D
name|var10
init|=
name|var4
operator|.
name|getZIntersection
argument_list|(
name|var5
argument_list|,
name|this
operator|.
name|z1
argument_list|)
decl_stmt|;
name|var5
operator|=
name|var4
operator|.
name|getZIntersection
argument_list|(
name|var5
argument_list|,
name|this
operator|.
name|z2
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|this
operator|.
name|xIntersects
argument_list|(
name|var6
argument_list|)
condition|)
block|{
name|var6
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|this
operator|.
name|xIntersects
argument_list|(
name|var7
argument_list|)
condition|)
block|{
name|var7
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|this
operator|.
name|yIntersects
argument_list|(
name|var8
argument_list|)
condition|)
block|{
name|var8
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|this
operator|.
name|yIntersects
argument_list|(
name|var9
argument_list|)
condition|)
block|{
name|var9
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|this
operator|.
name|zIntersects
argument_list|(
name|var10
argument_list|)
condition|)
block|{
name|var10
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|this
operator|.
name|zIntersects
argument_list|(
name|var5
argument_list|)
condition|)
block|{
name|var5
operator|=
literal|null
expr_stmt|;
block|}
name|Vec3D
name|var11
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|var6
operator|!=
literal|null
condition|)
block|{
name|var11
operator|=
name|var6
expr_stmt|;
block|}
if|if
condition|(
name|var7
operator|!=
literal|null
operator|&&
operator|(
name|var11
operator|==
literal|null
operator|||
name|var4
operator|.
name|distance
argument_list|(
name|var7
argument_list|)
operator|<
name|var4
operator|.
name|distance
argument_list|(
name|var11
argument_list|)
operator|)
condition|)
block|{
name|var11
operator|=
name|var7
expr_stmt|;
block|}
if|if
condition|(
name|var8
operator|!=
literal|null
operator|&&
operator|(
name|var11
operator|==
literal|null
operator|||
name|var4
operator|.
name|distance
argument_list|(
name|var8
argument_list|)
operator|<
name|var4
operator|.
name|distance
argument_list|(
name|var11
argument_list|)
operator|)
condition|)
block|{
name|var11
operator|=
name|var8
expr_stmt|;
block|}
if|if
condition|(
name|var9
operator|!=
literal|null
operator|&&
operator|(
name|var11
operator|==
literal|null
operator|||
name|var4
operator|.
name|distance
argument_list|(
name|var9
argument_list|)
operator|<
name|var4
operator|.
name|distance
argument_list|(
name|var11
argument_list|)
operator|)
condition|)
block|{
name|var11
operator|=
name|var9
expr_stmt|;
block|}
if|if
condition|(
name|var10
operator|!=
literal|null
operator|&&
operator|(
name|var11
operator|==
literal|null
operator|||
name|var4
operator|.
name|distance
argument_list|(
name|var10
argument_list|)
operator|<
name|var4
operator|.
name|distance
argument_list|(
name|var11
argument_list|)
operator|)
condition|)
block|{
name|var11
operator|=
name|var10
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|!=
literal|null
operator|&&
operator|(
name|var11
operator|==
literal|null
operator|||
name|var4
operator|.
name|distance
argument_list|(
name|var5
argument_list|)
operator|<
name|var4
operator|.
name|distance
argument_list|(
name|var11
argument_list|)
operator|)
condition|)
block|{
name|var11
operator|=
name|var5
expr_stmt|;
block|}
if|if
condition|(
name|var11
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
else|else
block|{
name|byte
name|var12
init|=
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|var11
operator|==
name|var6
condition|)
block|{
name|var12
operator|=
literal|4
expr_stmt|;
block|}
if|if
condition|(
name|var11
operator|==
name|var7
condition|)
block|{
name|var12
operator|=
literal|5
expr_stmt|;
block|}
if|if
condition|(
name|var11
operator|==
name|var8
condition|)
block|{
name|var12
operator|=
literal|0
expr_stmt|;
block|}
if|if
condition|(
name|var11
operator|==
name|var9
condition|)
block|{
name|var12
operator|=
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|var11
operator|==
name|var10
condition|)
block|{
name|var12
operator|=
literal|2
expr_stmt|;
block|}
if|if
condition|(
name|var11
operator|==
name|var5
condition|)
block|{
name|var12
operator|=
literal|3
expr_stmt|;
block|}
return|return
operator|new
name|MovingObjectPosition
argument_list|(
name|var1
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var12
argument_list|,
name|var11
operator|.
name|add
argument_list|(
name|var1
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|)
argument_list|)
return|;
block|}
block|}
specifier|public
name|void
name|dropItems
parameter_list|(
name|Level
name|var1
parameter_list|,
name|int
name|var2
parameter_list|,
name|int
name|var3
parameter_list|,
name|int
name|var4
parameter_list|,
name|float
name|var5
parameter_list|)
block|{
if|if
condition|(
operator|!
name|var1
operator|.
name|creativeMode
condition|)
block|{
name|int
name|var6
init|=
name|this
operator|.
name|getDropCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|var7
init|=
literal|0
init|;
name|var7
operator|<
name|var6
condition|;
operator|++
name|var7
control|)
block|{
if|if
condition|(
name|random
operator|.
name|nextFloat
argument_list|()
operator|<=
name|var5
condition|)
block|{
name|float
name|var8
init|=
literal|0.7F
decl_stmt|;
name|float
name|var9
init|=
name|random
operator|.
name|nextFloat
argument_list|()
operator|*
name|var8
operator|+
operator|(
literal|1.0F
operator|-
name|var8
operator|)
operator|*
literal|0.5F
decl_stmt|;
name|float
name|var10
init|=
name|random
operator|.
name|nextFloat
argument_list|()
operator|*
name|var8
operator|+
operator|(
literal|1.0F
operator|-
name|var8
operator|)
operator|*
literal|0.5F
decl_stmt|;
name|var8
operator|=
name|random
operator|.
name|nextFloat
argument_list|()
operator|*
name|var8
operator|+
operator|(
literal|1.0F
operator|-
name|var8
operator|)
operator|*
literal|0.5F
expr_stmt|;
name|var1
operator|.
name|addEntity
argument_list|(
operator|new
name|Item
argument_list|(
name|var1
argument_list|,
name|var2
operator|+
name|var9
argument_list|,
name|var3
operator|+
name|var10
argument_list|,
name|var4
operator|+
name|var8
argument_list|,
name|this
operator|.
name|getDrop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|public
name|void
name|explode
parameter_list|(
name|Level
name|var1
parameter_list|,
name|int
name|var2
parameter_list|,
name|int
name|var3
parameter_list|,
name|int
name|var4
parameter_list|)
block|{
block|}
specifier|protected
name|ColorCache
name|getBrightness
parameter_list|(
name|Level
name|level
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|)
block|{
return|return
name|level
operator|.
name|getBrightnessColor
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
return|;
block|}
specifier|public
name|AABB
name|getCollisionBox
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|)
block|{
name|AABB
name|aabb
init|=
operator|new
name|AABB
argument_list|(
name|x
operator|+
name|x1
argument_list|,
name|y
operator|+
name|y1
argument_list|,
name|z
operator|+
name|z1
argument_list|,
name|x
operator|+
name|x2
argument_list|,
name|y
operator|+
name|y2
argument_list|,
name|z
operator|+
name|z2
argument_list|)
decl_stmt|;
empty_stmt|;
return|return
name|aabb
return|;
block|}
specifier|public
name|int
name|getDrop
parameter_list|()
block|{
return|return
name|this
operator|.
name|id
return|;
block|}
specifier|public
name|int
name|getDropCount
parameter_list|()
block|{
return|return
literal|1
return|;
block|}
specifier|public
specifier|final
name|int
name|getHardness
parameter_list|()
block|{
return|return
name|this
operator|.
name|hardness
return|;
block|}
specifier|public
name|LiquidType
name|getLiquidType
parameter_list|()
block|{
return|return
name|LiquidType
operator|.
name|notLiquid
return|;
block|}
specifier|public
name|int
name|getRenderPass
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|AABB
name|getSelectionBox
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|)
block|{
name|AABB
name|aabb
init|=
operator|new
name|AABB
argument_list|(
name|x
operator|+
name|x1
argument_list|,
name|y
operator|+
name|y1
argument_list|,
name|z
operator|+
name|z1
argument_list|,
name|x
operator|+
name|x2
argument_list|,
name|y
operator|+
name|y2
argument_list|,
name|z
operator|+
name|z2
argument_list|)
decl_stmt|;
empty_stmt|;
return|return
name|aabb
return|;
block|}
specifier|protected
name|int
name|getTextureId
parameter_list|(
name|int
name|texture
parameter_list|)
block|{
return|return
name|textureId
return|;
block|}
specifier|public
name|int
name|getTickDelay
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|boolean
name|isCube
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|isOpaque
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|isSolid
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|onAdded
parameter_list|(
name|Level
name|level
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|)
block|{
block|}
specifier|public
name|void
name|onBreak
parameter_list|(
name|Level
name|var1
parameter_list|,
name|int
name|var2
parameter_list|,
name|int
name|var3
parameter_list|,
name|int
name|var4
parameter_list|)
block|{
name|this
operator|.
name|dropItems
argument_list|(
name|var1
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|1.0F
argument_list|)
expr_stmt|;
block|}
comment|// TODO.
specifier|public
name|void
name|onNeighborChange
parameter_list|(
name|Level
name|var1
parameter_list|,
name|int
name|var2
parameter_list|,
name|int
name|var3
parameter_list|,
name|int
name|var4
parameter_list|,
name|int
name|var5
parameter_list|)
block|{
block|}
specifier|public
name|void
name|onPlace
parameter_list|(
name|Level
name|level
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|)
block|{
block|}
comment|// TODO past here.
specifier|public
name|void
name|onRemoved
parameter_list|(
name|Level
name|var1
parameter_list|,
name|int
name|var2
parameter_list|,
name|int
name|var3
parameter_list|,
name|int
name|var4
parameter_list|)
block|{
block|}
specifier|public
name|boolean
name|render
parameter_list|(
name|Level
name|var1
parameter_list|,
name|int
name|var2
parameter_list|,
name|int
name|var3
parameter_list|,
name|int
name|var4
parameter_list|,
name|ShapeRenderer
name|var5
parameter_list|)
block|{
name|boolean
name|var6
init|=
literal|false
decl_stmt|;
name|float
name|var7
init|=
literal|0.5F
decl_stmt|;
name|float
name|var8
init|=
literal|0.8F
decl_stmt|;
name|float
name|var9
init|=
literal|0.6F
decl_stmt|;
name|ColorCache
name|var10
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|canRenderSide
argument_list|(
name|var1
argument_list|,
name|var2
argument_list|,
name|var3
operator|-
literal|1
argument_list|,
name|var4
argument_list|,
literal|0
argument_list|)
condition|)
block|{
name|var10
operator|=
name|this
operator|.
name|getBrightness
argument_list|(
name|var1
argument_list|,
name|var2
argument_list|,
name|var3
operator|-
literal|1
argument_list|,
name|var4
argument_list|)
expr_stmt|;
name|var5
operator|.
name|color
argument_list|(
name|var7
operator|*
name|var10
operator|.
name|R
argument_list|,
name|var7
operator|*
name|var10
operator|.
name|G
argument_list|,
name|var7
operator|*
name|var10
operator|.
name|B
argument_list|)
expr_stmt|;
name|this
operator|.
name|renderInside
argument_list|(
name|var5
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|var6
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|canRenderSide
argument_list|(
name|var1
argument_list|,
name|var2
argument_list|,
name|var3
operator|+
literal|1
argument_list|,
name|var4
argument_list|,
literal|1
argument_list|)
condition|)
block|{
name|var10
operator|=
name|this
operator|.
name|getBrightness
argument_list|(
name|var1
argument_list|,
name|var2
argument_list|,
name|var3
operator|+
literal|1
argument_list|,
name|var4
argument_list|)
expr_stmt|;
name|var5
operator|.
name|color
argument_list|(
name|var10
operator|.
name|R
operator|*
literal|1.0F
argument_list|,
name|var10
operator|.
name|G
operator|*
literal|1.0F
argument_list|,
name|var10
operator|.
name|B
operator|*
literal|1.0F
argument_list|)
expr_stmt|;
name|this
operator|.
name|renderInside
argument_list|(
name|var5
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|var6
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|canRenderSide
argument_list|(
name|var1
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
operator|-
literal|1
argument_list|,
literal|2
argument_list|)
condition|)
block|{
name|var10
operator|=
name|this
operator|.
name|getBrightness
argument_list|(
name|var1
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
operator|-
literal|1
argument_list|)
expr_stmt|;
name|var5
operator|.
name|color
argument_list|(
name|var8
operator|*
name|var10
operator|.
name|R
argument_list|,
name|var8
operator|*
name|var10
operator|.
name|G
argument_list|,
name|var8
operator|*
name|var10
operator|.
name|B
argument_list|)
expr_stmt|;
name|this
operator|.
name|renderInside
argument_list|(
name|var5
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|var6
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|canRenderSide
argument_list|(
name|var1
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
operator|+
literal|1
argument_list|,
literal|3
argument_list|)
condition|)
block|{
name|var10
operator|=
name|this
operator|.
name|getBrightness
argument_list|(
name|var1
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
operator|+
literal|1
argument_list|)
expr_stmt|;
name|var5
operator|.
name|color
argument_list|(
name|var8
operator|*
name|var10
operator|.
name|R
argument_list|,
name|var8
operator|*
name|var10
operator|.
name|G
argument_list|,
name|var8
operator|*
name|var10
operator|.
name|B
argument_list|)
expr_stmt|;
name|this
operator|.
name|renderInside
argument_list|(
name|var5
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|var6
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|canRenderSide
argument_list|(
name|var1
argument_list|,
name|var2
operator|-
literal|1
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|4
argument_list|)
condition|)
block|{
name|var10
operator|=
name|this
operator|.
name|getBrightness
argument_list|(
name|var1
argument_list|,
name|var2
operator|-
literal|1
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|)
expr_stmt|;
name|var5
operator|.
name|color
argument_list|(
name|var9
operator|*
name|var10
operator|.
name|R
argument_list|,
name|var9
operator|*
name|var10
operator|.
name|G
argument_list|,
name|var9
operator|*
name|var10
operator|.
name|B
argument_list|)
expr_stmt|;
name|this
operator|.
name|renderInside
argument_list|(
name|var5
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|var6
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|canRenderSide
argument_list|(
name|var1
argument_list|,
name|var2
operator|+
literal|1
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|5
argument_list|)
condition|)
block|{
name|var10
operator|=
name|this
operator|.
name|getBrightness
argument_list|(
name|var1
argument_list|,
name|var2
operator|+
literal|1
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|)
expr_stmt|;
name|var5
operator|.
name|color
argument_list|(
name|var9
operator|*
name|var10
operator|.
name|R
argument_list|,
name|var9
operator|*
name|var10
operator|.
name|G
argument_list|,
name|var9
operator|*
name|var10
operator|.
name|B
argument_list|)
expr_stmt|;
name|this
operator|.
name|renderInside
argument_list|(
name|var5
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|,
name|var4
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|var6
operator|=
literal|true
expr_stmt|;
block|}
return|return
name|var6
return|;
block|}
specifier|public
name|void
name|renderFullbright
parameter_list|(
name|ShapeRenderer
name|shapeRenderer
parameter_list|)
block|{
name|float
name|red
init|=
literal|0.5F
decl_stmt|;
name|float
name|green
init|=
literal|0.8F
decl_stmt|;
name|float
name|blue
init|=
literal|0.6F
decl_stmt|;
name|shapeRenderer
operator|.
name|color
argument_list|(
name|red
argument_list|,
name|red
argument_list|,
name|red
argument_list|)
expr_stmt|;
name|renderInside
argument_list|(
name|shapeRenderer
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|color
argument_list|(
literal|1.0F
argument_list|,
literal|1.0F
argument_list|,
literal|1.0F
argument_list|)
expr_stmt|;
name|renderInside
argument_list|(
name|shapeRenderer
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|color
argument_list|(
name|green
argument_list|,
name|green
argument_list|,
name|green
argument_list|)
expr_stmt|;
name|renderInside
argument_list|(
name|shapeRenderer
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|color
argument_list|(
name|green
argument_list|,
name|green
argument_list|,
name|green
argument_list|)
expr_stmt|;
name|renderInside
argument_list|(
name|shapeRenderer
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|color
argument_list|(
name|blue
argument_list|,
name|blue
argument_list|,
name|blue
argument_list|)
expr_stmt|;
name|renderInside
argument_list|(
name|shapeRenderer
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|color
argument_list|(
name|blue
argument_list|,
name|blue
argument_list|,
name|blue
argument_list|)
expr_stmt|;
name|renderInside
argument_list|(
name|shapeRenderer
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|renderInside
parameter_list|(
name|ShapeRenderer
name|shapeRenderer
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|,
name|int
name|side
parameter_list|)
block|{
name|int
name|textureID1
init|=
name|getTextureId
argument_list|(
name|side
argument_list|)
decl_stmt|;
name|renderSide
argument_list|(
name|shapeRenderer
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|side
argument_list|,
name|textureID1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|renderPreview
parameter_list|(
name|ShapeRenderer
name|var1
parameter_list|)
block|{
name|var1
operator|.
name|begin
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|var2
init|=
literal|0
init|;
name|var2
operator|<
literal|6
condition|;
operator|++
name|var2
control|)
block|{
if|if
condition|(
name|var2
operator|==
literal|0
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|0.0F
argument_list|,
literal|1.0F
argument_list|,
literal|0.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|1
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|0.0F
argument_list|,
operator|-
literal|1.0F
argument_list|,
literal|0.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|2
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|0.0F
argument_list|,
literal|0.0F
argument_list|,
literal|1.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|3
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|0.0F
argument_list|,
literal|0.0F
argument_list|,
operator|-
literal|1.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|4
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
literal|1.0F
argument_list|,
literal|0.0F
argument_list|,
literal|0.0F
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var2
operator|==
literal|5
condition|)
block|{
name|var1
operator|.
name|normal
argument_list|(
operator|-
literal|1.0F
argument_list|,
literal|0.0F
argument_list|,
literal|0.0F
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|renderInside
argument_list|(
name|var1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|var2
argument_list|)
expr_stmt|;
block|}
name|var1
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
comment|// TODO.
specifier|public
name|void
name|renderSide
parameter_list|(
name|ShapeRenderer
name|var1
parameter_list|,
name|int
name|var2
parameter_list|,
name|int
name|var3
parameter_list|,
name|int
name|var4
parameter_list|,
name|int
name|var5
parameter_list|)
block|{
name|int
name|var6
decl_stmt|;
name|float
name|var7
decl_stmt|;
name|float
name|var8
init|=
operator|(
name|var7
operator|=
operator|(
name|var6
operator|=
name|this
operator|.
name|getTextureId
argument_list|(
name|var5
argument_list|)
operator|)
operator|%
literal|16
operator|/
literal|16.0F
operator|)
operator|+
literal|0.0624375F
decl_stmt|;
name|float
name|var16
decl_stmt|;
name|float
name|var9
init|=
operator|(
name|var16
operator|=
name|var6
operator|/
literal|16
operator|/
literal|16.0F
operator|)
operator|+
literal|0.0624375F
decl_stmt|;
name|float
name|var10
init|=
name|var2
operator|+
name|this
operator|.
name|x1
decl_stmt|;
name|float
name|var14
init|=
name|var2
operator|+
name|this
operator|.
name|x2
decl_stmt|;
name|float
name|var11
init|=
name|var3
operator|+
name|this
operator|.
name|y1
decl_stmt|;
name|float
name|var15
init|=
name|var3
operator|+
name|this
operator|.
name|y2
decl_stmt|;
name|float
name|var12
init|=
name|var4
operator|+
name|this
operator|.
name|z1
decl_stmt|;
name|float
name|var13
init|=
name|var4
operator|+
name|this
operator|.
name|z2
decl_stmt|;
if|if
condition|(
name|var5
operator|==
literal|0
condition|)
block|{
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var11
argument_list|,
name|var13
argument_list|,
name|var8
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var11
argument_list|,
name|var12
argument_list|,
name|var8
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var11
argument_list|,
name|var12
argument_list|,
name|var7
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var11
argument_list|,
name|var13
argument_list|,
name|var7
argument_list|,
name|var9
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|1
condition|)
block|{
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var7
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var7
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var8
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var8
argument_list|,
name|var9
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|2
condition|)
block|{
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var11
argument_list|,
name|var12
argument_list|,
name|var8
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var11
argument_list|,
name|var12
argument_list|,
name|var7
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var7
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var8
argument_list|,
name|var16
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|3
condition|)
block|{
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var8
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var11
argument_list|,
name|var13
argument_list|,
name|var8
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var11
argument_list|,
name|var13
argument_list|,
name|var7
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var7
argument_list|,
name|var16
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|4
condition|)
block|{
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var11
argument_list|,
name|var13
argument_list|,
name|var8
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var11
argument_list|,
name|var12
argument_list|,
name|var7
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var7
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var10
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var8
argument_list|,
name|var16
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|5
condition|)
block|{
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var7
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var8
argument_list|,
name|var16
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var11
argument_list|,
name|var12
argument_list|,
name|var8
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|var1
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var11
argument_list|,
name|var13
argument_list|,
name|var7
argument_list|,
name|var9
argument_list|)
expr_stmt|;
block|}
block|}
comment|// TODO.
specifier|public
name|void
name|renderSide
parameter_list|(
name|ShapeRenderer
name|shapeRenderer
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|,
name|int
name|side
parameter_list|,
name|int
name|textureID
parameter_list|)
block|{
name|int
name|var7
init|=
name|textureID
operator|%
literal|16
operator|<<
literal|4
decl_stmt|;
name|int
name|var8
init|=
name|textureID
operator|/
literal|16
operator|<<
literal|4
decl_stmt|;
name|float
name|var9
init|=
name|var7
operator|/
literal|256.0F
decl_stmt|;
name|float
name|var17
init|=
operator|(
name|var7
operator|+
literal|15.99F
operator|)
operator|/
literal|256.0F
decl_stmt|;
name|float
name|var10
init|=
name|var8
operator|/
literal|256.0F
decl_stmt|;
name|float
name|var11
init|=
operator|(
name|var8
operator|+
literal|15.99F
operator|)
operator|/
literal|256.0F
decl_stmt|;
if|if
condition|(
name|side
operator|>=
literal|2
operator|&&
name|textureID
operator|<
literal|240
condition|)
block|{
if|if
condition|(
name|this
operator|.
name|y1
operator|>=
literal|0.0F
operator|&&
name|this
operator|.
name|y2
operator|<=
literal|1.0F
condition|)
block|{
name|var10
operator|=
operator|(
name|var8
operator|+
name|this
operator|.
name|y1
operator|*
literal|15.99F
operator|)
operator|/
literal|256.0F
expr_stmt|;
name|var11
operator|=
operator|(
name|var8
operator|+
name|this
operator|.
name|y2
operator|*
literal|15.99F
operator|)
operator|/
literal|256.0F
expr_stmt|;
block|}
else|else
block|{
name|var10
operator|=
name|var8
operator|/
literal|256.0F
expr_stmt|;
name|var11
operator|=
operator|(
name|var8
operator|+
literal|15.99F
operator|)
operator|/
literal|256.0F
expr_stmt|;
block|}
block|}
name|float
name|var16
init|=
name|x
operator|+
name|this
operator|.
name|x1
decl_stmt|;
name|float
name|var14
init|=
name|x
operator|+
name|this
operator|.
name|x2
decl_stmt|;
name|float
name|var18
init|=
name|y
operator|+
name|this
operator|.
name|y1
decl_stmt|;
name|float
name|var15
init|=
name|y
operator|+
name|this
operator|.
name|y2
decl_stmt|;
name|float
name|var12
init|=
name|z
operator|+
name|this
operator|.
name|z1
decl_stmt|;
name|float
name|var13
init|=
name|z
operator|+
name|this
operator|.
name|z2
decl_stmt|;
if|if
condition|(
name|side
operator|==
literal|0
condition|)
block|{
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var18
argument_list|,
name|var13
argument_list|,
name|var9
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var18
argument_list|,
name|var12
argument_list|,
name|var9
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var18
argument_list|,
name|var12
argument_list|,
name|var17
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var18
argument_list|,
name|var13
argument_list|,
name|var17
argument_list|,
name|var11
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|side
operator|==
literal|1
condition|)
block|{
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var17
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var17
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var9
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var9
argument_list|,
name|var11
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|side
operator|==
literal|2
condition|)
block|{
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var17
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var9
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var18
argument_list|,
name|var12
argument_list|,
name|var9
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var18
argument_list|,
name|var12
argument_list|,
name|var17
argument_list|,
name|var11
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|side
operator|==
literal|3
condition|)
block|{
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var9
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var18
argument_list|,
name|var13
argument_list|,
name|var9
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var18
argument_list|,
name|var13
argument_list|,
name|var17
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var17
argument_list|,
name|var10
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|side
operator|==
literal|4
condition|)
block|{
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var17
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var9
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var18
argument_list|,
name|var12
argument_list|,
name|var9
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var16
argument_list|,
name|var18
argument_list|,
name|var13
argument_list|,
name|var17
argument_list|,
name|var11
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|side
operator|==
literal|5
condition|)
block|{
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var18
argument_list|,
name|var13
argument_list|,
name|var9
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var18
argument_list|,
name|var12
argument_list|,
name|var17
argument_list|,
name|var11
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var12
argument_list|,
name|var17
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var14
argument_list|,
name|var15
argument_list|,
name|var13
argument_list|,
name|var9
argument_list|,
name|var10
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|setBounds
parameter_list|(
name|float
name|x1
parameter_list|,
name|float
name|y1
parameter_list|,
name|float
name|z1
parameter_list|,
name|float
name|x2
parameter_list|,
name|float
name|y2
parameter_list|,
name|float
name|z2
parameter_list|)
block|{
name|this
operator|.
name|x1
operator|=
name|x1
expr_stmt|;
name|this
operator|.
name|y1
operator|=
name|y1
expr_stmt|;
name|this
operator|.
name|z1
operator|=
name|z1
expr_stmt|;
name|this
operator|.
name|x2
operator|=
name|x2
expr_stmt|;
name|this
operator|.
name|y2
operator|=
name|y2
expr_stmt|;
name|this
operator|.
name|z2
operator|=
name|z2
expr_stmt|;
block|}
specifier|protected
name|void
name|setPhysics
parameter_list|(
name|boolean
name|physics
parameter_list|)
block|{
name|Block
operator|.
name|physics
index|[
name|id
index|]
operator|=
name|physics
expr_stmt|;
block|}
comment|// TODO.
specifier|public
specifier|final
name|void
name|spawnBlockParticles
parameter_list|(
name|Level
name|var1
parameter_list|,
name|int
name|var2
parameter_list|,
name|int
name|var3
parameter_list|,
name|int
name|var4
parameter_list|,
name|int
name|var5
parameter_list|,
name|ParticleManager
name|var6
parameter_list|)
block|{
name|float
name|var7
init|=
literal|0.1F
decl_stmt|;
name|float
name|var8
init|=
name|var2
operator|+
name|random
operator|.
name|nextFloat
argument_list|()
operator|*
operator|(
name|this
operator|.
name|x2
operator|-
name|this
operator|.
name|x1
operator|-
name|var7
operator|*
literal|2.0F
operator|)
operator|+
name|var7
operator|+
name|this
operator|.
name|x1
decl_stmt|;
name|float
name|var9
init|=
name|var3
operator|+
name|random
operator|.
name|nextFloat
argument_list|()
operator|*
operator|(
name|this
operator|.
name|y2
operator|-
name|this
operator|.
name|y1
operator|-
name|var7
operator|*
literal|2.0F
operator|)
operator|+
name|var7
operator|+
name|this
operator|.
name|y1
decl_stmt|;
name|float
name|var10
init|=
name|var4
operator|+
name|random
operator|.
name|nextFloat
argument_list|()
operator|*
operator|(
name|this
operator|.
name|z2
operator|-
name|this
operator|.
name|z1
operator|-
name|var7
operator|*
literal|2.0F
operator|)
operator|+
name|var7
operator|+
name|this
operator|.
name|z1
decl_stmt|;
if|if
condition|(
name|var5
operator|==
literal|0
condition|)
block|{
name|var9
operator|=
name|var3
operator|+
name|this
operator|.
name|y1
operator|-
name|var7
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|1
condition|)
block|{
name|var9
operator|=
name|var3
operator|+
name|this
operator|.
name|y2
operator|+
name|var7
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|2
condition|)
block|{
name|var10
operator|=
name|var4
operator|+
name|this
operator|.
name|z1
operator|-
name|var7
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|3
condition|)
block|{
name|var10
operator|=
name|var4
operator|+
name|this
operator|.
name|z2
operator|+
name|var7
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|4
condition|)
block|{
name|var8
operator|=
name|var2
operator|+
name|this
operator|.
name|x1
operator|-
name|var7
expr_stmt|;
block|}
if|if
condition|(
name|var5
operator|==
literal|5
condition|)
block|{
name|var8
operator|=
name|var2
operator|+
name|this
operator|.
name|x2
operator|+
name|var7
expr_stmt|;
block|}
name|var6
operator|.
name|spawnParticle
argument_list|(
operator|(
operator|new
name|TerrainParticle
argument_list|(
name|var1
argument_list|,
name|var8
argument_list|,
name|var9
argument_list|,
name|var10
argument_list|,
literal|0.0F
argument_list|,
literal|0.0F
argument_list|,
literal|0.0F
argument_list|,
name|this
argument_list|)
operator|)
operator|.
name|setPower
argument_list|(
literal|0.2F
argument_list|)
operator|.
name|scale
argument_list|(
literal|0.6F
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// TODO.
specifier|public
name|void
name|spawnBreakParticles
parameter_list|(
name|Level
name|level
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|,
name|ParticleManager
name|particleManager
parameter_list|)
block|{
for|for
control|(
name|int
name|var6
init|=
literal|0
init|;
name|var6
operator|<
literal|4
condition|;
operator|++
name|var6
control|)
block|{
for|for
control|(
name|int
name|var7
init|=
literal|0
init|;
name|var7
operator|<
literal|4
condition|;
operator|++
name|var7
control|)
block|{
for|for
control|(
name|int
name|var8
init|=
literal|0
init|;
name|var8
operator|<
literal|4
condition|;
operator|++
name|var8
control|)
block|{
name|float
name|var9
init|=
name|x
operator|+
operator|(
name|var6
operator|+
literal|0.5F
operator|)
operator|/
literal|4
decl_stmt|;
name|float
name|var10
init|=
name|y
operator|+
operator|(
name|var7
operator|+
literal|0.5F
operator|)
operator|/
literal|4
decl_stmt|;
name|float
name|var11
init|=
name|z
operator|+
operator|(
name|var8
operator|+
literal|0.5F
operator|)
operator|/
literal|4
decl_stmt|;
name|particleManager
operator|.
name|spawnParticle
argument_list|(
operator|new
name|TerrainParticle
argument_list|(
name|level
argument_list|,
name|var9
argument_list|,
name|var10
argument_list|,
name|var11
argument_list|,
name|var9
operator|-
name|x
operator|-
literal|0.5F
argument_list|,
name|var10
operator|-
name|y
operator|-
literal|0.5F
argument_list|,
name|var11
operator|-
name|z
operator|-
literal|0.5F
argument_list|,
name|this
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|public
name|void
name|update
parameter_list|(
name|Level
name|level
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|,
name|Random
name|rand
parameter_list|)
block|{
block|}
specifier|private
name|boolean
name|xIntersects
parameter_list|(
name|Vec3D
name|var1
parameter_list|)
block|{
return|return
name|var1
operator|==
literal|null
condition|?
literal|false
else|:
name|var1
operator|.
name|y
operator|>=
name|this
operator|.
name|y1
operator|&&
name|var1
operator|.
name|y
operator|<=
name|this
operator|.
name|y2
operator|&&
name|var1
operator|.
name|z
operator|>=
name|this
operator|.
name|z1
operator|&&
name|var1
operator|.
name|z
operator|<=
name|this
operator|.
name|z2
return|;
block|}
specifier|private
name|boolean
name|yIntersects
parameter_list|(
name|Vec3D
name|var1
parameter_list|)
block|{
return|return
name|var1
operator|==
literal|null
condition|?
literal|false
else|:
name|var1
operator|.
name|x
operator|>=
name|this
operator|.
name|x1
operator|&&
name|var1
operator|.
name|x
operator|<=
name|this
operator|.
name|x2
operator|&&
name|var1
operator|.
name|z
operator|>=
name|this
operator|.
name|z1
operator|&&
name|var1
operator|.
name|z
operator|<=
name|this
operator|.
name|z2
return|;
block|}
specifier|private
name|boolean
name|zIntersects
parameter_list|(
name|Vec3D
name|var1
parameter_list|)
block|{
return|return
name|var1
operator|==
literal|null
condition|?
literal|false
else|:
name|var1
operator|.
name|x
operator|>=
name|this
operator|.
name|x1
operator|&&
name|var1
operator|.
name|x
operator|<=
name|this
operator|.
name|x2
operator|&&
name|var1
operator|.
name|y
operator|>=
name|this
operator|.
name|y1
operator|&&
name|var1
operator|.
name|y
operator|<=
name|this
operator|.
name|y2
return|;
block|}
block|}
end_class

end_unit

