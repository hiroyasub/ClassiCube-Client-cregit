begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|tile
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|Minecraft
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|liquid
operator|.
name|LiquidType
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|SandBlock
extends|extends
name|Block
block|{
specifier|public
name|SandBlock
parameter_list|(
name|int
name|id
parameter_list|)
block|{
name|super
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|fall
parameter_list|(
name|Level
name|level
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|)
block|{
if|if
condition|(
operator|!
name|Minecraft
operator|.
name|isSinglePlayer
condition|)
block|{
return|return;
block|}
name|int
name|yOffset
init|=
name|y
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
name|int
name|yCheckPos
init|=
name|yOffset
operator|-
literal|1
decl_stmt|;
name|int
name|nextTile
decl_stmt|;
name|LiquidType
name|liquidType
decl_stmt|;
if|if
condition|(
operator|!
operator|(
operator|(
name|nextTile
operator|=
name|level
operator|.
name|getTile
argument_list|(
name|x
argument_list|,
name|yCheckPos
argument_list|,
name|z
argument_list|)
operator|)
operator|==
literal|0
condition|?
literal|true
else|:
operator|(
name|liquidType
operator|=
name|blocks
index|[
name|nextTile
index|]
operator|.
name|getLiquidType
argument_list|()
operator|)
operator|==
name|LiquidType
operator|.
name|water
condition|?
literal|true
else|:
name|liquidType
operator|==
name|LiquidType
operator|.
name|lava
operator|)
operator|||
name|yOffset
operator|<=
literal|0
condition|)
block|{
if|if
condition|(
name|yOffset
operator|!=
name|y
condition|)
block|{
if|if
condition|(
operator|(
name|nextTile
operator|=
name|level
operator|.
name|getTile
argument_list|(
name|x
argument_list|,
name|yOffset
argument_list|,
name|z
argument_list|)
operator|)
operator|>
literal|0
operator|&&
name|blocks
index|[
name|nextTile
index|]
operator|.
name|getLiquidType
argument_list|()
operator|!=
name|LiquidType
operator|.
name|notLiquid
condition|)
block|{
name|level
operator|.
name|setTileNoUpdate
argument_list|(
name|x
argument_list|,
name|yOffset
argument_list|,
name|z
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|level
operator|.
name|swap
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|x
argument_list|,
name|yOffset
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
return|return;
block|}
operator|--
name|yOffset
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|void
name|onNeighborChange
parameter_list|(
name|Level
name|level
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|,
name|int
name|unused
parameter_list|)
block|{
name|fall
argument_list|(
name|level
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|void
name|onPlace
parameter_list|(
name|Level
name|level
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|)
block|{
name|fall
argument_list|(
name|level
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

