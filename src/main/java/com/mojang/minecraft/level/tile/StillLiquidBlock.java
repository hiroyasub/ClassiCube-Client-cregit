begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|tile
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|liquid
operator|.
name|LiquidType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|StillLiquidBlock
extends|extends
name|LiquidBlock
block|{
specifier|protected
name|StillLiquidBlock
parameter_list|(
name|int
name|id
parameter_list|,
name|LiquidType
name|liquidType
parameter_list|)
block|{
name|super
argument_list|(
name|id
argument_list|,
name|liquidType
argument_list|)
expr_stmt|;
name|movingId
operator|=
name|id
operator|-
literal|1
expr_stmt|;
name|stillId
operator|=
name|id
expr_stmt|;
name|setPhysics
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|void
name|onNeighborChange
parameter_list|(
name|Level
name|level
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|,
name|int
name|side
parameter_list|)
block|{
if|if
condition|(
name|side
operator|!=
literal|0
condition|)
block|{
name|LiquidType
name|var7
init|=
name|Block
operator|.
name|blocks
index|[
name|side
index|]
operator|.
name|getLiquidType
argument_list|()
decl_stmt|;
if|if
condition|(
name|type
operator|==
name|LiquidType
operator|.
name|water
operator|&&
name|var7
operator|==
name|LiquidType
operator|.
name|lava
operator|||
name|var7
operator|==
name|LiquidType
operator|.
name|water
operator|&&
name|type
operator|==
name|LiquidType
operator|.
name|lava
condition|)
block|{
name|level
operator|.
name|setTile
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|Block
operator|.
name|STONE
operator|.
name|id
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
if|if
condition|(
operator|(
name|level
operator|.
name|getTile
argument_list|(
name|x
operator|-
literal|1
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
operator|==
literal|0
operator|||
name|level
operator|.
name|getTile
argument_list|(
name|x
operator|+
literal|1
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
operator|==
literal|0
operator|||
name|level
operator|.
name|getTile
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
operator|-
literal|1
argument_list|)
operator|==
literal|0
operator|||
name|level
operator|.
name|getTile
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
operator|+
literal|1
argument_list|)
operator|==
literal|0
operator|||
name|level
operator|.
name|getTile
argument_list|(
name|x
argument_list|,
name|y
operator|-
literal|1
argument_list|,
name|z
argument_list|)
operator|==
literal|0
operator|)
condition|)
block|{
name|level
operator|.
name|setTileNoUpdate
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|movingId
argument_list|)
expr_stmt|;
name|level
operator|.
name|addToTickNextTick
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|movingId
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|void
name|update
parameter_list|(
name|Level
name|level
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|z
parameter_list|,
name|Random
name|rand
parameter_list|)
block|{
block|}
block|}
end_class

end_unit

