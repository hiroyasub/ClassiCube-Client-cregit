begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|mojang
operator|.
name|minecraft
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|AWTException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Canvas
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|MouseInfo
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Point
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Robot
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|color
operator|.
name|ColorSpace
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|BufferedImage
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|ComponentColorModel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|DataBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|DataBufferByte
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|Raster
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|WritableRaster
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|MessageDigest
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|imageio
operator|.
name|ImageIO
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sound
operator|.
name|sampled
operator|.
name|AudioFormat
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sound
operator|.
name|sampled
operator|.
name|AudioSystem
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|UIManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|BufferUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|LWJGLException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|Sys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|input
operator|.
name|Cursor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|input
operator|.
name|Keyboard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|input
operator|.
name|Mouse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|opengl
operator|.
name|Display
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|opengl
operator|.
name|DisplayMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|opengl
operator|.
name|GL11
import|;
end_import

begin_import
import|import
name|org
operator|.
name|lwjgl
operator|.
name|util
operator|.
name|glu
operator|.
name|GLU
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|gamemode
operator|.
name|CreativeGameMode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|gamemode
operator|.
name|GameMode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|gui
operator|.
name|BlockSelectScreen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|gui
operator|.
name|ChatInputScreen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|gui
operator|.
name|ErrorScreen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|gui
operator|.
name|FontRenderer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|gui
operator|.
name|GameOverScreen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|gui
operator|.
name|GuiScreen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|gui
operator|.
name|HUDScreen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|gui
operator|.
name|PauseScreen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|item
operator|.
name|Arrow
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|item
operator|.
name|Item
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|LevelLoader
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|LevelSerializer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|generator
operator|.
name|LevelGenerator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|liquid
operator|.
name|LiquidType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|tile
operator|.
name|Block
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|level
operator|.
name|tile
operator|.
name|TextureSide
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|mob
operator|.
name|Mob
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|model
operator|.
name|ModelManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|model
operator|.
name|ModelPart
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|net
operator|.
name|NetworkManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|net
operator|.
name|NetworkPlayer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|net
operator|.
name|PacketType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|particle
operator|.
name|Particle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|particle
operator|.
name|ParticleManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|particle
operator|.
name|WaterDropParticle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|physics
operator|.
name|AABB
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|physics
operator|.
name|CustomAABB
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|player
operator|.
name|InputHandlerImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|player
operator|.
name|Player
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|Chunk
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|ChunkDirtyDistanceComparator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|Frustum
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|FrustumImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|HeldBlock
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|LevelRenderer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|Renderer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|ShapeRenderer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|TextureManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|render
operator|.
name|texture
operator|.
name|TextureFX
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|sound
operator|.
name|SoundManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|minecraft
operator|.
name|sound
operator|.
name|SoundPlayer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|net
operator|.
name|NetworkHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|util
operator|.
name|ColorCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|util
operator|.
name|LogUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|util
operator|.
name|MathHelper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|util
operator|.
name|StreamingUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|util
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mojang
operator|.
name|util
operator|.
name|Vec3D
import|;
end_import

begin_import
import|import
name|com
operator|.
name|oyasunadev
operator|.
name|mcraft
operator|.
name|client
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|com
operator|.
name|oyasunadev
operator|.
name|mcraft
operator|.
name|client
operator|.
name|util
operator|.
name|ExtData
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|Minecraft
implements|implements
name|Runnable
block|{
comment|// mouse button index constants
specifier|private
specifier|static
specifier|final
name|int
name|MB_LEFT
init|=
literal|0
decl_stmt|,
name|MB_RIGHT
init|=
literal|1
decl_stmt|,
name|MB_MIDDLE
init|=
literal|2
decl_stmt|;
comment|/**      * True if the player is running, false if otherwise.      */
specifier|public
specifier|static
name|boolean
name|playerIsRunning
init|=
literal|false
decl_stmt|;
comment|/**      * The Minecraft directory.      */
specifier|public
specifier|static
name|File
name|mcDir
decl_stmt|;
comment|/**      * Are we playing single player mode?      */
specifier|public
specifier|static
name|boolean
name|isSinglePlayer
init|=
literal|false
decl_stmt|;
comment|/**      * True if the application is waiting for something.      */
specifier|public
specifier|volatile
name|boolean
name|isWaiting
init|=
literal|false
decl_stmt|;
comment|/**      * Is the game running?      */
specifier|public
specifier|volatile
name|boolean
name|isRunning
decl_stmt|;
comment|/**      * True if we are in full screen mode, false if otherwise.      */
specifier|public
name|boolean
name|isFullScreen
init|=
literal|false
decl_stmt|;
comment|/**      * The url of the skin server where the skins are located.      */
specifier|public
name|String
name|skinServer
init|=
literal|"http://www.classicube.net/static/skins/"
decl_stmt|;
comment|/**      * The current GameMode.      */
specifier|public
name|GameMode
name|gamemode
init|=
operator|new
name|CreativeGameMode
argument_list|(
name|this
argument_list|)
decl_stmt|;
comment|/**      * The width of the playing window.      */
specifier|public
name|int
name|width
decl_stmt|;
comment|/**      * The height of the playing window.      */
specifier|public
name|int
name|height
decl_stmt|;
comment|/**      * The level we are playing in.      */
specifier|public
name|Level
name|level
decl_stmt|;
comment|/**      * The renderer of the level we are in.      */
specifier|public
name|LevelRenderer
name|levelRenderer
decl_stmt|;
comment|/**      * The main player (Us) who is playing.      */
specifier|public
name|Player
name|player
decl_stmt|;
comment|/**      * Manages the particle system.      */
specifier|public
name|ParticleManager
name|particleManager
decl_stmt|;
comment|/**      * SessionData for when playing online.      */
specifier|public
name|SessionData
name|session
init|=
literal|null
decl_stmt|;
comment|/**      * The host we are connected to.      */
specifier|public
name|String
name|host
decl_stmt|;
comment|/**      * The main screen canvas.      */
specifier|public
name|Canvas
name|canvas
decl_stmt|;
comment|/**      * True if the level has been loaded.      */
specifier|public
name|boolean
name|isLevelLoaded
init|=
literal|false
decl_stmt|;
comment|/**      * Manages the textures of the game.      */
specifier|public
name|TextureManager
name|textureManager
decl_stmt|;
comment|/**      * Renders the font of the game.      */
specifier|public
name|FontRenderer
name|fontRenderer
decl_stmt|;
comment|/**      * The current screen      */
specifier|public
name|GuiScreen
name|currentScreen
init|=
literal|null
decl_stmt|;
comment|/**      * Used to display progress when needed.      */
specifier|public
name|ProgressBarDisplay
name|progressBar
init|=
operator|new
name|ProgressBarDisplay
argument_list|(
name|this
argument_list|)
decl_stmt|;
comment|/**      * This is used to render whatever we need to render.      */
specifier|public
name|Renderer
name|renderer
init|=
operator|new
name|Renderer
argument_list|(
name|this
argument_list|)
decl_stmt|;
comment|/**      * Manages the sound.      */
specifier|public
name|SoundManager
name|sound
decl_stmt|;
comment|/**      * The name of the current level.      */
specifier|public
name|String
name|levelName
decl_stmt|;
comment|/**      * The ID of the current level.      */
specifier|public
name|int
name|levelId
decl_stmt|;
comment|/**      * Can do automated tasks.      */
specifier|public
name|Robot
name|robot
decl_stmt|;
comment|/**      * The game's HUD.      */
specifier|public
name|HUDScreen
name|hud
decl_stmt|;
comment|/**      * True if the player is online.      */
specifier|public
name|boolean
name|isOnline
decl_stmt|;
comment|/**      * Manages networking.      */
specifier|public
name|NetworkManager
name|networkManager
decl_stmt|;
comment|/**      * Plays sounds.      */
specifier|public
name|SoundPlayer
name|soundPlayer
decl_stmt|;
comment|/**      * The position of the selected object we are looking at.      */
specifier|public
name|MovingObjectPosition
name|selected
decl_stmt|;
comment|/**      * The settings of the game.      */
specifier|public
name|GameSettings
name|settings
decl_stmt|;
comment|/**      * True if the application is an applet.      */
specifier|public
name|boolean
name|isApplet
decl_stmt|;
comment|/**      * Address of the server we are playing in.      */
specifier|public
name|String
name|server
decl_stmt|;
comment|/**      * Port of the server we are playing in.      */
specifier|public
name|int
name|port
decl_stmt|;
comment|/**      * Set this to whatever you want to show as debug information in the HUD. It      * will occupy one line. Right now it shows FPS and Chunk Updates.      */
specifier|public
name|String
name|debug
decl_stmt|;
comment|/**      * True if the application has the mouse's focus.      */
specifier|public
name|boolean
name|hasMouse
decl_stmt|;
comment|/**      * True if it is raining.      */
specifier|public
name|boolean
name|isRaining
decl_stmt|;
comment|/**      * True if it snowing.      */
specifier|public
name|boolean
name|isSnowing
decl_stmt|;
comment|/**      * The applet of this game.      */
specifier|public
name|MinecraftApplet
name|applet
decl_stmt|;
specifier|public
name|List
argument_list|<
name|SelectionBoxData
argument_list|>
name|selectionBoxes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|List
argument_list|<
name|HotKeyData
argument_list|>
name|hotKeys
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|HackState
name|hackState
decl_stmt|;
comment|// TODO Never used
specifier|public
name|List
argument_list|<
name|PlayerListNameData
argument_list|>
name|playerListNameData
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|List
argument_list|<
name|Block
argument_list|>
name|disallowedPlacementBlocks
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|List
argument_list|<
name|Block
argument_list|>
name|DisallowedBreakingBlocks
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|MonitoringThread
name|monitoringThread
decl_stmt|;
specifier|public
name|int
name|tempDisplayWidth
decl_stmt|;
specifier|public
name|int
name|tempDisplayHeight
decl_stmt|;
specifier|public
name|boolean
name|canRenderGUI
init|=
literal|true
decl_stmt|;
name|float
name|cameraDistance
init|=
operator|-
literal|0.1F
decl_stmt|;
comment|// TODO Never used
name|int
name|receivedExtensionLength
decl_stmt|;
name|boolean
name|isShuttingDown
init|=
literal|false
decl_stmt|;
name|boolean
name|canSendHeldBlock
init|=
literal|false
decl_stmt|;
name|boolean
name|serverSupportsMessages
init|=
literal|false
decl_stmt|;
name|int
index|[]
name|inventoryCache
decl_stmt|;
name|boolean
name|isLoadingMap
init|=
literal|false
decl_stmt|;
comment|/**      * This timer determines how much time will pass between block      * modifications. It is used to prevent really fast block spamming.      */
specifier|private
name|Timer
name|timer
init|=
operator|new
name|Timer
argument_list|(
literal|20F
argument_list|)
decl_stmt|;
specifier|private
name|ResourceDownloadThread
name|resourceThread
decl_stmt|;
specifier|private
name|int
name|ticks
decl_stmt|;
specifier|private
name|int
name|punchingCooldown
decl_stmt|;
comment|// survival
specifier|private
name|int
name|lastClick
decl_stmt|;
comment|/**      * The cursor instance.      */
specifier|private
name|Cursor
name|cursor
decl_stmt|;
comment|/**      * Creates a new Minecraft instance.      *      * @param canvas     Canvas to use for drawing.      * @param applet     Applet of this instance      * @param width      Width of the window      * @param height     Height of the window      * @param fullscreen True if game should be in fullscreen      * @param isApplet   True if the game is running as an applet      */
specifier|public
name|Minecraft
parameter_list|(
name|Canvas
name|canvas
parameter_list|,
name|MinecraftApplet
name|applet
parameter_list|,
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|,
name|boolean
name|fullscreen
parameter_list|,
name|boolean
name|isApplet
parameter_list|)
block|{
name|this
operator|.
name|applet
operator|=
name|applet
expr_stmt|;
name|this
operator|.
name|canvas
operator|=
name|canvas
expr_stmt|;
name|this
operator|.
name|width
operator|=
name|width
expr_stmt|;
name|this
operator|.
name|height
operator|=
name|height
expr_stmt|;
name|this
operator|.
name|isFullScreen
operator|=
name|fullscreen
expr_stmt|;
name|this
operator|.
name|isApplet
operator|=
name|isApplet
expr_stmt|;
name|sound
operator|=
operator|new
name|SoundManager
argument_list|()
expr_stmt|;
name|ticks
operator|=
literal|0
expr_stmt|;
name|punchingCooldown
operator|=
literal|0
expr_stmt|;
name|levelName
operator|=
literal|null
expr_stmt|;
name|levelId
operator|=
literal|0
expr_stmt|;
name|isOnline
operator|=
literal|false
expr_stmt|;
name|selected
operator|=
literal|null
expr_stmt|;
name|server
operator|=
literal|null
expr_stmt|;
name|port
operator|=
literal|0
expr_stmt|;
name|isRunning
operator|=
literal|false
expr_stmt|;
name|debug
operator|=
literal|""
expr_stmt|;
name|hasMouse
operator|=
literal|false
expr_stmt|;
name|lastClick
operator|=
literal|0
expr_stmt|;
name|isRaining
operator|=
literal|false
expr_stmt|;
name|isSnowing
operator|=
literal|false
expr_stmt|;
try|try
block|{
name|UIManager
operator|.
name|setLookAndFeel
argument_list|(
name|UIManager
operator|.
name|getSystemLookAndFeelClassName
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logWarning
argument_list|(
literal|"Failed to set UI look and feel."
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|canvas
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|robot
operator|=
operator|new
name|Robot
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AWTException
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Failed to create the AWT Robot!"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
specifier|static
name|void
name|checkGLError
parameter_list|(
name|String
name|context
parameter_list|)
block|{
name|int
name|error
decl_stmt|;
if|if
condition|(
operator|(
name|error
operator|=
name|GL11
operator|.
name|glGetError
argument_list|()
operator|)
operator|!=
literal|0
condition|)
block|{
name|String
name|errorString
init|=
name|GLU
operator|.
name|gluErrorString
argument_list|(
name|error
argument_list|)
decl_stmt|;
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"########## GL ERROR ##########"
argument_list|)
expr_stmt|;
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"@ "
operator|+
name|context
argument_list|)
expr_stmt|;
name|LogUtil
operator|.
name|logError
argument_list|(
name|error
operator|+
literal|": "
operator|+
name|errorString
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|boolean
name|doesUrlExistAndIsImage
parameter_list|(
name|URL
name|url
parameter_list|)
block|{
try|try
block|{
name|HttpURLConnection
operator|.
name|setFollowRedirects
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|HttpURLConnection
name|con
init|=
operator|(
name|HttpURLConnection
operator|)
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|con
operator|.
name|setRequestMethod
argument_list|(
literal|"HEAD"
argument_list|)
expr_stmt|;
name|boolean
name|result
init|=
operator|(
name|con
operator|.
name|getResponseCode
argument_list|()
operator|==
name|HttpURLConnection
operator|.
name|HTTP_OK
operator|)
operator|&&
name|con
operator|.
name|getContentType
argument_list|()
operator|.
name|contains
argument_list|(
literal|"image"
argument_list|)
decl_stmt|;
name|con
operator|.
name|disconnect
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logWarning
argument_list|(
literal|"Failed to check for an image at "
operator|+
name|url
argument_list|,
name|ex
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
specifier|public
specifier|static
name|File
name|getMinecraftDirectory
parameter_list|()
block|{
if|if
condition|(
name|mcDir
operator|!=
literal|null
condition|)
block|{
return|return
name|mcDir
return|;
block|}
name|String
name|folder
init|=
literal|".net.classicube.client"
decl_stmt|;
name|String
name|home
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.home"
argument_list|)
decl_stmt|;
name|File
name|minecraftFolder
decl_stmt|;
name|OperatingSystem
name|os
init|=
name|OperatingSystem
operator|.
name|detect
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|os
condition|)
block|{
case|case
name|LINUX
case|:
case|case
name|SOLARIS
case|:
name|minecraftFolder
operator|=
operator|new
name|File
argument_list|(
name|home
argument_list|,
name|folder
operator|+
literal|'/'
argument_list|)
expr_stmt|;
break|break;
case|case
name|WINDOWS
case|:
name|String
name|appData
init|=
name|System
operator|.
name|getenv
argument_list|(
literal|"APPDATA"
argument_list|)
decl_stmt|;
if|if
condition|(
name|appData
operator|!=
literal|null
condition|)
block|{
name|minecraftFolder
operator|=
operator|new
name|File
argument_list|(
name|appData
argument_list|,
name|folder
operator|+
literal|'/'
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|minecraftFolder
operator|=
operator|new
name|File
argument_list|(
name|home
argument_list|,
name|folder
operator|+
literal|'/'
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|MAC_OS_X
case|:
name|minecraftFolder
operator|=
operator|new
name|File
argument_list|(
name|home
argument_list|,
literal|"Library/Application Support/"
operator|+
name|folder
argument_list|)
expr_stmt|;
break|break;
default|default:
name|minecraftFolder
operator|=
operator|new
name|File
argument_list|(
name|home
argument_list|,
name|folder
operator|+
literal|'/'
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|minecraftFolder
operator|.
name|exists
argument_list|()
operator|&&
operator|!
name|minecraftFolder
operator|.
name|mkdirs
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"The working directory could not be created: "
operator|+
name|minecraftFolder
argument_list|)
throw|;
block|}
return|return
name|minecraftFolder
return|;
block|}
name|void
name|downloadImage
parameter_list|(
name|URL
name|url
parameter_list|,
name|File
name|dest
parameter_list|)
block|{
try|try
block|{
if|if
condition|(
operator|!
name|doesUrlExistAndIsImage
argument_list|(
name|url
argument_list|)
condition|)
block|{
return|return;
block|}
try|try
init|(
name|InputStream
name|is
init|=
name|url
operator|.
name|openStream
argument_list|()
init|)
block|{
name|StreamingUtil
operator|.
name|copyStreamToFile
argument_list|(
name|is
argument_list|,
name|dest
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logWarning
argument_list|(
literal|"Failed download an image from "
operator|+
name|url
operator|+
literal|" to "
operator|+
name|dest
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|byte
index|[]
name|flipPixels
parameter_list|(
name|byte
index|[]
name|originalBuffer
parameter_list|,
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|)
block|{
name|byte
index|[]
name|flippedBuffer
init|=
literal|null
decl_stmt|;
name|int
name|stride
init|=
name|width
operator|*
literal|3
decl_stmt|;
if|if
condition|(
name|originalBuffer
operator|!=
literal|null
condition|)
block|{
name|flippedBuffer
operator|=
operator|new
name|byte
index|[
name|originalBuffer
operator|.
name|length
index|]
expr_stmt|;
comment|// There are 3 bytes per cell
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|height
condition|;
name|y
operator|++
control|)
block|{
name|System
operator|.
name|arraycopy
argument_list|(
name|originalBuffer
argument_list|,
name|y
operator|*
name|stride
argument_list|,
name|flippedBuffer
argument_list|,
operator|(
name|height
operator|-
name|y
operator|-
literal|1
operator|)
operator|*
name|stride
argument_list|,
name|stride
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|flippedBuffer
return|;
block|}
comment|// Scale of 0 is 128x128 level. Incrementing the scale doubles the level size.
specifier|public
specifier|final
name|void
name|generateLevel
parameter_list|(
name|int
name|scale
parameter_list|)
block|{
name|String
name|username
init|=
operator|(
name|session
operator|!=
literal|null
condition|?
name|session
operator|.
name|username
else|:
literal|"anonymous"
operator|)
decl_stmt|;
name|Level
name|newLevel
init|=
operator|new
name|LevelGenerator
argument_list|(
name|progressBar
argument_list|)
operator|.
name|generate
argument_list|(
name|username
argument_list|,
literal|128
operator|<<
name|scale
argument_list|,
literal|128
operator|<<
name|scale
argument_list|,
literal|64
argument_list|)
decl_stmt|;
name|gamemode
operator|.
name|prepareLevel
argument_list|(
name|newLevel
argument_list|)
expr_stmt|;
name|setLevel
argument_list|(
name|newLevel
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getHash
parameter_list|(
name|String
name|urlString
parameter_list|)
throws|throws
name|Exception
block|{
name|MessageDigest
name|md
init|=
name|MessageDigest
operator|.
name|getInstance
argument_list|(
literal|"MD5"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|urlBytes
init|=
name|urlString
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|byte
index|[]
name|hashBytes
init|=
name|md
operator|.
name|digest
argument_list|(
name|urlBytes
argument_list|)
decl_stmt|;
return|return
operator|new
name|BigInteger
argument_list|(
literal|1
argument_list|,
name|hashBytes
argument_list|)
operator|.
name|toString
argument_list|(
literal|16
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|void
name|grabMouse
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasMouse
condition|)
block|{
name|hasMouse
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|isLevelLoaded
condition|)
block|{
try|try
block|{
name|Mouse
operator|.
name|setNativeCursor
argument_list|(
name|cursor
argument_list|)
expr_stmt|;
name|Mouse
operator|.
name|setCursorPosition
argument_list|(
name|width
operator|/
literal|2
argument_list|,
name|height
operator|/
literal|2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|LWJGLException
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Failed grab mouse!"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|Mouse
operator|.
name|setGrabbed
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|setCurrentScreen
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|lastClick
operator|=
name|ticks
operator|+
literal|10000
expr_stmt|;
block|}
block|}
specifier|public
specifier|final
name|boolean
name|isOnline
parameter_list|()
block|{
return|return
name|networkManager
operator|!=
literal|null
return|;
block|}
specifier|private
name|boolean
name|isSurvival
parameter_list|()
block|{
return|return
operator|!
operator|(
name|gamemode
operator|instanceof
name|CreativeGameMode
operator|)
return|;
block|}
specifier|private
name|void
name|onMouseClick
parameter_list|(
name|int
name|button
parameter_list|)
block|{
if|if
condition|(
name|button
operator|==
name|MB_LEFT
operator|&&
name|punchingCooldown
operator|>
literal|0
condition|)
block|{
comment|// enforce punching delay (survival)
return|return;
block|}
if|if
condition|(
name|button
operator|==
name|MB_LEFT
condition|)
block|{
comment|// Trigger the punch/block-wave animation on left-click
name|renderer
operator|.
name|heldBlock
operator|.
name|offset
operator|=
operator|-
literal|1
expr_stmt|;
name|renderer
operator|.
name|heldBlock
operator|.
name|moving
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|button
operator|==
name|MB_RIGHT
condition|)
block|{
name|int
name|selectedBlockId
init|=
name|player
operator|.
name|inventory
operator|.
name|getSelected
argument_list|()
decl_stmt|;
if|if
condition|(
name|selectedBlockId
operator|>
literal|0
operator|&&
name|gamemode
operator|.
name|useItem
argument_list|(
name|player
argument_list|,
name|selectedBlockId
argument_list|)
condition|)
block|{
comment|// Player used an item from inventory (survival)
name|renderer
operator|.
name|heldBlock
operator|.
name|pos
operator|=
literal|0
expr_stmt|;
return|return;
block|}
block|}
if|if
condition|(
name|selected
operator|==
literal|null
condition|)
block|{
comment|// The cursor is not on any block
if|if
condition|(
name|button
operator|==
name|MB_LEFT
operator|&&
name|isSurvival
argument_list|()
condition|)
block|{
comment|// Set a 10-tick punching cooldown (survival)
name|punchingCooldown
operator|=
literal|10
expr_stmt|;
block|}
return|return;
block|}
if|if
condition|(
name|selected
operator|.
name|hasEntity
condition|)
block|{
comment|// Player punched something that belongs to an entity (survival)
if|if
condition|(
name|button
operator|==
name|MB_LEFT
condition|)
block|{
name|selected
operator|.
name|entity
operator|.
name|hurt
argument_list|(
name|player
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// Player clicked on a block
name|int
name|x
init|=
name|selected
operator|.
name|x
decl_stmt|;
name|int
name|y
init|=
name|selected
operator|.
name|y
decl_stmt|;
name|int
name|z
init|=
name|selected
operator|.
name|z
decl_stmt|;
if|if
condition|(
name|button
operator|!=
name|MB_LEFT
condition|)
block|{
comment|// When right-clicking on side of a block, figure out where to
comment|// place the new block.
if|if
condition|(
name|selected
operator|.
name|face
operator|==
literal|0
condition|)
block|{
operator|--
name|y
expr_stmt|;
comment|// below
block|}
if|if
condition|(
name|selected
operator|.
name|face
operator|==
literal|1
condition|)
block|{
operator|++
name|y
expr_stmt|;
comment|// above
block|}
if|if
condition|(
name|selected
operator|.
name|face
operator|==
literal|2
condition|)
block|{
operator|--
name|z
expr_stmt|;
block|}
if|if
condition|(
name|selected
operator|.
name|face
operator|==
literal|3
condition|)
block|{
operator|++
name|z
expr_stmt|;
block|}
if|if
condition|(
name|selected
operator|.
name|face
operator|==
literal|4
condition|)
block|{
operator|--
name|x
expr_stmt|;
block|}
if|if
condition|(
name|selected
operator|.
name|face
operator|==
literal|5
condition|)
block|{
operator|++
name|x
expr_stmt|;
block|}
block|}
name|Block
name|block
decl_stmt|;
if|if
condition|(
name|level
operator|!=
literal|null
condition|)
block|{
name|block
operator|=
name|Block
operator|.
name|blocks
index|[
name|level
operator|.
name|getTile
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
index|]
expr_stmt|;
block|}
else|else
block|{
comment|// Ignore clicks if no level is loaded
return|return;
block|}
if|if
condition|(
name|button
operator|==
name|MB_LEFT
condition|)
block|{
comment|// on left-click: delete a block (if allowed)
if|if
condition|(
operator|(
name|block
operator|!=
name|Block
operator|.
name|BEDROCK
operator|||
name|player
operator|.
name|userType
operator|>=
literal|100
operator|)
operator|&&
operator|!
name|DisallowedBreakingBlocks
operator|.
name|contains
argument_list|(
name|block
argument_list|)
condition|)
block|{
name|gamemode
operator|.
name|hitBlock
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
return|return;
block|}
comment|// on right-click: build a block
name|int
name|blockID
init|=
name|player
operator|.
name|inventory
operator|.
name|getSelected
argument_list|()
decl_stmt|;
if|if
condition|(
name|blockID
operator|<=
literal|0
operator|||
name|disallowedPlacementBlocks
operator|.
name|contains
argument_list|(
name|Block
operator|.
name|blocks
index|[
name|blockID
index|]
argument_list|)
condition|)
block|{
return|return;
comment|// if air or not allowed, return
block|}
name|AABB
name|aabb
init|=
name|Block
operator|.
name|blocks
index|[
name|blockID
index|]
operator|.
name|getCollisionBox
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
decl_stmt|;
name|boolean
name|isAirOrLiquid
init|=
operator|(
name|block
operator|==
literal|null
operator|||
name|block
operator|==
name|Block
operator|.
name|WATER
operator|||
name|block
operator|==
name|Block
operator|.
name|STATIONARY_WATER
operator|||
name|block
operator|==
name|Block
operator|.
name|LAVA
operator|||
name|block
operator|==
name|Block
operator|.
name|STATIONARY_LAVA
operator|)
decl_stmt|;
if|if
condition|(
operator|!
name|isAirOrLiquid
operator|||
operator|(
name|aabb
operator|!=
literal|null
operator|&&
operator|(
operator|!
operator|(
operator|!
name|player
operator|.
name|boundingBox
operator|.
name|intersects
argument_list|(
name|aabb
argument_list|)
operator|&&
name|level
operator|.
name|isFree
argument_list|(
name|aabb
argument_list|)
operator|)
operator|)
operator|)
condition|)
block|{
return|return;
block|}
if|if
condition|(
operator|!
name|gamemode
operator|.
name|canPlace
argument_list|(
name|blockID
argument_list|)
condition|)
block|{
comment|// Ignore if gameMode does not allow placing this block type
comment|// (survival)
return|return;
block|}
if|if
condition|(
name|session
operator|==
literal|null
condition|)
block|{
comment|// Singleplayer-only snow behavior code.
name|Block
name|toCheck
init|=
name|Block
operator|.
name|blocks
index|[
name|level
operator|.
name|getTile
argument_list|(
name|x
argument_list|,
name|y
operator|-
literal|1
argument_list|,
name|z
argument_list|)
index|]
decl_stmt|;
if|if
condition|(
name|toCheck
operator|!=
literal|null
operator|&&
name|toCheck
operator|.
name|id
operator|>
literal|0
operator|&&
operator|(
name|toCheck
operator|==
name|Block
operator|.
name|SNOW
operator|)
operator|&&
name|selected
operator|.
name|face
operator|==
literal|1
condition|)
block|{
if|if
condition|(
name|block
operator|==
name|Block
operator|.
name|SNOW
condition|)
block|{
comment|// Ignore placing snow-on-snow. Snow blocks don't stack,
comment|// they just merge.
return|return;
block|}
else|else
block|{
comment|// When clicking on top face of a snow block,
comment|// replace it instead of stacking another block on top
comment|// of it
name|y
operator|-=
literal|1
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|isOnline
argument_list|()
condition|)
block|{
name|networkManager
operator|.
name|sendBlockChange
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|button
argument_list|,
name|blockID
argument_list|)
expr_stmt|;
block|}
comment|// Update local copy of the map
name|level
operator|.
name|netSetTile
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|blockID
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|heldBlock
operator|.
name|pos
operator|=
literal|0F
expr_stmt|;
name|Block
operator|.
name|blocks
index|[
name|blockID
index|]
operator|.
name|onPlace
argument_list|(
name|level
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|final
name|void
name|pause
parameter_list|()
block|{
if|if
condition|(
name|currentScreen
operator|==
literal|null
condition|)
block|{
name|setCurrentScreen
argument_list|(
operator|new
name|PauseScreen
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|resize
parameter_list|()
block|{
name|width
operator|=
name|Display
operator|.
name|getDisplayMode
argument_list|()
operator|.
name|getWidth
argument_list|()
expr_stmt|;
name|height
operator|=
name|Display
operator|.
name|getDisplayMode
argument_list|()
operator|.
name|getHeight
argument_list|()
expr_stmt|;
if|if
condition|(
name|width
operator|<=
literal|0
condition|)
block|{
name|width
operator|=
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|height
operator|<=
literal|0
condition|)
block|{
name|height
operator|=
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|hud
operator|!=
literal|null
condition|)
block|{
name|hud
operator|.
name|width
operator|=
name|width
operator|*
literal|240
operator|/
name|height
expr_stmt|;
name|hud
operator|.
name|height
operator|=
name|height
operator|*
literal|240
operator|/
name|height
expr_stmt|;
block|}
if|if
condition|(
name|currentScreen
operator|!=
literal|null
condition|)
block|{
name|currentScreen
operator|.
name|width
operator|=
name|width
operator|*
literal|240
operator|/
name|height
expr_stmt|;
name|currentScreen
operator|.
name|height
operator|=
name|height
operator|*
literal|240
operator|/
name|height
expr_stmt|;
name|currentScreen
operator|.
name|clearButtons
argument_list|()
expr_stmt|;
name|currentScreen
operator|.
name|onOpen
argument_list|()
expr_stmt|;
block|}
block|}
comment|// Starts up the client. Called from Minecraft.run()
specifier|private
name|void
name|initialize
parameter_list|()
throws|throws
name|Exception
block|{
name|mcDir
operator|=
name|getMinecraftDirectory
argument_list|()
expr_stmt|;
name|resourceThread
operator|=
operator|new
name|ResourceDownloadThread
argument_list|(
name|mcDir
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|resourceThread
operator|.
name|run
argument_list|()
expr_stmt|;
comment|// TODO: run asynchronously
if|if
condition|(
operator|!
name|isApplet
condition|)
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"org.lwjgl.librarypath"
argument_list|,
name|mcDir
operator|+
literal|"/natives"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"net.java.games.input.librarypath"
argument_list|,
name|mcDir
operator|+
literal|"/natives"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|session
operator|==
literal|null
condition|)
block|{
name|isSinglePlayer
operator|=
literal|true
expr_stmt|;
name|SessionData
operator|.
name|setAllowedBlocks
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|isApplet
condition|)
block|{
if|if
condition|(
name|session
operator|.
name|mppass
operator|==
literal|null
operator|||
name|port
operator|<
literal|0
condition|)
block|{
name|SessionData
operator|.
name|setAllowedBlocks
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
expr_stmt|;
name|isSinglePlayer
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|canvas
operator|!=
literal|null
condition|)
block|{
name|Display
operator|.
name|setParent
argument_list|(
name|canvas
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|isFullScreen
condition|)
block|{
name|setDisplayMode
argument_list|()
expr_stmt|;
name|Display
operator|.
name|setFullscreen
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|width
operator|=
name|Display
operator|.
name|getDisplayMode
argument_list|()
operator|.
name|getWidth
argument_list|()
expr_stmt|;
name|height
operator|=
name|Display
operator|.
name|getDisplayMode
argument_list|()
operator|.
name|getHeight
argument_list|()
expr_stmt|;
name|tempDisplayWidth
operator|=
name|width
expr_stmt|;
name|tempDisplayHeight
operator|=
name|height
expr_stmt|;
block|}
else|else
block|{
name|Display
operator|.
name|setDisplayMode
argument_list|(
operator|new
name|DisplayMode
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|LogUtil
operator|.
name|logInfo
argument_list|(
literal|"Using LWJGL Version: "
operator|+
name|Sys
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|Display
operator|.
name|setResizable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Display
operator|.
name|setTitle
argument_list|(
literal|"ClassiCube"
argument_list|)
expr_stmt|;
try|try
block|{
name|Display
operator|.
name|create
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|LWJGLException
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Failed to create the OpenGL context."
argument_list|,
name|ex
argument_list|)
expr_stmt|;
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000L
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|ex2
parameter_list|)
block|{
block|}
name|Display
operator|.
name|create
argument_list|()
expr_stmt|;
block|}
name|Keyboard
operator|.
name|create
argument_list|()
expr_stmt|;
name|Mouse
operator|.
name|create
argument_list|()
expr_stmt|;
name|checkGLError
argument_list|(
literal|"Pre startup"
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glShadeModel
argument_list|(
name|GL11
operator|.
name|GL_SMOOTH
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glClearDepth
argument_list|(
literal|1D
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_DEPTH_TEST
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDepthFunc
argument_list|(
name|GL11
operator|.
name|GL_LEQUAL
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_ALPHA_TEST
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glAlphaFunc
argument_list|(
name|GL11
operator|.
name|GL_GREATER
argument_list|,
literal|0.5F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glCullFace
argument_list|(
name|GL11
operator|.
name|GL_BACK
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glMatrixMode
argument_list|(
name|GL11
operator|.
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glMatrixMode
argument_list|(
name|GL11
operator|.
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|checkGLError
argument_list|(
literal|"Startup"
argument_list|)
expr_stmt|;
name|settings
operator|=
operator|new
name|GameSettings
argument_list|(
name|this
argument_list|,
name|mcDir
argument_list|)
expr_stmt|;
name|ShapeRenderer
operator|.
name|instance
operator|=
operator|new
name|ShapeRenderer
argument_list|(
literal|2097152
argument_list|,
name|settings
argument_list|)
expr_stmt|;
comment|// 2MB
name|textureManager
operator|=
operator|new
name|TextureManager
argument_list|(
name|settings
argument_list|,
name|isApplet
argument_list|)
expr_stmt|;
name|textureManager
operator|.
name|registerAnimations
argument_list|()
expr_stmt|;
if|if
condition|(
name|settings
operator|.
name|lastUsedTexturePack
operator|!=
literal|null
condition|)
block|{
comment|// Try to load custom texture pack
name|File
name|texturePack
init|=
operator|new
name|File
argument_list|(
name|getMinecraftDirectory
argument_list|()
argument_list|,
literal|"texturepacks/"
operator|+
name|settings
operator|.
name|lastUsedTexturePack
argument_list|)
decl_stmt|;
if|if
condition|(
name|texturePack
operator|.
name|exists
argument_list|()
condition|)
block|{
name|textureManager
operator|.
name|loadTexturePack
argument_list|(
name|settings
operator|.
name|lastUsedTexturePack
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|settings
operator|.
name|lastUsedTexturePack
operator|=
literal|null
expr_stmt|;
name|settings
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
block|}
name|fontRenderer
operator|=
operator|new
name|FontRenderer
argument_list|(
name|settings
argument_list|,
literal|"/default.png"
argument_list|,
name|textureManager
argument_list|)
expr_stmt|;
name|monitoringThread
operator|=
operator|new
name|MonitoringThread
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
comment|// 1s refresh
name|textureManager
operator|.
name|initAtlas
argument_list|()
expr_stmt|;
name|levelRenderer
operator|=
operator|new
name|LevelRenderer
argument_list|(
name|this
argument_list|,
name|textureManager
argument_list|)
expr_stmt|;
name|Item
operator|.
name|initModels
argument_list|()
expr_stmt|;
name|Mob
operator|.
name|modelCache
operator|=
operator|new
name|ModelManager
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glViewport
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
if|if
condition|(
name|server
operator|!=
literal|null
operator|&&
name|session
operator|!=
literal|null
condition|)
block|{
comment|// We're in multiplayer, connecting to a server!
comment|// Create a tiny temporary empty level while we wait for map to be
comment|// sent
name|Level
name|defaultLevel
init|=
operator|new
name|Level
argument_list|()
decl_stmt|;
name|defaultLevel
operator|.
name|setData
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|,
operator|new
name|byte
index|[
literal|512
index|]
argument_list|)
expr_stmt|;
name|setLevel
argument_list|(
name|defaultLevel
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// We're in singleplayer!
try|try
block|{
if|if
condition|(
operator|!
name|isLevelLoaded
condition|)
block|{
comment|// Try to load a previously-saved level
name|Level
name|level
init|=
operator|new
name|LevelLoader
argument_list|()
operator|.
name|load
argument_list|(
operator|new
name|File
argument_list|(
name|mcDir
argument_list|,
literal|"levelc.cw"
argument_list|)
argument_list|,
name|player
argument_list|)
decl_stmt|;
if|if
condition|(
name|level
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|isSurvival
argument_list|()
condition|)
block|{
name|setLevel
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|progressBar
operator|.
name|setText
argument_list|(
literal|"Loading saved map..."
argument_list|)
expr_stmt|;
name|setLevel
argument_list|(
name|level
argument_list|)
expr_stmt|;
name|isSinglePlayer
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Failed to load a saved singleplayer level."
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|level
operator|==
literal|null
condition|)
block|{
comment|// If loading failed, generate a new level.
name|generateLevel
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
name|particleManager
operator|=
operator|new
name|ParticleManager
argument_list|(
name|level
argument_list|,
name|textureManager
argument_list|)
expr_stmt|;
if|if
condition|(
name|isLevelLoaded
condition|)
block|{
try|try
block|{
name|cursor
operator|=
operator|new
name|Cursor
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
name|BufferUtils
operator|.
name|createIntBuffer
argument_list|(
literal|256
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|LWJGLException
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logWarning
argument_list|(
literal|"Failed to create a transparent native cursor."
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Start the sound player
name|soundPlayer
operator|=
operator|new
name|SoundPlayer
argument_list|(
name|settings
argument_list|)
expr_stmt|;
try|try
block|{
name|AudioFormat
name|soundFormat
init|=
operator|new
name|AudioFormat
argument_list|(
literal|44100F
argument_list|,
literal|16
argument_list|,
literal|2
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|soundPlayer
operator|.
name|dataLine
operator|=
name|AudioSystem
operator|.
name|getSourceDataLine
argument_list|(
name|soundFormat
argument_list|)
expr_stmt|;
name|soundPlayer
operator|.
name|dataLine
operator|.
name|open
argument_list|(
name|soundFormat
argument_list|,
literal|4410
argument_list|)
expr_stmt|;
name|soundPlayer
operator|.
name|dataLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|soundPlayer
operator|.
name|running
operator|=
literal|true
expr_stmt|;
name|Thread
name|soundPlayerThread
init|=
operator|new
name|Thread
argument_list|(
name|soundPlayer
argument_list|)
decl_stmt|;
name|soundPlayerThread
operator|.
name|setDaemon
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|soundPlayerThread
operator|.
name|setPriority
argument_list|(
name|Thread
operator|.
name|MAX_PRIORITY
argument_list|)
expr_stmt|;
name|soundPlayerThread
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|soundPlayer
operator|.
name|running
operator|=
literal|false
expr_stmt|;
name|LogUtil
operator|.
name|logWarning
argument_list|(
literal|"Failed to start the sound player."
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
name|checkGLError
argument_list|(
literal|"Post startup"
argument_list|)
expr_stmt|;
name|hud
operator|=
operator|new
name|HUDScreen
argument_list|(
name|this
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
operator|new
name|SkinDownloadThread
argument_list|(
name|this
argument_list|,
name|skinServer
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
if|if
condition|(
name|server
operator|!=
literal|null
operator|&&
name|session
operator|!=
literal|null
condition|)
block|{
name|networkManager
operator|=
operator|new
name|NetworkManager
argument_list|(
name|this
argument_list|,
name|server
argument_list|,
name|port
argument_list|,
name|session
operator|.
name|username
argument_list|,
name|session
operator|.
name|mppass
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|void
name|run
parameter_list|()
block|{
name|isRunning
operator|=
literal|true
expr_stmt|;
try|try
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Failed to start ClassiCube!"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
literal|null
argument_list|,
name|ex
operator|.
name|toString
argument_list|()
argument_list|,
literal|"Failed to start ClassiCube"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
return|return;
block|}
name|long
name|fpsUpdateTimer
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|int
name|fps
init|=
literal|0
decl_stmt|;
try|try
block|{
comment|// Main loop!
while|while
condition|(
name|isRunning
condition|)
block|{
if|if
condition|(
name|isWaiting
condition|)
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|100L
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|onFrame
argument_list|()
expr_stmt|;
name|fps
operator|++
expr_stmt|;
while|while
condition|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|>=
name|fpsUpdateTimer
operator|+
literal|1000L
condition|)
block|{
name|debug
operator|=
name|fps
operator|+
literal|" fps, "
operator|+
name|Chunk
operator|.
name|chunkUpdates
operator|+
literal|" chunk updates"
expr_stmt|;
name|Chunk
operator|.
name|chunkUpdates
operator|=
literal|0
expr_stmt|;
name|fpsUpdateTimer
operator|+=
literal|1000L
expr_stmt|;
name|fps
operator|=
literal|0
expr_stmt|;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|StopGameException
name|ex
parameter_list|)
block|{
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Fatal error in main loop (run)"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
comment|// Called by run() every frame. Handles timing and rendering. Calls tick().
specifier|private
name|void
name|onFrame
parameter_list|()
block|{
comment|// For all your looping needs
name|int
name|x
decl_stmt|;
name|int
name|y
decl_stmt|;
name|int
name|i
decl_stmt|;
if|if
condition|(
name|canvas
operator|==
literal|null
operator|&&
name|Display
operator|.
name|isCloseRequested
argument_list|()
condition|)
block|{
name|isRunning
operator|=
literal|false
expr_stmt|;
block|}
comment|// Check if window was resized last frame
if|if
condition|(
operator|!
name|Display
operator|.
name|isFullscreen
argument_list|()
operator|&&
operator|(
name|canvas
operator|.
name|getWidth
argument_list|()
operator|!=
name|Display
operator|.
name|getDisplayMode
argument_list|()
operator|.
name|getWidth
argument_list|()
operator|||
name|canvas
operator|.
name|getHeight
argument_list|()
operator|!=
name|Display
operator|.
name|getDisplayMode
argument_list|()
operator|.
name|getHeight
argument_list|()
operator|)
condition|)
block|{
name|DisplayMode
name|displayMode
init|=
operator|new
name|DisplayMode
argument_list|(
name|canvas
operator|.
name|getWidth
argument_list|()
argument_list|,
name|canvas
operator|.
name|getHeight
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|Display
operator|.
name|setDisplayMode
argument_list|(
name|displayMode
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|LWJGLException
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Error resizing the OpenGL context."
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
name|resize
argument_list|()
expr_stmt|;
block|}
try|try
block|{
name|long
name|clockNow
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
comment|// system's clock time
name|long
name|actualNow
init|=
name|System
operator|.
name|nanoTime
argument_list|()
operator|/
literal|1000000L
decl_stmt|;
comment|// JRE's internal counter
name|long
name|clockTimeSinceLastFrame
init|=
name|clockNow
operator|-
name|timer
operator|.
name|lastSysClock
decl_stmt|;
if|if
condition|(
name|clockTimeSinceLastFrame
operator|>
literal|1000L
condition|)
block|{
comment|// Over 1 second has elapsed since last frame.
name|long
name|clockError
init|=
name|actualNow
operator|-
name|timer
operator|.
name|lastHRClock
decl_stmt|;
name|double
name|clockAdjustmentRatio
init|=
name|clockTimeSinceLastFrame
operator|/
operator|(
name|double
operator|)
name|clockError
decl_stmt|;
name|timer
operator|.
name|adjustment
operator|+=
operator|(
name|clockAdjustmentRatio
operator|-
name|timer
operator|.
name|adjustment
operator|)
operator|*
literal|0.20000000298023224D
expr_stmt|;
name|timer
operator|.
name|lastSysClock
operator|=
name|clockNow
expr_stmt|;
name|timer
operator|.
name|lastHRClock
operator|=
name|actualNow
expr_stmt|;
block|}
if|if
condition|(
name|clockTimeSinceLastFrame
operator|<
literal|0L
condition|)
block|{
comment|// Negative time elapsed! System clock probably changed.
name|timer
operator|.
name|lastSysClock
operator|=
name|clockNow
expr_stmt|;
name|timer
operator|.
name|lastHRClock
operator|=
name|actualNow
expr_stmt|;
block|}
name|double
name|actualNowSeconds
init|=
name|actualNow
operator|/
literal|1000D
decl_stmt|;
name|double
name|secondsPassed
init|=
operator|(
name|actualNowSeconds
operator|-
name|timer
operator|.
name|lastHR
operator|)
operator|*
name|timer
operator|.
name|adjustment
decl_stmt|;
name|timer
operator|.
name|lastHR
operator|=
name|actualNowSeconds
expr_stmt|;
comment|// Cap seconds-passed to range [0,1]
if|if
condition|(
name|secondsPassed
operator|<
literal|0D
condition|)
block|{
name|secondsPassed
operator|=
literal|0D
expr_stmt|;
block|}
if|if
condition|(
name|secondsPassed
operator|>
literal|1D
condition|)
block|{
name|secondsPassed
operator|=
literal|1D
expr_stmt|;
block|}
comment|// Figure out how many ticks took place since last frame
name|timer
operator|.
name|elapsedDelta
operator|=
operator|(
name|float
operator|)
operator|(
name|timer
operator|.
name|elapsedDelta
operator|+
name|secondsPassed
operator|*
name|timer
operator|.
name|speed
operator|*
name|timer
operator|.
name|tps
operator|)
expr_stmt|;
name|timer
operator|.
name|elapsedTicks
operator|=
operator|(
name|int
operator|)
name|timer
operator|.
name|elapsedDelta
expr_stmt|;
if|if
condition|(
name|timer
operator|.
name|elapsedTicks
operator|>
literal|100
condition|)
block|{
name|timer
operator|.
name|elapsedTicks
operator|=
literal|100
expr_stmt|;
block|}
name|timer
operator|.
name|elapsedDelta
operator|-=
name|timer
operator|.
name|elapsedTicks
expr_stmt|;
name|timer
operator|.
name|delta
operator|=
name|timer
operator|.
name|elapsedDelta
expr_stmt|;
for|for
control|(
name|int
name|tick
init|=
literal|0
init|;
name|tick
operator|<
name|timer
operator|.
name|elapsedTicks
condition|;
operator|++
name|tick
control|)
block|{
operator|++
name|ticks
expr_stmt|;
name|tick
argument_list|()
expr_stmt|;
block|}
name|checkGLError
argument_list|(
literal|"Pre render"
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|isOnline
condition|)
block|{
name|gamemode
operator|.
name|applyCracks
argument_list|(
name|timer
operator|.
name|delta
argument_list|)
expr_stmt|;
if|if
condition|(
name|renderer
operator|.
name|displayActive
operator|&&
operator|!
name|Display
operator|.
name|isActive
argument_list|()
condition|)
block|{
name|renderer
operator|.
name|minecraft
operator|.
name|pause
argument_list|()
expr_stmt|;
block|}
name|renderer
operator|.
name|displayActive
operator|=
name|Display
operator|.
name|isActive
argument_list|()
expr_stmt|;
name|int
name|var86
decl_stmt|;
name|int
name|var81
decl_stmt|;
if|if
condition|(
name|renderer
operator|.
name|minecraft
operator|.
name|hasMouse
condition|)
block|{
name|var81
operator|=
literal|0
expr_stmt|;
name|var86
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|renderer
operator|.
name|minecraft
operator|.
name|isLevelLoaded
condition|)
block|{
if|if
condition|(
name|renderer
operator|.
name|minecraft
operator|.
name|canvas
operator|!=
literal|null
condition|)
block|{
name|Point
name|mouseLocation
init|=
name|renderer
operator|.
name|minecraft
operator|.
name|canvas
operator|.
name|getLocationOnScreen
argument_list|()
decl_stmt|;
name|int
name|mouseX
init|=
name|mouseLocation
operator|.
name|x
operator|+
name|renderer
operator|.
name|minecraft
operator|.
name|width
operator|/
literal|2
decl_stmt|;
name|int
name|mouseY
init|=
name|mouseLocation
operator|.
name|y
operator|+
name|renderer
operator|.
name|minecraft
operator|.
name|height
operator|/
literal|2
decl_stmt|;
name|Point
name|var75
init|=
name|MouseInfo
operator|.
name|getPointerInfo
argument_list|()
operator|.
name|getLocation
argument_list|()
decl_stmt|;
name|var81
operator|=
name|var75
operator|.
name|x
operator|-
name|mouseX
expr_stmt|;
name|var86
operator|=
operator|-
operator|(
name|var75
operator|.
name|y
operator|-
name|mouseY
operator|)
expr_stmt|;
name|renderer
operator|.
name|minecraft
operator|.
name|robot
operator|.
name|mouseMove
argument_list|(
name|mouseX
argument_list|,
name|mouseY
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Mouse
operator|.
name|setCursorPosition
argument_list|(
name|renderer
operator|.
name|minecraft
operator|.
name|width
operator|/
literal|2
argument_list|,
name|renderer
operator|.
name|minecraft
operator|.
name|height
operator|/
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|var81
operator|=
name|Mouse
operator|.
name|getDX
argument_list|()
expr_stmt|;
name|var86
operator|=
name|Mouse
operator|.
name|getDY
argument_list|()
expr_stmt|;
block|}
name|byte
name|mouseDirection
init|=
literal|1
decl_stmt|;
if|if
condition|(
name|renderer
operator|.
name|minecraft
operator|.
name|settings
operator|.
name|invertMouse
condition|)
block|{
name|mouseDirection
operator|=
operator|-
literal|1
expr_stmt|;
block|}
name|renderer
operator|.
name|minecraft
operator|.
name|player
operator|.
name|turn
argument_list|(
name|var81
argument_list|,
name|var86
operator|*
name|mouseDirection
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|renderer
operator|.
name|minecraft
operator|.
name|isOnline
condition|)
block|{
name|var81
operator|=
name|renderer
operator|.
name|minecraft
operator|.
name|width
operator|*
literal|240
operator|/
name|renderer
operator|.
name|minecraft
operator|.
name|height
expr_stmt|;
name|var86
operator|=
name|renderer
operator|.
name|minecraft
operator|.
name|height
operator|*
literal|240
operator|/
name|renderer
operator|.
name|minecraft
operator|.
name|height
expr_stmt|;
name|int
name|mouseX
init|=
name|Mouse
operator|.
name|getX
argument_list|()
operator|*
name|var81
operator|/
name|renderer
operator|.
name|minecraft
operator|.
name|width
decl_stmt|;
name|int
name|mouseY
init|=
name|var86
operator|-
name|Mouse
operator|.
name|getY
argument_list|()
operator|*
name|var86
operator|/
name|renderer
operator|.
name|minecraft
operator|.
name|height
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|renderer
operator|.
name|minecraft
operator|.
name|level
operator|!=
literal|null
operator|&&
name|player
operator|!=
literal|null
condition|)
block|{
name|float
name|delta
init|=
name|timer
operator|.
name|delta
decl_stmt|;
name|float
name|var29
init|=
name|player
operator|.
name|xRotO
operator|+
operator|(
name|player
operator|.
name|xRot
operator|-
name|player
operator|.
name|xRotO
operator|)
operator|*
name|timer
operator|.
name|delta
decl_stmt|;
name|float
name|var30
init|=
name|player
operator|.
name|yRotO
operator|+
operator|(
name|player
operator|.
name|yRot
operator|-
name|player
operator|.
name|yRotO
operator|)
operator|*
name|timer
operator|.
name|delta
decl_stmt|;
name|Vec3D
name|var31
init|=
name|renderer
operator|.
name|getPlayerVector
argument_list|(
name|timer
operator|.
name|delta
argument_list|)
decl_stmt|;
name|float
name|var32
init|=
name|MathHelper
operator|.
name|cos
argument_list|(
operator|(
name|float
operator|)
operator|(
operator|(
name|double
operator|)
operator|-
name|var30
operator|*
operator|(
name|Math
operator|.
name|PI
operator|/
literal|180D
operator|)
operator|-
name|Math
operator|.
name|PI
operator|)
argument_list|)
decl_stmt|;
name|float
name|var69
init|=
name|MathHelper
operator|.
name|sin
argument_list|(
operator|(
name|float
operator|)
operator|(
operator|(
name|double
operator|)
operator|-
name|var30
operator|*
operator|(
name|Math
operator|.
name|PI
operator|/
literal|180D
operator|)
operator|-
name|Math
operator|.
name|PI
operator|)
argument_list|)
decl_stmt|;
name|float
name|var74
init|=
name|MathHelper
operator|.
name|cos
argument_list|(
operator|-
name|var29
operator|*
operator|(
name|float
operator|)
operator|(
name|Math
operator|.
name|PI
operator|/
literal|180D
operator|)
argument_list|)
decl_stmt|;
name|float
name|var33
init|=
name|MathHelper
operator|.
name|sin
argument_list|(
operator|-
name|var29
operator|*
operator|(
name|float
operator|)
operator|(
name|Math
operator|.
name|PI
operator|/
literal|180D
operator|)
argument_list|)
decl_stmt|;
name|float
name|var34
init|=
name|var69
operator|*
name|var74
decl_stmt|;
name|float
name|var87
init|=
name|var32
operator|*
name|var74
decl_stmt|;
name|float
name|reachDistance
init|=
name|renderer
operator|.
name|minecraft
operator|.
name|gamemode
operator|.
name|getReachDistance
argument_list|()
decl_stmt|;
name|Vec3D
name|vec3D
init|=
name|var31
operator|.
name|add
argument_list|(
name|var34
operator|*
name|reachDistance
argument_list|,
name|var33
operator|*
name|reachDistance
argument_list|,
name|var87
operator|*
name|reachDistance
argument_list|)
decl_stmt|;
name|renderer
operator|.
name|minecraft
operator|.
name|selected
operator|=
name|renderer
operator|.
name|minecraft
operator|.
name|level
operator|.
name|clip
argument_list|(
name|var31
argument_list|,
name|vec3D
argument_list|)
expr_stmt|;
name|var74
operator|=
name|reachDistance
expr_stmt|;
if|if
condition|(
name|renderer
operator|.
name|minecraft
operator|.
name|selected
operator|!=
literal|null
condition|)
block|{
name|var74
operator|=
name|renderer
operator|.
name|minecraft
operator|.
name|selected
operator|.
name|vec
operator|.
name|distance
argument_list|(
name|renderer
operator|.
name|getPlayerVector
argument_list|(
name|timer
operator|.
name|delta
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|var31
operator|=
name|renderer
operator|.
name|getPlayerVector
argument_list|(
name|timer
operator|.
name|delta
argument_list|)
expr_stmt|;
if|if
condition|(
name|isSurvival
argument_list|()
condition|)
block|{
name|reachDistance
operator|=
name|var74
expr_stmt|;
block|}
else|else
block|{
name|reachDistance
operator|=
literal|32F
expr_stmt|;
block|}
name|vec3D
operator|=
name|var31
operator|.
name|add
argument_list|(
name|var34
operator|*
name|reachDistance
argument_list|,
name|var33
operator|*
name|reachDistance
argument_list|,
name|var87
operator|*
name|reachDistance
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|entity
operator|=
literal|null
expr_stmt|;
name|List
argument_list|<
name|Entity
argument_list|>
name|var37
init|=
name|renderer
operator|.
name|minecraft
operator|.
name|level
operator|.
name|blockMap
operator|.
name|getEntities
argument_list|(
name|player
argument_list|,
name|player
operator|.
name|boundingBox
operator|.
name|expand
argument_list|(
name|var34
operator|*
name|reachDistance
argument_list|,
name|var33
operator|*
name|reachDistance
argument_list|,
name|var87
operator|*
name|reachDistance
argument_list|)
argument_list|)
decl_stmt|;
name|float
name|var35
init|=
literal|0F
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|var37
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Entity
name|var88
init|=
name|var37
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|var88
operator|.
name|isPickable
argument_list|()
condition|)
block|{
name|var74
operator|=
literal|0.1F
expr_stmt|;
name|MovingObjectPosition
name|var78
init|=
name|var88
operator|.
name|boundingBox
operator|.
name|grow
argument_list|(
name|var74
argument_list|,
name|var74
argument_list|,
name|var74
argument_list|)
operator|.
name|clip
argument_list|(
name|var31
argument_list|,
name|vec3D
argument_list|)
decl_stmt|;
if|if
condition|(
name|var78
operator|!=
literal|null
condition|)
block|{
name|var74
operator|=
name|var31
operator|.
name|distance
argument_list|(
name|var78
operator|.
name|vec
argument_list|)
expr_stmt|;
if|if
condition|(
name|var74
operator|<
name|var35
operator|||
name|var35
operator|==
literal|0F
condition|)
block|{
name|renderer
operator|.
name|entity
operator|=
name|var88
expr_stmt|;
name|var35
operator|=
name|var74
expr_stmt|;
block|}
block|}
block|}
block|}
if|if
condition|(
name|renderer
operator|.
name|entity
operator|!=
literal|null
operator|&&
name|isSurvival
argument_list|()
condition|)
block|{
name|renderer
operator|.
name|minecraft
operator|.
name|selected
operator|=
operator|new
name|MovingObjectPosition
argument_list|(
name|renderer
operator|.
name|entity
argument_list|)
expr_stmt|;
block|}
name|Player
name|player
init|=
name|renderer
operator|.
name|minecraft
operator|.
name|player
decl_stmt|;
name|Level
name|level
init|=
name|renderer
operator|.
name|minecraft
operator|.
name|level
decl_stmt|;
name|LevelRenderer
name|levelRenderer
init|=
name|renderer
operator|.
name|minecraft
operator|.
name|levelRenderer
decl_stmt|;
name|ParticleManager
name|particleManager
init|=
name|renderer
operator|.
name|minecraft
operator|.
name|particleManager
decl_stmt|;
name|GL11
operator|.
name|glViewport
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|renderer
operator|.
name|minecraft
operator|.
name|width
argument_list|,
name|renderer
operator|.
name|minecraft
operator|.
name|height
argument_list|)
expr_stmt|;
name|float
name|viewDistanceFactor
init|=
literal|1F
operator|-
operator|(
name|float
operator|)
operator|(
name|Math
operator|.
name|pow
argument_list|(
operator|(
literal|1F
operator|/
operator|(
literal|4
operator|-
name|renderer
operator|.
name|minecraft
operator|.
name|settings
operator|.
name|viewDistance
operator|)
operator|)
argument_list|,
literal|0.25D
argument_list|)
operator|)
decl_stmt|;
name|float
name|skyColorRed
init|=
operator|(
name|level
operator|.
name|skyColor
operator|>>
literal|16
operator|&
literal|255
operator|)
operator|/
literal|255F
decl_stmt|;
name|float
name|skyColorBlue
init|=
operator|(
name|level
operator|.
name|skyColor
operator|>>
literal|8
operator|&
literal|255
operator|)
operator|/
literal|255F
decl_stmt|;
name|float
name|skyColorGreen
init|=
operator|(
name|level
operator|.
name|skyColor
operator|&
literal|255
operator|)
operator|/
literal|255F
decl_stmt|;
name|renderer
operator|.
name|fogRed
operator|=
operator|(
name|level
operator|.
name|fogColor
operator|>>
literal|16
operator|&
literal|255
operator|)
operator|/
literal|255F
expr_stmt|;
name|renderer
operator|.
name|fogBlue
operator|=
operator|(
name|level
operator|.
name|fogColor
operator|>>
literal|8
operator|&
literal|255
operator|)
operator|/
literal|255F
expr_stmt|;
name|renderer
operator|.
name|fogGreen
operator|=
operator|(
name|level
operator|.
name|fogColor
operator|&
literal|255
operator|)
operator|/
literal|255F
expr_stmt|;
name|renderer
operator|.
name|fogRed
operator|+=
operator|(
name|skyColorRed
operator|-
name|renderer
operator|.
name|fogRed
operator|)
operator|*
name|viewDistanceFactor
expr_stmt|;
name|renderer
operator|.
name|fogBlue
operator|+=
operator|(
name|skyColorBlue
operator|-
name|renderer
operator|.
name|fogBlue
operator|)
operator|*
name|viewDistanceFactor
expr_stmt|;
name|renderer
operator|.
name|fogGreen
operator|+=
operator|(
name|skyColorGreen
operator|-
name|renderer
operator|.
name|fogGreen
operator|)
operator|*
name|viewDistanceFactor
expr_stmt|;
name|renderer
operator|.
name|fogRed
operator|*=
name|renderer
operator|.
name|fogColorMultiplier
expr_stmt|;
name|renderer
operator|.
name|fogBlue
operator|*=
name|renderer
operator|.
name|fogColorMultiplier
expr_stmt|;
name|renderer
operator|.
name|fogGreen
operator|*=
name|renderer
operator|.
name|fogColorMultiplier
expr_stmt|;
name|Block
name|block
init|=
name|Block
operator|.
name|blocks
index|[
name|level
operator|.
name|getTile
argument_list|(
operator|(
name|int
operator|)
name|this
operator|.
name|player
operator|.
name|x
argument_list|,
operator|(
name|int
operator|)
operator|(
name|this
operator|.
name|player
operator|.
name|y
operator|+
literal|0.12F
operator|)
argument_list|,
operator|(
name|int
operator|)
name|this
operator|.
name|player
operator|.
name|z
argument_list|)
index|]
decl_stmt|;
if|if
condition|(
name|block
operator|!=
literal|null
operator|&&
name|block
operator|.
name|getLiquidType
argument_list|()
operator|!=
name|LiquidType
operator|.
name|notLiquid
condition|)
block|{
name|LiquidType
name|liquidType
init|=
name|block
operator|.
name|getLiquidType
argument_list|()
decl_stmt|;
if|if
condition|(
name|liquidType
operator|==
name|LiquidType
operator|.
name|water
condition|)
block|{
name|renderer
operator|.
name|fogRed
operator|=
literal|0.02F
expr_stmt|;
name|renderer
operator|.
name|fogBlue
operator|=
literal|0.02F
expr_stmt|;
name|renderer
operator|.
name|fogGreen
operator|=
literal|0.2F
expr_stmt|;
block|}
if|else if
condition|(
name|liquidType
operator|==
name|LiquidType
operator|.
name|lava
condition|)
block|{
name|renderer
operator|.
name|fogRed
operator|=
literal|0.6F
expr_stmt|;
name|renderer
operator|.
name|fogBlue
operator|=
literal|0.1F
expr_stmt|;
name|renderer
operator|.
name|fogGreen
operator|=
literal|0F
expr_stmt|;
block|}
block|}
name|GL11
operator|.
name|glClearColor
argument_list|(
name|renderer
operator|.
name|fogRed
argument_list|,
name|renderer
operator|.
name|fogBlue
argument_list|,
name|renderer
operator|.
name|fogGreen
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glClear
argument_list|(
name|GL11
operator|.
name|GL_COLOR_BUFFER_BIT
operator||
name|GL11
operator|.
name|GL_DEPTH_BUFFER_BIT
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|fogColorMultiplier
operator|=
literal|1F
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|fogEnd
operator|=
literal|512
operator|>>
operator|(
name|renderer
operator|.
name|minecraft
operator|.
name|settings
operator|.
name|viewDistance
operator|<<
literal|1
operator|)
expr_stmt|;
name|GL11
operator|.
name|glMatrixMode
argument_list|(
name|GL11
operator|.
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|var29
operator|=
literal|0.07F
expr_stmt|;
name|var69
operator|=
literal|70F
expr_stmt|;
if|if
condition|(
name|player
operator|.
name|health
operator|<=
literal|0
condition|)
block|{
name|var74
operator|=
name|player
operator|.
name|deathTime
operator|+
name|delta
expr_stmt|;
name|var69
operator|/=
operator|(
literal|1F
operator|-
literal|500F
operator|/
operator|(
name|var74
operator|+
literal|500F
operator|)
operator|)
operator|*
literal|2F
operator|+
literal|1F
expr_stmt|;
block|}
name|GLU
operator|.
name|gluPerspective
argument_list|(
name|var69
argument_list|,
operator|(
name|float
operator|)
name|renderer
operator|.
name|minecraft
operator|.
name|width
operator|/
operator|(
name|float
operator|)
name|renderer
operator|.
name|minecraft
operator|.
name|height
argument_list|,
literal|0.05F
argument_list|,
name|renderer
operator|.
name|fogEnd
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glMatrixMode
argument_list|(
name|GL11
operator|.
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|renderer
operator|.
name|hurtEffect
argument_list|(
name|delta
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|applyBobbing
argument_list|(
name|delta
argument_list|,
name|renderer
operator|.
name|minecraft
operator|.
name|settings
operator|.
name|viewBobbing
argument_list|)
expr_stmt|;
name|float
name|cameraDistance
init|=
operator|-
literal|5.1F
decl_stmt|;
if|if
condition|(
name|renderer
operator|.
name|minecraft
operator|.
name|selected
operator|!=
literal|null
operator|&&
name|settings
operator|.
name|thirdPersonMode
operator|==
literal|2
condition|)
block|{
name|cameraDistance
operator|=
operator|-
operator|(
name|renderer
operator|.
name|minecraft
operator|.
name|selected
operator|.
name|vec
operator|.
name|distance
argument_list|(
name|renderer
operator|.
name|getPlayerVector
argument_list|(
name|timer
operator|.
name|delta
argument_list|)
argument_list|)
operator|-
literal|0.51F
operator|)
expr_stmt|;
if|if
condition|(
name|cameraDistance
operator|<
operator|-
literal|5.1F
condition|)
name|cameraDistance
operator|=
operator|-
literal|5.1F
expr_stmt|;
block|}
if|if
condition|(
name|settings
operator|.
name|thirdPersonMode
operator|==
literal|0
condition|)
block|{
name|GL11
operator|.
name|glTranslatef
argument_list|(
literal|0F
argument_list|,
literal|0F
argument_list|,
operator|-
literal|0.1F
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|GL11
operator|.
name|glTranslatef
argument_list|(
literal|0F
argument_list|,
literal|0F
argument_list|,
name|cameraDistance
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|settings
operator|.
name|thirdPersonMode
operator|==
literal|2
condition|)
block|{
name|GL11
operator|.
name|glRotatef
argument_list|(
operator|-
name|player
operator|.
name|xRotO
operator|+
operator|(
name|player
operator|.
name|xRot
operator|-
name|player
operator|.
name|xRotO
operator|)
operator|*
name|delta
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
operator|(
name|player
operator|.
name|yRotO
operator|+
operator|(
name|player
operator|.
name|yRot
operator|-
name|player
operator|.
name|yRotO
operator|)
operator|*
name|delta
operator|)
operator|+
literal|180
argument_list|,
literal|0F
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|GL11
operator|.
name|glRotatef
argument_list|(
name|player
operator|.
name|xRotO
operator|+
operator|(
name|player
operator|.
name|xRot
operator|-
name|player
operator|.
name|xRotO
operator|)
operator|*
name|delta
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
name|player
operator|.
name|yRotO
operator|+
operator|(
name|player
operator|.
name|yRot
operator|-
name|player
operator|.
name|yRotO
operator|)
operator|*
name|delta
argument_list|,
literal|0F
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
block|}
name|var69
operator|=
name|player
operator|.
name|xo
operator|+
operator|(
name|player
operator|.
name|x
operator|-
name|player
operator|.
name|xo
operator|)
operator|*
name|delta
expr_stmt|;
name|var74
operator|=
name|player
operator|.
name|yo
operator|+
operator|(
name|player
operator|.
name|y
operator|-
name|player
operator|.
name|yo
operator|)
operator|*
name|delta
expr_stmt|;
name|var33
operator|=
name|player
operator|.
name|zo
operator|+
operator|(
name|player
operator|.
name|z
operator|-
name|player
operator|.
name|zo
operator|)
operator|*
name|delta
expr_stmt|;
name|GL11
operator|.
name|glTranslatef
argument_list|(
operator|-
name|var69
argument_list|,
operator|-
name|var74
argument_list|,
operator|-
name|var33
argument_list|)
expr_stmt|;
name|Frustum
name|frustum
init|=
name|FrustumImpl
operator|.
name|getInstance
argument_list|()
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|levelRenderer
operator|.
name|chunkCache
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|levelRenderer
operator|.
name|chunkCache
index|[
name|i
index|]
operator|.
name|clip
argument_list|(
name|frustum
argument_list|)
expr_stmt|;
block|}
name|levelRenderer
operator|=
name|renderer
operator|.
name|minecraft
operator|.
name|levelRenderer
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|renderer
operator|.
name|minecraft
operator|.
name|levelRenderer
operator|.
name|chunks
argument_list|,
operator|new
name|ChunkDirtyDistanceComparator
argument_list|(
name|player
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|var98
init|=
name|levelRenderer
operator|.
name|chunks
operator|.
name|size
argument_list|()
operator|-
literal|1
decl_stmt|;
name|int
name|var105
init|=
name|levelRenderer
operator|.
name|chunks
operator|.
name|size
argument_list|()
decl_stmt|;
if|if
condition|(
name|var105
operator|>
literal|4
condition|)
block|{
name|var105
operator|=
literal|4
expr_stmt|;
block|}
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|var105
condition|;
operator|++
name|i
control|)
block|{
name|Chunk
name|chunkToUpdate
init|=
name|levelRenderer
operator|.
name|chunks
operator|.
name|remove
argument_list|(
name|var98
operator|-
name|i
argument_list|)
decl_stmt|;
name|chunkToUpdate
operator|.
name|update
argument_list|()
expr_stmt|;
name|chunkToUpdate
operator|.
name|loaded
operator|=
literal|false
expr_stmt|;
block|}
name|renderer
operator|.
name|updateFog
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_FOG
argument_list|)
expr_stmt|;
name|levelRenderer
operator|.
name|sortChunks
argument_list|(
name|player
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|int
name|var83
decl_stmt|;
name|int
name|var110
decl_stmt|;
name|ShapeRenderer
name|shapeRenderer
init|=
name|ShapeRenderer
operator|.
name|instance
decl_stmt|;
name|int
name|var114
decl_stmt|;
name|int
name|var125
decl_stmt|;
name|int
name|var122
decl_stmt|;
name|int
name|var120
decl_stmt|;
if|if
condition|(
name|level
operator|.
name|isSolid
argument_list|(
name|player
operator|.
name|x
argument_list|,
name|player
operator|.
name|y
argument_list|,
name|player
operator|.
name|z
argument_list|,
literal|0.1F
argument_list|)
condition|)
block|{
name|var120
operator|=
operator|(
name|int
operator|)
name|player
operator|.
name|x
expr_stmt|;
name|var83
operator|=
operator|(
name|int
operator|)
name|player
operator|.
name|y
expr_stmt|;
name|var110
operator|=
operator|(
name|int
operator|)
name|player
operator|.
name|z
expr_stmt|;
for|for
control|(
name|var122
operator|=
name|var120
operator|-
literal|1
init|;
name|var122
operator|<=
name|var120
operator|+
literal|1
condition|;
operator|++
name|var122
control|)
block|{
for|for
control|(
name|var125
operator|=
name|var83
operator|-
literal|1
init|;
name|var125
operator|<=
name|var83
operator|+
literal|1
condition|;
operator|++
name|var125
control|)
block|{
for|for
control|(
name|int
name|var38
init|=
name|var110
operator|-
literal|1
init|;
name|var38
operator|<=
name|var110
operator|+
literal|1
condition|;
operator|++
name|var38
control|)
block|{
name|var105
operator|=
name|var38
expr_stmt|;
name|var98
operator|=
name|var125
expr_stmt|;
name|int
name|var104
init|=
name|levelRenderer
operator|.
name|level
operator|.
name|getTile
argument_list|(
name|var122
argument_list|,
name|var125
argument_list|,
name|var38
argument_list|)
decl_stmt|;
if|if
condition|(
name|var104
operator|!=
literal|0
operator|&&
name|Block
operator|.
name|blocks
index|[
name|var104
index|]
operator|.
name|isSolid
argument_list|()
condition|)
block|{
name|GL11
operator|.
name|glColor4f
argument_list|(
literal|0.2F
argument_list|,
literal|0.2F
argument_list|,
literal|0.2F
argument_list|,
literal|1F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDepthFunc
argument_list|(
literal|513
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|begin
argument_list|()
expr_stmt|;
for|for
control|(
name|var114
operator|=
literal|0
init|;
name|var114
operator|<
literal|6
condition|;
operator|++
name|var114
control|)
block|{
name|Block
operator|.
name|blocks
index|[
name|var104
index|]
operator|.
name|renderInside
argument_list|(
name|shapeRenderer
argument_list|,
name|var122
argument_list|,
name|var98
argument_list|,
name|var105
argument_list|,
name|var114
argument_list|)
expr_stmt|;
block|}
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glCullFace
argument_list|(
literal|1028
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|begin
argument_list|()
expr_stmt|;
for|for
control|(
name|var114
operator|=
literal|0
init|;
name|var114
operator|<
literal|6
condition|;
operator|++
name|var114
control|)
block|{
name|Block
operator|.
name|blocks
index|[
name|var104
index|]
operator|.
name|renderInside
argument_list|(
name|shapeRenderer
argument_list|,
name|var122
argument_list|,
name|var98
argument_list|,
name|var105
argument_list|,
name|var114
argument_list|)
expr_stmt|;
block|}
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glCullFace
argument_list|(
literal|1029
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDepthFunc
argument_list|(
literal|515
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
name|renderer
operator|.
name|setLighting
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Vec3D
name|var103
init|=
name|renderer
operator|.
name|getPlayerVector
argument_list|(
name|delta
argument_list|)
decl_stmt|;
name|levelRenderer
operator|.
name|level
operator|.
name|blockMap
operator|.
name|render
argument_list|(
name|var103
argument_list|,
name|frustum
argument_list|,
name|levelRenderer
operator|.
name|textureManager
argument_list|,
name|delta
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|setLighting
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|updateFog
argument_list|()
expr_stmt|;
name|var29
operator|=
operator|-
name|MathHelper
operator|.
name|cos
argument_list|(
name|player
operator|.
name|yRot
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
operator|/
literal|180F
argument_list|)
expr_stmt|;
name|float
name|var117
init|=
operator|-
operator|(
name|var30
operator|=
operator|-
name|MathHelper
operator|.
name|sin
argument_list|(
name|player
operator|.
name|yRot
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
operator|/
literal|180F
argument_list|)
operator|)
operator|*
name|MathHelper
operator|.
name|sin
argument_list|(
name|player
operator|.
name|xRot
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
operator|/
literal|180F
argument_list|)
decl_stmt|;
name|var32
operator|=
name|var29
operator|*
name|MathHelper
operator|.
name|sin
argument_list|(
name|player
operator|.
name|xRot
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
operator|/
literal|180F
argument_list|)
expr_stmt|;
name|var69
operator|=
name|MathHelper
operator|.
name|cos
argument_list|(
name|player
operator|.
name|xRot
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
operator|/
literal|180F
argument_list|)
expr_stmt|;
for|for
control|(
name|var83
operator|=
literal|0
init|;
name|var83
operator|<
literal|2
condition|;
operator|++
name|var83
control|)
block|{
if|if
condition|(
operator|!
name|particleManager
operator|.
name|particles
index|[
name|var83
index|]
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|var110
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|var83
operator|==
literal|0
condition|)
block|{
name|var110
operator|=
name|particleManager
operator|.
name|textureManager
operator|.
name|load
argument_list|(
literal|"/particles.png"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|var83
operator|==
literal|1
condition|)
block|{
name|var110
operator|=
name|particleManager
operator|.
name|textureManager
operator|.
name|load
argument_list|(
literal|"/terrain.png"
argument_list|)
expr_stmt|;
block|}
name|GL11
operator|.
name|glBindTexture
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|,
name|var110
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|begin
argument_list|()
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|particleManager
operator|.
name|particles
index|[
name|var83
index|]
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
operator|(
operator|(
name|Particle
operator|)
name|particleManager
operator|.
name|particles
index|[
name|var83
index|]
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|render
argument_list|(
name|shapeRenderer
argument_list|,
name|delta
argument_list|,
name|var29
argument_list|,
name|var69
argument_list|,
name|var30
argument_list|,
name|var117
argument_list|,
name|var32
argument_list|)
expr_stmt|;
block|}
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
block|}
name|GL11
operator|.
name|glBindTexture
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|,
name|levelRenderer
operator|.
name|textureManager
operator|.
name|load
argument_list|(
literal|"/rock.png"
argument_list|)
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glCallList
argument_list|(
name|levelRenderer
operator|.
name|listId
argument_list|)
expr_stmt|;
comment|// rock
comment|// edges
name|renderer
operator|.
name|updateFog
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glBindTexture
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|,
name|levelRenderer
operator|.
name|textureManager
operator|.
name|load
argument_list|(
literal|"/clouds.png"
argument_list|)
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glColor4f
argument_list|(
literal|1F
argument_list|,
literal|1F
argument_list|,
literal|1F
argument_list|,
literal|1F
argument_list|)
expr_stmt|;
name|float
name|cloudColorRed
init|=
operator|(
name|levelRenderer
operator|.
name|level
operator|.
name|cloudColor
operator|>>
literal|16
operator|&
literal|255
operator|)
operator|/
literal|255F
decl_stmt|;
name|float
name|cloudColorBlue
init|=
operator|(
name|levelRenderer
operator|.
name|level
operator|.
name|cloudColor
operator|>>
literal|8
operator|&
literal|255
operator|)
operator|/
literal|255F
decl_stmt|;
name|float
name|cloudColorGreen
init|=
operator|(
name|levelRenderer
operator|.
name|level
operator|.
name|cloudColor
operator|&
literal|255
operator|)
operator|/
literal|255F
decl_stmt|;
if|if
condition|(
name|level
operator|.
name|cloudLevel
operator|<
literal|0
condition|)
block|{
name|level
operator|.
name|cloudLevel
operator|=
name|levelRenderer
operator|.
name|level
operator|.
name|height
operator|+
literal|2
expr_stmt|;
block|}
name|int
name|cloudLevel
init|=
name|level
operator|.
name|cloudLevel
decl_stmt|;
name|float
name|unknownCloud
init|=
literal|1F
operator|/
literal|2048F
decl_stmt|;
name|float
name|cloudTickOffset
init|=
operator|(
name|levelRenderer
operator|.
name|ticks
operator|+
name|delta
operator|)
operator|*
name|unknownCloud
operator|*
literal|0.03F
decl_stmt|;
if|if
condition|(
name|settings
operator|.
name|showClouds
condition|)
block|{
name|shapeRenderer
operator|.
name|begin
argument_list|()
expr_stmt|;
name|shapeRenderer
operator|.
name|color
argument_list|(
name|cloudColorRed
argument_list|,
name|cloudColorBlue
argument_list|,
name|cloudColorGreen
argument_list|)
expr_stmt|;
comment|//shapeRenderer.color(0, 0, 0);
for|for
control|(
name|x
operator|=
operator|-
literal|2048
init|;
name|x
operator|<
name|levelRenderer
operator|.
name|level
operator|.
name|width
operator|+
literal|2048
condition|;
name|x
operator|+=
literal|512
control|)
block|{
for|for
control|(
name|y
operator|=
operator|-
literal|2048
init|;
name|y
operator|<
name|levelRenderer
operator|.
name|level
operator|.
name|length
operator|+
literal|2048
condition|;
name|y
operator|+=
literal|512
control|)
block|{
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
argument_list|,
name|cloudLevel
argument_list|,
name|y
operator|+
literal|512
argument_list|,
name|x
operator|*
name|unknownCloud
operator|+
name|cloudTickOffset
argument_list|,
operator|(
name|y
operator|+
literal|512
operator|)
operator|*
name|unknownCloud
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
operator|+
literal|512
argument_list|,
name|cloudLevel
argument_list|,
name|y
operator|+
literal|512
argument_list|,
operator|(
name|x
operator|+
literal|512
operator|)
operator|*
name|unknownCloud
operator|+
name|cloudTickOffset
argument_list|,
operator|(
name|y
operator|+
literal|512
operator|)
operator|*
name|unknownCloud
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
operator|+
literal|512
argument_list|,
name|cloudLevel
argument_list|,
name|y
argument_list|,
operator|(
name|x
operator|+
literal|512
operator|)
operator|*
name|unknownCloud
operator|+
name|cloudTickOffset
argument_list|,
name|y
operator|*
name|unknownCloud
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
argument_list|,
name|cloudLevel
argument_list|,
name|y
argument_list|,
name|x
operator|*
name|unknownCloud
operator|+
name|cloudTickOffset
argument_list|,
name|y
operator|*
name|unknownCloud
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
argument_list|,
name|cloudLevel
argument_list|,
name|y
argument_list|,
name|x
operator|*
name|unknownCloud
operator|+
name|cloudTickOffset
argument_list|,
name|y
operator|*
name|unknownCloud
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
operator|+
literal|512
argument_list|,
name|cloudLevel
argument_list|,
name|y
argument_list|,
operator|(
name|x
operator|+
literal|512
operator|)
operator|*
name|unknownCloud
operator|+
name|cloudTickOffset
argument_list|,
name|y
operator|*
name|unknownCloud
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
operator|+
literal|512
argument_list|,
name|cloudLevel
argument_list|,
name|y
operator|+
literal|512
argument_list|,
operator|(
name|x
operator|+
literal|512
operator|)
operator|*
name|unknownCloud
operator|+
name|cloudTickOffset
argument_list|,
operator|(
name|y
operator|+
literal|512
operator|)
operator|*
name|unknownCloud
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|x
argument_list|,
name|cloudLevel
argument_list|,
name|y
operator|+
literal|512
argument_list|,
name|x
operator|*
name|unknownCloud
operator|+
name|cloudTickOffset
argument_list|,
operator|(
name|y
operator|+
literal|512
operator|)
operator|*
name|unknownCloud
argument_list|)
expr_stmt|;
block|}
block|}
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|begin
argument_list|()
expr_stmt|;
name|shapeRenderer
operator|.
name|color
argument_list|(
name|skyColorRed
argument_list|,
name|skyColorBlue
argument_list|,
name|skyColorGreen
argument_list|)
expr_stmt|;
name|int
name|levelHeight
init|=
name|levelRenderer
operator|.
name|level
operator|.
name|height
operator|+
literal|10
decl_stmt|;
if|if
condition|(
name|player
operator|.
name|y
operator|>
name|levelRenderer
operator|.
name|level
operator|.
name|height
condition|)
block|{
name|levelHeight
operator|=
operator|(
name|int
operator|)
operator|(
name|player
operator|.
name|y
operator|+
literal|10
operator|)
expr_stmt|;
block|}
for|for
control|(
name|x
operator|=
operator|-
literal|2048
init|;
name|x
operator|<
name|levelRenderer
operator|.
name|level
operator|.
name|width
operator|+
literal|2048
condition|;
name|x
operator|+=
literal|512
control|)
block|{
for|for
control|(
name|y
operator|=
operator|-
literal|2048
init|;
name|y
operator|<
name|levelRenderer
operator|.
name|level
operator|.
name|length
operator|+
literal|2048
condition|;
name|y
operator|+=
literal|512
control|)
block|{
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|x
argument_list|,
name|levelHeight
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|x
operator|+
literal|512
argument_list|,
name|levelHeight
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|x
operator|+
literal|512
argument_list|,
name|levelHeight
argument_list|,
name|y
operator|+
literal|512
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|x
argument_list|,
name|levelHeight
argument_list|,
name|y
operator|+
literal|512
argument_list|)
expr_stmt|;
block|}
block|}
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|updateFog
argument_list|()
expr_stmt|;
if|if
condition|(
name|renderer
operator|.
name|minecraft
operator|.
name|selected
operator|!=
literal|null
condition|)
block|{
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_ALPHA_TEST
argument_list|)
expr_stmt|;
name|var105
operator|=
name|player
operator|.
name|inventory
operator|.
name|getSelected
argument_list|()
expr_stmt|;
name|MovingObjectPosition
name|var102
init|=
name|renderer
operator|.
name|minecraft
operator|.
name|selected
decl_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_ALPHA_TEST
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glBlendFunc
argument_list|(
name|GL11
operator|.
name|GL_SRC_ALPHA
argument_list|,
name|GL11
operator|.
name|GL_ONE
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glColor4f
argument_list|(
literal|1F
argument_list|,
literal|1F
argument_list|,
literal|1F
argument_list|,
operator|(
name|MathHelper
operator|.
name|sin
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|100F
argument_list|)
operator|*
literal|0.2F
operator|+
literal|0.4F
operator|)
operator|*
literal|0.5F
argument_list|)
expr_stmt|;
if|if
condition|(
name|levelRenderer
operator|.
name|cracks
operator|>
literal|0F
condition|)
block|{
name|GL11
operator|.
name|glBlendFunc
argument_list|(
literal|774
argument_list|,
literal|768
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glBindTexture
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|,
name|levelRenderer
operator|.
name|textureManager
operator|.
name|load
argument_list|(
literal|"/terrain.png"
argument_list|)
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glColor4f
argument_list|(
literal|1F
argument_list|,
literal|1F
argument_list|,
literal|1F
argument_list|,
literal|0.5F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glPushMatrix
argument_list|()
expr_stmt|;
name|block
operator|=
operator|(
name|var114
operator|=
name|levelRenderer
operator|.
name|level
operator|.
name|getTile
argument_list|(
name|var102
operator|.
name|x
argument_list|,
name|var102
operator|.
name|y
argument_list|,
name|var102
operator|.
name|z
argument_list|)
operator|)
operator|>
literal|0
condition|?
name|Block
operator|.
name|blocks
index|[
name|var114
index|]
else|:
literal|null
expr_stmt|;
name|float
name|blockXAverage
init|=
operator|(
name|block
operator|.
name|maxX
operator|+
name|block
operator|.
name|minX
operator|)
operator|/
literal|2F
decl_stmt|;
name|float
name|blockYAverage
init|=
operator|(
name|block
operator|.
name|maxY
operator|+
name|block
operator|.
name|minY
operator|)
operator|/
literal|2F
decl_stmt|;
name|float
name|blockZAverage
init|=
operator|(
name|block
operator|.
name|maxZ
operator|+
name|block
operator|.
name|minZ
operator|)
operator|/
literal|2F
decl_stmt|;
name|GL11
operator|.
name|glTranslatef
argument_list|(
name|var102
operator|.
name|x
operator|+
name|blockXAverage
argument_list|,
name|var102
operator|.
name|y
operator|+
name|blockYAverage
argument_list|,
name|var102
operator|.
name|z
operator|+
name|blockZAverage
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glScalef
argument_list|(
literal|1F
argument_list|,
literal|1.01F
argument_list|,
literal|1.01F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glTranslatef
argument_list|(
operator|-
operator|(
name|var102
operator|.
name|x
operator|+
name|blockXAverage
operator|)
argument_list|,
operator|-
operator|(
name|var102
operator|.
name|y
operator|+
name|blockYAverage
operator|)
argument_list|,
operator|-
operator|(
name|var102
operator|.
name|z
operator|+
name|blockZAverage
operator|)
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|begin
argument_list|()
expr_stmt|;
name|shapeRenderer
operator|.
name|noColor
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glDepthMask
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// Do the sides
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|6
condition|;
operator|++
name|i
control|)
block|{
name|block
operator|.
name|renderSide
argument_list|(
name|shapeRenderer
argument_list|,
name|var102
operator|.
name|x
argument_list|,
name|var102
operator|.
name|y
argument_list|,
name|var102
operator|.
name|z
argument_list|,
name|i
argument_list|,
literal|240
operator|+
operator|(
name|int
operator|)
operator|(
name|levelRenderer
operator|.
name|cracks
operator|*
literal|10F
operator|)
argument_list|)
expr_stmt|;
block|}
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glDepthMask
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glPopMatrix
argument_list|()
expr_stmt|;
block|}
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_ALPHA_TEST
argument_list|)
expr_stmt|;
comment|// TODO ???
name|MovingObjectPosition
name|selectedBlock
init|=
name|renderer
operator|.
name|minecraft
operator|.
name|selected
decl_stmt|;
name|player
operator|.
name|inventory
operator|.
name|getSelected
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glBlendFunc
argument_list|(
name|GL11
operator|.
name|GL_SRC_ALPHA
argument_list|,
name|GL11
operator|.
name|GL_ONE_MINUS_SRC_ALPHA
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glColor4f
argument_list|(
literal|0F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|,
literal|0.4F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glLineWidth
argument_list|(
literal|2F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDepthMask
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|int
name|var104
init|=
name|levelRenderer
operator|.
name|level
operator|.
name|getTile
argument_list|(
name|selectedBlock
operator|.
name|x
argument_list|,
name|selectedBlock
operator|.
name|y
argument_list|,
name|selectedBlock
operator|.
name|z
argument_list|)
decl_stmt|;
if|if
condition|(
name|var104
operator|>
literal|0
condition|)
block|{
name|AABB
name|aabb
init|=
name|Block
operator|.
name|blocks
index|[
name|var104
index|]
operator|.
name|getSelectionBox
argument_list|(
name|selectedBlock
operator|.
name|x
argument_list|,
name|selectedBlock
operator|.
name|y
argument_list|,
name|selectedBlock
operator|.
name|z
argument_list|)
operator|.
name|grow
argument_list|(
literal|0.002F
argument_list|,
literal|0.002F
argument_list|,
literal|0.002F
argument_list|)
decl_stmt|;
name|GL11
operator|.
name|glBegin
argument_list|(
name|GL11
operator|.
name|GL_LINE_STRIP
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnd
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glBegin
argument_list|(
name|GL11
operator|.
name|GL_LINE_STRIP
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnd
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glBegin
argument_list|(
name|GL11
operator|.
name|GL_LINES
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|minX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|maxY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glVertex3f
argument_list|(
name|aabb
operator|.
name|maxX
argument_list|,
name|aabb
operator|.
name|minY
argument_list|,
name|aabb
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnd
argument_list|()
expr_stmt|;
block|}
name|GL11
operator|.
name|glDepthMask
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_ALPHA_TEST
argument_list|)
expr_stmt|;
block|}
name|GL11
operator|.
name|glBlendFunc
argument_list|(
name|GL11
operator|.
name|GL_SRC_ALPHA
argument_list|,
name|GL11
operator|.
name|GL_ONE_MINUS_SRC_ALPHA
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|updateFog
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glBindTexture
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|,
name|levelRenderer
operator|.
name|textureManager
operator|.
name|load
argument_list|(
literal|"/water.png"
argument_list|)
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glCallList
argument_list|(
name|levelRenderer
operator|.
name|listId
operator|+
literal|1
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glColorMask
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|var120
operator|=
name|levelRenderer
operator|.
name|sortChunks
argument_list|(
name|player
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glColorMask
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|var120
operator|>
literal|0
condition|)
block|{
name|GL11
operator|.
name|glBindTexture
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|,
name|levelRenderer
operator|.
name|textureManager
operator|.
name|load
argument_list|(
literal|"/terrain.png"
argument_list|)
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glCallLists
argument_list|(
name|levelRenderer
operator|.
name|buffer
argument_list|)
expr_stmt|;
block|}
name|GL11
operator|.
name|glDepthMask
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_FOG
argument_list|)
expr_stmt|;
comment|// -------------------
name|Collections
operator|.
name|sort
argument_list|(
name|selectionBoxes
argument_list|,
operator|new
name|SelectionBoxDistanceComparator
argument_list|(
name|this
operator|.
name|player
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|selectionBoxes
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|CustomAABB
name|bounds
init|=
name|selectionBoxes
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|bounds
decl_stmt|;
name|ColorCache
name|color
init|=
name|selectionBoxes
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|color
decl_stmt|;
name|GL11
operator|.
name|glLineWidth
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_ALPHA_TEST
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glBlendFunc
argument_list|(
name|GL11
operator|.
name|GL_SRC_ALPHA
argument_list|,
name|GL11
operator|.
name|GL_ONE_MINUS_SRC_ALPHA
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glColor4f
argument_list|(
name|color
operator|.
name|R
argument_list|,
name|color
operator|.
name|G
argument_list|,
name|color
operator|.
name|B
argument_list|,
name|color
operator|.
name|A
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDepthMask
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
comment|// GL11.glBegin(GL11.GL_QUADS);
comment|// Front Face
comment|// Bottom Left
name|shapeRenderer
operator|.
name|begin
argument_list|()
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Bottom Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Top Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Top Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Back Face
comment|// Bottom Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Top Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Top Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Bottom Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Top Face
comment|// Top Left
comment|// Bottom Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Bottom Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Top Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Bottom Face
comment|// Top Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Top Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Bottom Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Bottom Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Right face
comment|// Bottom Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Top Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Top Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Bottom Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Left Face
comment|// Bottom Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
comment|// Bottom Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Top Right
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
comment|// Top Left
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glColor4f
argument_list|(
name|color
operator|.
name|R
argument_list|,
name|color
operator|.
name|G
argument_list|,
name|color
operator|.
name|B
argument_list|,
name|color
operator|.
name|A
operator|+
literal|0.2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|startDrawing
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
name|shapeRenderer
operator|.
name|startDrawing
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
name|shapeRenderer
operator|.
name|startDrawing
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|maxZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|minX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|maxY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertex
argument_list|(
name|bounds
operator|.
name|maxX
argument_list|,
name|bounds
operator|.
name|minY
argument_list|,
name|bounds
operator|.
name|minZ
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glDepthMask
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_ALPHA_TEST
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
comment|// ------------------
block|}
if|if
condition|(
name|renderer
operator|.
name|minecraft
operator|.
name|isRaining
operator|||
name|renderer
operator|.
name|minecraft
operator|.
name|isSnowing
condition|)
block|{
name|float
name|speed
init|=
literal|1F
decl_stmt|;
name|int
name|var104
init|=
operator|(
name|int
operator|)
name|this
operator|.
name|player
operator|.
name|x
decl_stmt|;
name|int
name|var108
init|=
operator|(
name|int
operator|)
name|this
operator|.
name|player
operator|.
name|y
decl_stmt|;
name|var114
operator|=
operator|(
name|int
operator|)
name|this
operator|.
name|player
operator|.
name|z
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glNormal3f
argument_list|(
literal|0F
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glBlendFunc
argument_list|(
name|GL11
operator|.
name|GL_SRC_ALPHA
argument_list|,
name|GL11
operator|.
name|GL_ONE_MINUS_SRC_ALPHA
argument_list|)
expr_stmt|;
if|if
condition|(
name|renderer
operator|.
name|minecraft
operator|.
name|isRaining
condition|)
block|{
name|GL11
operator|.
name|glBindTexture
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|,
name|renderer
operator|.
name|minecraft
operator|.
name|textureManager
operator|.
name|load
argument_list|(
literal|"/rain.png"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|renderer
operator|.
name|minecraft
operator|.
name|isSnowing
condition|)
block|{
name|GL11
operator|.
name|glBindTexture
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|,
name|renderer
operator|.
name|minecraft
operator|.
name|textureManager
operator|.
name|load
argument_list|(
literal|"/snow.png"
argument_list|)
argument_list|)
expr_stmt|;
name|speed
operator|=
literal|0.2F
expr_stmt|;
block|}
for|for
control|(
name|var110
operator|=
name|var104
operator|-
literal|5
init|;
name|var110
operator|<=
name|var104
operator|+
literal|5
condition|;
operator|++
name|var110
control|)
block|{
for|for
control|(
name|var122
operator|=
name|var114
operator|-
literal|5
init|;
name|var122
operator|<=
name|var114
operator|+
literal|5
condition|;
operator|++
name|var122
control|)
block|{
name|var120
operator|=
name|level
operator|.
name|getHighestTile
argument_list|(
name|var110
argument_list|,
name|var122
argument_list|)
expr_stmt|;
name|var86
operator|=
name|var108
operator|-
literal|5
expr_stmt|;
name|var125
operator|=
name|var108
operator|+
literal|5
expr_stmt|;
if|if
condition|(
name|var86
operator|<
name|var120
condition|)
block|{
name|var86
operator|=
name|var120
expr_stmt|;
block|}
if|if
condition|(
name|var125
operator|<
name|var120
condition|)
block|{
name|var125
operator|=
name|var120
expr_stmt|;
block|}
if|if
condition|(
name|var86
operator|!=
name|var125
condition|)
block|{
name|var74
operator|=
operator|(
operator|(
name|renderer
operator|.
name|levelTicks
operator|+
name|var110
operator|*
literal|3121
operator|+
name|var122
operator|*
literal|418711
operator|)
operator|%
literal|32
operator|+
name|delta
operator|)
operator|/
literal|32F
operator|*
name|speed
expr_stmt|;
name|float
name|var124
init|=
name|var110
operator|+
literal|0.5F
operator|-
name|this
operator|.
name|player
operator|.
name|x
decl_stmt|;
name|var35
operator|=
name|var122
operator|+
literal|0.5F
operator|-
name|this
operator|.
name|player
operator|.
name|z
expr_stmt|;
name|float
name|var92
init|=
name|MathHelper
operator|.
name|sqrt
argument_list|(
name|var124
operator|*
name|var124
operator|+
name|var35
operator|*
name|var35
argument_list|)
operator|/
literal|5
decl_stmt|;
name|GL11
operator|.
name|glColor4f
argument_list|(
literal|1F
argument_list|,
literal|1F
argument_list|,
literal|1F
argument_list|,
operator|(
literal|1F
operator|-
name|var92
operator|*
name|var92
operator|)
operator|*
literal|0.7F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|begin
argument_list|()
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var110
argument_list|,
name|var86
argument_list|,
name|var122
argument_list|,
literal|0F
argument_list|,
name|var86
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var110
operator|+
literal|1
argument_list|,
name|var86
argument_list|,
name|var122
operator|+
literal|1
argument_list|,
literal|2F
argument_list|,
name|var86
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var110
operator|+
literal|1
argument_list|,
name|var125
argument_list|,
name|var122
operator|+
literal|1
argument_list|,
literal|2F
argument_list|,
name|var125
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var110
argument_list|,
name|var125
argument_list|,
name|var122
argument_list|,
literal|0F
argument_list|,
name|var125
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var110
argument_list|,
name|var86
argument_list|,
name|var122
operator|+
literal|1
argument_list|,
literal|0F
argument_list|,
name|var86
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var110
operator|+
literal|1
argument_list|,
name|var86
argument_list|,
name|var122
argument_list|,
literal|2F
argument_list|,
name|var86
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var110
operator|+
literal|1
argument_list|,
name|var125
argument_list|,
name|var122
argument_list|,
literal|2F
argument_list|,
name|var125
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|vertexUV
argument_list|(
name|var110
argument_list|,
name|var125
argument_list|,
name|var122
operator|+
literal|1
argument_list|,
literal|0F
argument_list|,
name|var125
operator|*
literal|2F
operator|/
literal|8F
operator|+
name|var74
operator|*
literal|2F
argument_list|)
expr_stmt|;
name|shapeRenderer
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
block|}
block|}
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_BLEND
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|isSinglePlayer
operator|&&
name|networkManager
operator|!=
literal|null
operator|&&
name|networkManager
operator|.
name|players
operator|!=
literal|null
operator|&&
name|networkManager
operator|.
name|players
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
operator|(
name|settings
operator|.
name|ShowNames
operator|==
literal|2
operator|||
name|settings
operator|.
name|ShowNames
operator|==
literal|3
operator|)
operator|&&
name|this
operator|.
name|player
operator|.
name|userType
operator|>=
literal|100
condition|)
block|{
for|for
control|(
name|int
name|n
init|=
literal|0
init|;
name|n
operator|<
name|networkManager
operator|.
name|players
operator|.
name|values
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|n
operator|++
control|)
block|{
name|NetworkPlayer
name|np
init|=
operator|(
name|NetworkPlayer
operator|)
name|networkManager
operator|.
name|players
operator|.
name|values
argument_list|()
operator|.
name|toArray
argument_list|()
index|[
name|n
index|]
decl_stmt|;
if|if
condition|(
name|np
operator|!=
literal|null
condition|)
block|{
name|np
operator|.
name|renderHover
argument_list|(
name|renderer
operator|.
name|minecraft
operator|.
name|textureManager
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
if|if
condition|(
name|renderer
operator|.
name|entity
operator|!=
literal|null
condition|)
block|{
name|renderer
operator|.
name|entity
operator|.
name|renderHover
argument_list|(
name|renderer
operator|.
name|minecraft
operator|.
name|textureManager
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|GL11
operator|.
name|glClear
argument_list|(
name|GL11
operator|.
name|GL_DEPTH_BUFFER_BIT
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|renderer
operator|.
name|hurtEffect
argument_list|(
name|delta
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|applyBobbing
argument_list|(
name|delta
argument_list|,
name|renderer
operator|.
name|minecraft
operator|.
name|settings
operator|.
name|viewBobbing
argument_list|)
expr_stmt|;
name|HeldBlock
name|heldBlock
init|=
name|renderer
operator|.
name|heldBlock
decl_stmt|;
name|var117
operator|=
name|renderer
operator|.
name|heldBlock
operator|.
name|lastPos
operator|+
operator|(
name|heldBlock
operator|.
name|pos
operator|-
name|heldBlock
operator|.
name|lastPos
operator|)
operator|*
name|delta
expr_stmt|;
name|player
operator|=
name|heldBlock
operator|.
name|minecraft
operator|.
name|player
expr_stmt|;
name|GL11
operator|.
name|glPushMatrix
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
name|player
operator|.
name|xRotO
operator|+
operator|(
name|player
operator|.
name|xRot
operator|-
name|player
operator|.
name|xRotO
operator|)
operator|*
name|delta
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
name|player
operator|.
name|yRotO
operator|+
operator|(
name|player
operator|.
name|yRot
operator|-
name|player
operator|.
name|yRotO
operator|)
operator|*
name|delta
argument_list|,
literal|0F
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|heldBlock
operator|.
name|minecraft
operator|.
name|renderer
operator|.
name|setLighting
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glPopMatrix
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glPushMatrix
argument_list|()
expr_stmt|;
name|var69
operator|=
literal|0.8F
expr_stmt|;
if|if
condition|(
name|heldBlock
operator|.
name|moving
condition|)
block|{
name|var33
operator|=
name|MathHelper
operator|.
name|sin
argument_list|(
operator|(
name|var74
operator|=
operator|(
name|heldBlock
operator|.
name|offset
operator|+
name|delta
operator|)
operator|/
literal|7F
operator|)
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glTranslatef
argument_list|(
operator|-
name|MathHelper
operator|.
name|sin
argument_list|(
name|MathHelper
operator|.
name|sqrt
argument_list|(
name|var74
argument_list|)
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
argument_list|)
operator|*
literal|0.4F
argument_list|,
name|MathHelper
operator|.
name|sin
argument_list|(
name|MathHelper
operator|.
name|sqrt
argument_list|(
name|var74
argument_list|)
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
operator|*
literal|2F
argument_list|)
operator|*
literal|0.2F
argument_list|,
operator|-
name|var33
operator|*
literal|0.2F
argument_list|)
expr_stmt|;
block|}
name|GL11
operator|.
name|glTranslatef
argument_list|(
literal|0.7F
operator|*
name|var69
argument_list|,
operator|-
literal|0.65F
operator|*
name|var69
operator|-
operator|(
literal|1F
operator|-
name|var117
operator|)
operator|*
literal|0.6F
argument_list|,
operator|-
literal|0.9F
operator|*
name|var69
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
literal|45F
argument_list|,
literal|0F
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glEnable
argument_list|(
name|GL11
operator|.
name|GL_NORMALIZE
argument_list|)
expr_stmt|;
if|if
condition|(
name|heldBlock
operator|.
name|moving
condition|)
block|{
name|var33
operator|=
name|MathHelper
operator|.
name|sin
argument_list|(
operator|(
name|var74
operator|=
operator|(
name|heldBlock
operator|.
name|offset
operator|+
name|delta
operator|)
operator|/
literal|7F
operator|)
operator|*
name|var74
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
name|MathHelper
operator|.
name|sin
argument_list|(
name|MathHelper
operator|.
name|sqrt
argument_list|(
name|var74
argument_list|)
operator|*
operator|(
name|float
operator|)
name|Math
operator|.
name|PI
argument_list|)
operator|*
literal|80F
argument_list|,
literal|0F
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
operator|-
name|var33
operator|*
literal|20F
argument_list|,
literal|1F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
block|}
name|ColorCache
name|color
init|=
name|heldBlock
operator|.
name|minecraft
operator|.
name|level
operator|.
name|getBrightnessColor
argument_list|(
operator|(
name|int
operator|)
name|player
operator|.
name|x
argument_list|,
operator|(
name|int
operator|)
name|player
operator|.
name|y
argument_list|,
operator|(
name|int
operator|)
name|player
operator|.
name|z
argument_list|)
decl_stmt|;
name|GL11
operator|.
name|glColor4f
argument_list|(
name|color
operator|.
name|R
argument_list|,
name|color
operator|.
name|G
argument_list|,
name|color
operator|.
name|B
argument_list|,
literal|1F
argument_list|)
expr_stmt|;
if|if
condition|(
name|heldBlock
operator|.
name|block
operator|!=
literal|null
condition|)
block|{
name|GL11
operator|.
name|glScalef
argument_list|(
literal|0.4F
argument_list|,
literal|0.4F
argument_list|,
literal|0.4F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glTranslatef
argument_list|(
operator|-
literal|0.5F
argument_list|,
operator|-
literal|0.5F
argument_list|,
operator|-
literal|0.5F
argument_list|)
expr_stmt|;
if|if
condition|(
name|settings
operator|.
name|thirdPersonMode
operator|==
literal|0
operator|&&
name|canRenderGUI
condition|)
block|{
name|GL11
operator|.
name|glBindTexture
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|,
name|heldBlock
operator|.
name|minecraft
operator|.
name|textureManager
operator|.
name|load
argument_list|(
literal|"/terrain.png"
argument_list|)
argument_list|)
expr_stmt|;
name|heldBlock
operator|.
name|block
operator|.
name|renderPreview
argument_list|(
name|shapeRenderer
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|player
operator|.
name|bindTexture
argument_list|(
name|heldBlock
operator|.
name|minecraft
operator|.
name|textureManager
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glScalef
argument_list|(
literal|1F
argument_list|,
operator|-
literal|1F
argument_list|,
operator|-
literal|1F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glTranslatef
argument_list|(
literal|0F
argument_list|,
literal|0.2F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glRotatef
argument_list|(
operator|-
literal|120F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|,
literal|1F
argument_list|)
expr_stmt|;
name|ModelPart
name|leftArm
init|=
name|heldBlock
operator|.
name|minecraft
operator|.
name|player
operator|.
name|getModel
argument_list|()
operator|.
name|leftArm
decl_stmt|;
if|if
condition|(
operator|!
name|leftArm
operator|.
name|hasList
condition|)
block|{
name|leftArm
operator|.
name|generateList
argument_list|(
literal|0.0625F
argument_list|)
expr_stmt|;
comment|// 1/16
block|}
name|GL11
operator|.
name|glCallList
argument_list|(
name|leftArm
operator|.
name|list
argument_list|)
expr_stmt|;
block|}
name|GL11
operator|.
name|glDisable
argument_list|(
name|GL11
operator|.
name|GL_NORMALIZE
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glPopMatrix
argument_list|()
expr_stmt|;
name|heldBlock
operator|.
name|minecraft
operator|.
name|renderer
operator|.
name|setLighting
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|minecraft
operator|.
name|hud
operator|.
name|render
argument_list|(
name|timer
operator|.
name|delta
argument_list|,
name|renderer
operator|.
name|minecraft
operator|.
name|currentScreen
operator|!=
literal|null
argument_list|,
name|mouseX
argument_list|,
name|mouseY
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|GL11
operator|.
name|glViewport
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|renderer
operator|.
name|minecraft
operator|.
name|width
argument_list|,
name|renderer
operator|.
name|minecraft
operator|.
name|height
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glClearColor
argument_list|(
literal|0F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|,
literal|0F
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glClear
argument_list|(
name|GL11
operator|.
name|GL_COLOR_BUFFER_BIT
operator||
name|GL11
operator|.
name|GL_DEPTH_BUFFER_BIT
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glMatrixMode
argument_list|(
name|GL11
operator|.
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|GL11
operator|.
name|glMatrixMode
argument_list|(
name|GL11
operator|.
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|renderer
operator|.
name|enableGuiMode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|renderer
operator|.
name|minecraft
operator|.
name|currentScreen
operator|!=
literal|null
condition|)
block|{
name|renderer
operator|.
name|minecraft
operator|.
name|currentScreen
operator|.
name|render
argument_list|(
name|mouseX
argument_list|,
name|mouseY
argument_list|)
expr_stmt|;
block|}
name|Thread
operator|.
name|yield
argument_list|()
expr_stmt|;
name|Display
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|settings
operator|.
name|limitFramerate
condition|)
block|{
name|Display
operator|.
name|sync
argument_list|(
literal|60
argument_list|)
expr_stmt|;
block|}
name|checkGLError
argument_list|(
literal|"Post render"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Fatal error in main loop (onFrame)"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
name|setCurrentScreen
argument_list|(
operator|new
name|ErrorScreen
argument_list|(
literal|"Client error"
argument_list|,
literal|"The game broke! ["
operator|+
name|ex
operator|+
literal|"]"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|final
name|void
name|setCurrentScreen
parameter_list|(
name|GuiScreen
name|newScreen
parameter_list|)
block|{
if|if
condition|(
name|currentScreen
operator|!=
literal|null
condition|)
block|{
name|currentScreen
operator|.
name|onClose
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|newScreen
operator|==
literal|null
operator|&&
name|player
operator|.
name|health
operator|<=
literal|0
condition|)
block|{
name|newScreen
operator|=
operator|new
name|GameOverScreen
argument_list|()
expr_stmt|;
block|}
name|currentScreen
operator|=
name|newScreen
expr_stmt|;
if|if
condition|(
name|newScreen
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|hasMouse
condition|)
block|{
name|player
operator|.
name|releaseAllKeys
argument_list|()
expr_stmt|;
name|hasMouse
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|isLevelLoaded
condition|)
block|{
try|try
block|{
name|Mouse
operator|.
name|setNativeCursor
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|LWJGLException
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Error showing the mouse cursor."
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|Mouse
operator|.
name|setGrabbed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
name|int
name|var2
init|=
name|width
operator|*
literal|240
operator|/
name|height
decl_stmt|;
name|int
name|var3
init|=
name|height
operator|*
literal|240
operator|/
name|height
decl_stmt|;
name|newScreen
operator|.
name|open
argument_list|(
name|this
argument_list|,
name|var2
argument_list|,
name|var3
argument_list|)
expr_stmt|;
name|isOnline
operator|=
literal|false
expr_stmt|;
return|return;
block|}
name|grabMouse
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|setDisplayMode
parameter_list|()
throws|throws
name|LWJGLException
block|{
name|DisplayMode
name|desktopMode
init|=
name|Display
operator|.
name|getDesktopDisplayMode
argument_list|()
decl_stmt|;
name|Display
operator|.
name|setDisplayMode
argument_list|(
name|desktopMode
argument_list|)
expr_stmt|;
name|width
operator|=
name|desktopMode
operator|.
name|getWidth
argument_list|()
expr_stmt|;
name|height
operator|=
name|desktopMode
operator|.
name|getHeight
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|final
name|void
name|setLevel
parameter_list|(
name|Level
name|theLevel
parameter_list|)
block|{
if|if
condition|(
name|applet
operator|==
literal|null
operator|||
operator|!
name|applet
operator|.
name|getDocumentBase
argument_list|()
operator|.
name|getHost
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"minecraft.net"
argument_list|)
operator|&&
operator|!
name|applet
operator|.
name|getDocumentBase
argument_list|()
operator|.
name|getHost
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"www.minecraft.net"
argument_list|)
operator|||
operator|!
name|applet
operator|.
name|getCodeBase
argument_list|()
operator|.
name|getHost
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"minecraft.net"
argument_list|)
operator|&&
operator|!
name|applet
operator|.
name|getCodeBase
argument_list|()
operator|.
name|getHost
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"www.minecraft.net"
argument_list|)
condition|)
block|{
name|theLevel
operator|=
literal|null
expr_stmt|;
block|}
name|level
operator|=
name|theLevel
expr_stmt|;
if|if
condition|(
name|player
operator|!=
literal|null
operator|&&
name|player
operator|.
name|inventory
operator|!=
literal|null
condition|)
block|{
name|inventoryCache
operator|=
name|player
operator|.
name|inventory
operator|.
name|slots
operator|.
name|clone
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|theLevel
operator|!=
literal|null
condition|)
block|{
name|theLevel
operator|.
name|initTransient
argument_list|()
expr_stmt|;
name|gamemode
operator|.
name|apply
argument_list|(
name|theLevel
argument_list|)
expr_stmt|;
name|theLevel
operator|.
name|font
operator|=
name|fontRenderer
expr_stmt|;
name|theLevel
operator|.
name|rendererContext$5cd64a7f
operator|=
name|this
expr_stmt|;
if|if
condition|(
operator|!
name|isOnline
argument_list|()
condition|)
block|{
comment|// if not online (singleplayer)
name|player
operator|=
operator|(
name|Player
operator|)
name|theLevel
operator|.
name|findSubclassOf
argument_list|(
name|Player
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|player
operator|==
literal|null
condition|)
block|{
name|player
operator|=
operator|new
name|Player
argument_list|(
name|theLevel
argument_list|,
name|settings
argument_list|)
expr_stmt|;
block|}
name|player
operator|.
name|settings
operator|=
name|settings
expr_stmt|;
name|player
operator|.
name|resetPos
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|player
operator|!=
literal|null
condition|)
block|{
comment|// if online
name|player
operator|.
name|resetPos
argument_list|()
expr_stmt|;
name|gamemode
operator|.
name|preparePlayer
argument_list|(
name|player
argument_list|)
expr_stmt|;
name|theLevel
operator|.
name|player
operator|=
name|player
expr_stmt|;
name|theLevel
operator|.
name|addEntity
argument_list|(
name|player
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|player
operator|==
literal|null
condition|)
block|{
name|player
operator|=
operator|new
name|Player
argument_list|(
name|theLevel
argument_list|,
name|settings
argument_list|)
expr_stmt|;
name|player
operator|.
name|resetPos
argument_list|()
expr_stmt|;
name|gamemode
operator|.
name|preparePlayer
argument_list|(
name|player
argument_list|)
expr_stmt|;
if|if
condition|(
name|theLevel
operator|!=
literal|null
condition|)
block|{
name|theLevel
operator|.
name|player
operator|=
name|player
expr_stmt|;
block|}
block|}
if|if
condition|(
name|player
operator|!=
literal|null
condition|)
block|{
name|player
operator|.
name|input
operator|=
operator|new
name|InputHandlerImpl
argument_list|(
name|settings
argument_list|,
name|player
argument_list|)
expr_stmt|;
name|gamemode
operator|.
name|apply
argument_list|(
name|player
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|levelRenderer
operator|!=
literal|null
condition|)
block|{
name|LevelRenderer
name|var3
init|=
name|levelRenderer
decl_stmt|;
if|if
condition|(
name|levelRenderer
operator|.
name|level
operator|!=
literal|null
condition|)
block|{
name|var3
operator|.
name|level
operator|.
name|removeListener
argument_list|(
name|var3
argument_list|)
expr_stmt|;
block|}
name|var3
operator|.
name|level
operator|=
name|theLevel
expr_stmt|;
if|if
condition|(
name|theLevel
operator|!=
literal|null
condition|)
block|{
name|theLevel
operator|.
name|addListener
argument_list|(
name|var3
argument_list|)
expr_stmt|;
name|var3
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|particleManager
operator|!=
literal|null
condition|)
block|{
name|ParticleManager
name|var5
init|=
name|particleManager
decl_stmt|;
if|if
condition|(
name|theLevel
operator|!=
literal|null
condition|)
block|{
name|theLevel
operator|.
name|particleEngine
operator|=
name|var5
expr_stmt|;
block|}
for|for
control|(
name|int
name|var4
init|=
literal|0
init|;
name|var4
operator|<
literal|2
condition|;
operator|++
name|var4
control|)
block|{
name|var5
operator|.
name|particles
index|[
name|var4
index|]
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|inventoryCache
operator|!=
literal|null
condition|)
block|{
name|player
operator|.
name|inventory
operator|.
name|slots
operator|=
name|inventoryCache
expr_stmt|;
block|}
name|System
operator|.
name|gc
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|final
name|void
name|shutdown
parameter_list|()
block|{
if|if
condition|(
name|isShuttingDown
condition|)
block|{
return|return;
block|}
name|isShuttingDown
operator|=
literal|true
expr_stmt|;
try|try
block|{
if|if
condition|(
name|soundPlayer
operator|!=
literal|null
condition|)
block|{
name|soundPlayer
operator|.
name|running
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|resourceThread
operator|!=
literal|null
condition|)
block|{
name|resourceThread
operator|.
name|running
operator|=
literal|true
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Error shutting down threads."
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|isLevelLoaded
condition|)
block|{
try|try
block|{
if|if
condition|(
name|level
operator|!=
literal|null
operator|&&
name|isSinglePlayer
condition|)
block|{
if|if
condition|(
name|level
operator|.
name|creativeMode
condition|)
block|{
operator|new
name|LevelSerializer
argument_list|(
name|level
argument_list|)
operator|.
name|saveMap
argument_list|(
literal|"levelc"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
operator|new
name|LevelSerializer
argument_list|(
name|level
argument_list|)
operator|.
name|saveMap
argument_list|(
literal|"levels"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Error saving single-player level."
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
name|Mouse
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|Keyboard
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|takeAndSaveScreenshot
parameter_list|(
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|)
block|{
try|try
block|{
name|int
name|size
init|=
name|width
operator|*
name|height
operator|*
literal|3
decl_stmt|;
name|int
name|packAlignment
init|=
name|GL11
operator|.
name|glGetInteger
argument_list|(
name|GL11
operator|.
name|GL_PACK_ALIGNMENT
argument_list|)
decl_stmt|;
name|int
name|unpackAlignment
init|=
name|GL11
operator|.
name|glGetInteger
argument_list|(
name|GL11
operator|.
name|GL_UNPACK_ALIGNMENT
argument_list|)
decl_stmt|;
name|GL11
operator|.
name|glPixelStorei
argument_list|(
name|GL11
operator|.
name|GL_PACK_ALIGNMENT
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Byte alignment.
name|GL11
operator|.
name|glPixelStorei
argument_list|(
name|GL11
operator|.
name|GL_UNPACK_ALIGNMENT
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glReadBuffer
argument_list|(
name|GL11
operator|.
name|GL_FRONT
argument_list|)
expr_stmt|;
name|ByteBuffer
name|buffer
init|=
name|ByteBuffer
operator|.
name|allocateDirect
argument_list|(
name|size
argument_list|)
decl_stmt|;
name|GL11
operator|.
name|glReadPixels
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|GL11
operator|.
name|GL_RGB
argument_list|,
name|GL11
operator|.
name|GL_UNSIGNED_BYTE
argument_list|,
name|buffer
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glPixelStorei
argument_list|(
name|GL11
operator|.
name|GL_PACK_ALIGNMENT
argument_list|,
name|packAlignment
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glPixelStorei
argument_list|(
name|GL11
operator|.
name|GL_UNPACK_ALIGNMENT
argument_list|,
name|unpackAlignment
argument_list|)
expr_stmt|;
name|byte
index|[]
name|pixels
init|=
operator|new
name|byte
index|[
name|size
index|]
decl_stmt|;
name|buffer
operator|.
name|get
argument_list|(
name|pixels
argument_list|)
expr_stmt|;
name|pixels
operator|=
name|flipPixels
argument_list|(
name|pixels
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
name|ColorSpace
name|colorSpace
init|=
name|ColorSpace
operator|.
name|getInstance
argument_list|(
name|ColorSpace
operator|.
name|CS_sRGB
argument_list|)
decl_stmt|;
name|int
index|[]
name|bitsPerPixel
init|=
block|{
literal|8
block|,
literal|8
block|,
literal|8
block|}
decl_stmt|;
name|int
index|[]
name|colOffsets
init|=
block|{
literal|0
block|,
literal|1
block|,
literal|2
block|}
decl_stmt|;
name|ComponentColorModel
name|colorComp
init|=
operator|new
name|ComponentColorModel
argument_list|(
name|colorSpace
argument_list|,
name|bitsPerPixel
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|3
argument_list|,
name|DataBuffer
operator|.
name|TYPE_BYTE
argument_list|)
decl_stmt|;
name|WritableRaster
name|raster
init|=
name|Raster
operator|.
name|createInterleavedRaster
argument_list|(
operator|new
name|DataBufferByte
argument_list|(
name|pixels
argument_list|,
name|pixels
operator|.
name|length
argument_list|)
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|width
operator|*
literal|3
argument_list|,
literal|3
argument_list|,
name|colOffsets
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BufferedImage
name|image
init|=
operator|new
name|BufferedImage
argument_list|(
name|colorComp
argument_list|,
name|raster
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Calendar
name|cal
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|String
name|str
init|=
name|String
operator|.
name|format
argument_list|(
literal|"screenshot_%1$tY%1$tm%1$td%1$tH%1$tM%1$tS.png"
argument_list|,
name|cal
argument_list|)
decl_stmt|;
name|String
name|month
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"MMM"
argument_list|)
operator|.
name|format
argument_list|(
name|cal
operator|.
name|getTime
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|serverName
init|=
name|ProgressBarDisplay
operator|.
name|title
operator|.
name|toLowerCase
argument_list|()
operator|.
name|contains
argument_list|(
literal|"connecting.."
argument_list|)
condition|?
literal|""
else|:
name|ProgressBarDisplay
operator|.
name|title
decl_stmt|;
if|if
condition|(
literal|"Loading level"
operator|.
name|equals
argument_list|(
name|serverName
argument_list|)
operator|||
literal|"Connecting.."
operator|.
name|equals
argument_list|(
name|serverName
argument_list|)
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|serverName
argument_list|)
condition|)
block|{
name|serverName
operator|=
literal|"Singleplayer"
expr_stmt|;
block|}
name|serverName
operator|=
name|FontRenderer
operator|.
name|stripColor
argument_list|(
name|serverName
argument_list|)
expr_stmt|;
name|serverName
operator|=
name|serverName
operator|.
name|replaceAll
argument_list|(
literal|"[^A-Za-z0-9\\._-]+"
argument_list|,
literal|"_"
argument_list|)
expr_stmt|;
name|File
name|logDir
init|=
operator|new
name|File
argument_list|(
name|Minecraft
operator|.
name|getMinecraftDirectory
argument_list|()
argument_list|,
literal|"/Screenshots/"
argument_list|)
decl_stmt|;
name|File
name|serverDir
init|=
operator|new
name|File
argument_list|(
name|logDir
argument_list|,
name|serverName
argument_list|)
decl_stmt|;
name|File
name|monthDir
init|=
operator|new
name|File
argument_list|(
name|serverDir
argument_list|,
literal|"/"
operator|+
name|month
operator|+
literal|"/"
argument_list|)
decl_stmt|;
name|monthDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
if|if
condition|(
name|ImageIO
operator|.
name|write
argument_list|(
name|image
argument_list|,
literal|"png"
argument_list|,
operator|new
name|File
argument_list|(
name|monthDir
argument_list|,
name|str
argument_list|)
argument_list|)
condition|)
block|{
name|hud
operator|.
name|addChat
argument_list|(
literal|"&2Screenshot saved into the Screenshots folder"
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Error taking a screenshot."
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|tick
parameter_list|()
block|{
if|if
condition|(
name|soundPlayer
operator|!=
literal|null
condition|)
block|{
name|SoundPlayer
name|var1
init|=
name|soundPlayer
decl_stmt|;
name|SoundManager
name|var2
init|=
name|sound
decl_stmt|;
if|if
condition|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|>
name|var2
operator|.
name|lastMusic
operator|&&
name|var2
operator|.
name|playMusic
argument_list|(
name|var1
argument_list|,
literal|"calm"
argument_list|)
condition|)
block|{
name|var2
operator|.
name|lastMusic
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
name|var2
operator|.
name|random
operator|.
name|nextInt
argument_list|(
literal|900000
argument_list|)
operator|+
literal|300000L
expr_stmt|;
block|}
block|}
name|gamemode
operator|.
name|spawnMob
argument_list|()
expr_stmt|;
name|int
name|i
decl_stmt|;
if|if
condition|(
name|canRenderGUI
condition|)
block|{
operator|++
name|this
operator|.
name|hud
operator|.
name|ticks
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|this
operator|.
name|hud
operator|.
name|chat
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
operator|++
name|this
operator|.
name|hud
operator|.
name|chat
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|time
expr_stmt|;
block|}
block|}
name|GL11
operator|.
name|glBindTexture
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|,
name|textureManager
operator|.
name|load
argument_list|(
literal|"/terrain.png"
argument_list|)
argument_list|)
expr_stmt|;
name|TextureManager
name|texManager
init|=
name|textureManager
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|texManager
operator|.
name|animations
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|TextureFX
name|texFX
init|=
name|texManager
operator|.
name|animations
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|texFX
operator|.
name|animate
argument_list|()
expr_stmt|;
if|if
condition|(
name|texManager
operator|.
name|textureBuffer
operator|.
name|capacity
argument_list|()
operator|!=
name|texFX
operator|.
name|textureData
operator|.
name|length
condition|)
block|{
name|texManager
operator|.
name|textureBuffer
operator|=
name|BufferUtils
operator|.
name|createByteBuffer
argument_list|(
name|texFX
operator|.
name|textureData
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|texManager
operator|.
name|textureBuffer
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|texManager
operator|.
name|textureBuffer
operator|.
name|put
argument_list|(
name|texFX
operator|.
name|textureData
argument_list|)
expr_stmt|;
name|texManager
operator|.
name|textureBuffer
operator|.
name|position
argument_list|(
literal|0
argument_list|)
operator|.
name|limit
argument_list|(
name|texFX
operator|.
name|textureData
operator|.
name|length
argument_list|)
expr_stmt|;
name|GL11
operator|.
name|glTexSubImage2D
argument_list|(
name|GL11
operator|.
name|GL_TEXTURE_2D
argument_list|,
literal|0
argument_list|,
name|texFX
operator|.
name|textureId
operator|%
literal|16
operator|<<
literal|4
argument_list|,
name|texFX
operator|.
name|textureId
operator|/
literal|16
operator|<<
literal|4
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
literal|6408
argument_list|,
literal|5121
argument_list|,
name|texManager
operator|.
name|textureBuffer
argument_list|)
expr_stmt|;
block|}
name|int
name|var4
decl_stmt|;
name|int
name|var40
decl_stmt|;
name|int
name|var46
decl_stmt|;
name|int
name|var45
decl_stmt|;
if|if
condition|(
name|networkManager
operator|!=
literal|null
operator|&&
operator|!
operator|(
name|currentScreen
operator|instanceof
name|ErrorScreen
operator|)
condition|)
block|{
if|if
condition|(
operator|!
name|networkManager
operator|.
name|isConnected
argument_list|()
condition|)
block|{
name|progressBar
operator|.
name|setTitle
argument_list|(
literal|"Connecting.."
argument_list|)
expr_stmt|;
name|progressBar
operator|.
name|setProgress
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|isLoadingMap
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|NetworkManager
name|var20
init|=
name|networkManager
decl_stmt|;
if|if
condition|(
name|networkManager
operator|.
name|successful
condition|)
block|{
if|if
condition|(
name|var20
operator|.
name|netHandler
operator|.
name|connected
condition|)
block|{
try|try
block|{
name|NetworkHandler
name|networkHandler
init|=
name|var20
operator|.
name|netHandler
decl_stmt|;
name|var20
operator|.
name|netHandler
operator|.
name|channel
operator|.
name|read
argument_list|(
name|networkHandler
operator|.
name|in
argument_list|)
expr_stmt|;
name|var4
operator|=
literal|0
expr_stmt|;
while|while
condition|(
name|networkHandler
operator|.
name|in
operator|.
name|position
argument_list|()
operator|>
literal|0
operator|&&
name|var4
operator|++
operator|!=
literal|100
condition|)
block|{
name|networkHandler
operator|.
name|in
operator|.
name|flip
argument_list|()
expr_stmt|;
name|byte
name|id
init|=
name|networkHandler
operator|.
name|in
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|PacketType
name|packetType
decl_stmt|;
if|if
condition|(
operator|(
name|packetType
operator|=
name|PacketType
operator|.
name|packets
index|[
name|id
index|]
operator|)
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Bad command: "
operator|+
name|id
argument_list|)
throw|;
block|}
if|if
condition|(
name|networkHandler
operator|.
name|in
operator|.
name|remaining
argument_list|()
operator|<
name|packetType
operator|.
name|length
operator|+
literal|1
condition|)
block|{
name|networkHandler
operator|.
name|in
operator|.
name|compact
argument_list|()
expr_stmt|;
break|break;
block|}
name|networkHandler
operator|.
name|in
operator|.
name|get
argument_list|()
expr_stmt|;
name|Object
index|[]
name|packetParams
init|=
operator|new
name|Object
index|[
name|packetType
operator|.
name|params
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|packetParams
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|packetParams
index|[
name|i
index|]
operator|=
name|networkHandler
operator|.
name|readObject
argument_list|(
name|packetType
operator|.
name|params
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|NetworkManager
name|networkManager
init|=
name|networkHandler
operator|.
name|netManager
decl_stmt|;
if|if
condition|(
name|networkHandler
operator|.
name|netManager
operator|.
name|successful
condition|)
block|{
if|if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|EXT_INFO
condition|)
block|{
name|String
name|AppName
init|=
operator|(
name|String
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|short
name|ExtensionCount
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
name|LogUtil
operator|.
name|logInfo
argument_list|(
literal|"Connecting to AppName: "
operator|+
name|AppName
operator|+
literal|" with extension count: "
operator|+
name|ExtensionCount
argument_list|)
expr_stmt|;
name|receivedExtensionLength
operator|=
name|ExtensionCount
expr_stmt|;
name|Constants
operator|.
name|SERVER_SUPPORTED_EXTENSIONS
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|EXT_ENTRY
condition|)
block|{
name|String
name|ExtName
init|=
operator|(
name|String
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|Integer
name|Version
init|=
operator|(
name|Integer
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
name|Constants
operator|.
name|SERVER_SUPPORTED_EXTENSIONS
operator|.
name|add
argument_list|(
operator|new
name|ExtData
argument_list|(
name|ExtName
argument_list|,
name|Version
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ExtName
operator|.
name|toLowerCase
argument_list|()
operator|.
name|contains
argument_list|(
literal|"heldblock"
argument_list|)
condition|)
block|{
name|canSendHeldBlock
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|ExtName
operator|.
name|toLowerCase
argument_list|()
operator|.
name|contains
argument_list|(
literal|"messagetypes"
argument_list|)
condition|)
block|{
name|serverSupportsMessages
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|receivedExtensionLength
operator|==
name|Constants
operator|.
name|SERVER_SUPPORTED_EXTENSIONS
operator|.
name|size
argument_list|()
condition|)
block|{
name|LogUtil
operator|.
name|logInfo
argument_list|(
literal|"Sending client's supported Extensions"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ExtData
argument_list|>
name|temp
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|PacketType
operator|.
name|packets
operator|.
name|length
operator|-
literal|1
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
name|PacketType
operator|.
name|packets
index|[
name|j
index|]
operator|!=
literal|null
operator|&&
operator|!
name|PacketType
operator|.
name|packets
index|[
name|j
index|]
operator|.
name|extName
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|temp
operator|.
name|add
argument_list|(
operator|new
name|ExtData
argument_list|(
name|PacketType
operator|.
name|packets
index|[
name|j
index|]
operator|.
name|extName
argument_list|,
name|PacketType
operator|.
name|packets
index|[
name|j
index|]
operator|.
name|Version
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|String
name|AppName
init|=
literal|"ClassiCube Client"
decl_stmt|;
name|Object
index|[]
name|toSendParams
init|=
operator|new
name|Object
index|[]
block|{
name|AppName
block|,
operator|(
name|short
operator|)
name|temp
operator|.
name|size
argument_list|()
block|}
decl_stmt|;
name|networkManager
operator|.
name|netHandler
operator|.
name|send
argument_list|(
name|PacketType
operator|.
name|EXT_INFO
argument_list|,
name|toSendParams
argument_list|)
expr_stmt|;
for|for
control|(
name|ExtData
name|aTemp
range|:
name|temp
control|)
block|{
name|LogUtil
operator|.
name|logInfo
argument_list|(
literal|"Sending ext: "
operator|+
name|aTemp
operator|.
name|Name
operator|+
literal|" with version: "
operator|+
name|aTemp
operator|.
name|Version
argument_list|)
expr_stmt|;
name|toSendParams
operator|=
operator|new
name|Object
index|[]
block|{
name|aTemp
operator|.
name|Name
block|,
name|aTemp
operator|.
name|Version
block|}
expr_stmt|;
name|networkManager
operator|.
name|netHandler
operator|.
name|send
argument_list|(
name|PacketType
operator|.
name|EXT_ENTRY
argument_list|,
name|toSendParams
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|SELECTION_CUBOID
condition|)
block|{
name|byte
name|ID
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|String
name|Name
init|=
operator|(
name|String
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
name|Short
name|X1
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|2
index|]
decl_stmt|;
name|Short
name|Y1
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|3
index|]
decl_stmt|;
name|Short
name|Z1
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|4
index|]
decl_stmt|;
name|Short
name|X2
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|5
index|]
decl_stmt|;
name|Short
name|Y2
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|6
index|]
decl_stmt|;
name|Short
name|Z2
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|7
index|]
decl_stmt|;
name|Short
name|r
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|8
index|]
decl_stmt|;
name|Short
name|g
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|9
index|]
decl_stmt|;
name|Short
name|b
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|10
index|]
decl_stmt|;
name|Short
name|a
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|11
index|]
decl_stmt|;
comment|// LogUtil.logInfo(ID + " " + Name +
comment|// " " + X1 + " " + Y1
comment|// + " " + Z1 + " " + X2 + " " + Y2 +
comment|// " " + Z2);
name|SelectionBoxData
name|data
init|=
operator|new
name|SelectionBoxData
argument_list|(
name|ID
argument_list|,
name|Name
argument_list|,
operator|new
name|ColorCache
argument_list|(
name|r
operator|/
literal|255F
argument_list|,
name|g
operator|/
literal|255F
argument_list|,
name|b
operator|/
literal|255F
argument_list|,
name|a
operator|/
literal|255F
argument_list|)
argument_list|,
operator|new
name|CustomAABB
argument_list|(
name|X1
argument_list|,
name|Y1
argument_list|,
name|Z1
argument_list|,
name|X2
argument_list|,
name|Y2
argument_list|,
name|Z2
argument_list|)
argument_list|)
decl_stmt|;
name|selectionBoxes
operator|.
name|add
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|REMOVE_SELECTION_CUBOID
condition|)
block|{
name|byte
name|ID
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|List
argument_list|<
name|SelectionBoxData
argument_list|>
name|cache
init|=
name|selectionBoxes
decl_stmt|;
for|for
control|(
name|int
name|q
init|=
literal|0
init|;
name|q
operator|<
name|selectionBoxes
operator|.
name|size
argument_list|()
condition|;
name|q
operator|++
control|)
block|{
if|if
condition|(
name|selectionBoxes
operator|.
name|get
argument_list|(
name|q
argument_list|)
operator|.
name|id
operator|==
name|ID
condition|)
block|{
name|cache
operator|.
name|remove
argument_list|(
name|q
argument_list|)
expr_stmt|;
block|}
block|}
name|selectionBoxes
operator|=
name|cache
expr_stmt|;
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|ENV_SET_COLOR
condition|)
block|{
name|byte
name|Variable
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|Short
name|r
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
name|Short
name|g
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|2
index|]
decl_stmt|;
name|Short
name|b
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|3
index|]
decl_stmt|;
name|int
name|dec
init|=
operator|(
name|r
operator|&
literal|0x0ff
operator|)
operator|<<
literal|16
operator||
operator|(
name|g
operator|&
literal|0x0ff
operator|)
operator|<<
literal|8
operator||
name|b
operator|&
literal|0x0ff
decl_stmt|;
switch|switch
condition|(
name|Variable
condition|)
block|{
case|case
literal|0
case|:
comment|// sky
name|level
operator|.
name|skyColor
operator|=
name|dec
expr_stmt|;
break|break;
case|case
literal|1
case|:
comment|// cloud
name|level
operator|.
name|cloudColor
operator|=
name|dec
expr_stmt|;
break|break;
case|case
literal|2
case|:
comment|// fog
name|level
operator|.
name|fogColor
operator|=
name|dec
expr_stmt|;
break|break;
case|case
literal|3
case|:
comment|// ambient light
name|level
operator|.
name|customShadowColour
operator|=
operator|new
name|ColorCache
argument_list|(
name|r
operator|/
literal|255F
argument_list|,
name|g
operator|/
literal|255F
argument_list|,
name|b
operator|/
literal|255F
argument_list|)
expr_stmt|;
name|levelRenderer
operator|.
name|refresh
argument_list|()
expr_stmt|;
break|break;
case|case
literal|4
case|:
comment|// diffuse color
name|level
operator|.
name|customLightColour
operator|=
operator|new
name|ColorCache
argument_list|(
name|r
operator|/
literal|255F
argument_list|,
name|g
operator|/
literal|255F
argument_list|,
name|b
operator|/
literal|255F
argument_list|)
expr_stmt|;
name|levelRenderer
operator|.
name|refresh
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|ENV_SET_MAP_APPEARANCE
condition|)
block|{
name|String
name|textureUrl
init|=
operator|(
name|String
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|byte
name|sideBlock
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
name|byte
name|edgeBlock
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|2
index|]
decl_stmt|;
name|short
name|sideLevel
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|3
index|]
decl_stmt|;
if|if
condition|(
name|settings
operator|.
name|canServerChangeTextures
condition|)
block|{
if|if
condition|(
name|sideBlock
operator|==
operator|-
literal|1
condition|)
block|{
name|textureManager
operator|.
name|customSideBlock
operator|=
literal|null
expr_stmt|;
block|}
if|else if
condition|(
name|sideBlock
operator|<
name|Block
operator|.
name|blocks
operator|.
name|length
condition|)
block|{
name|int
name|ID
init|=
name|Block
operator|.
name|blocks
index|[
name|sideBlock
index|]
operator|.
name|textureId
decl_stmt|;
name|textureManager
operator|.
name|customSideBlock
operator|=
name|textureManager
operator|.
name|textureAtlas
operator|.
name|get
argument_list|(
name|ID
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|edgeBlock
operator|==
operator|-
literal|1
condition|)
block|{
name|textureManager
operator|.
name|customEdgeBlock
operator|=
literal|null
expr_stmt|;
block|}
if|else if
condition|(
name|edgeBlock
operator|<
name|Block
operator|.
name|blocks
operator|.
name|length
condition|)
block|{
name|Block
name|block
init|=
name|Block
operator|.
name|blocks
index|[
name|edgeBlock
index|]
decl_stmt|;
name|int
name|ID
init|=
name|block
operator|.
name|getTextureId
argument_list|(
name|TextureSide
operator|.
name|Top
argument_list|)
decl_stmt|;
name|textureManager
operator|.
name|customEdgeBlock
operator|=
name|textureManager
operator|.
name|textureAtlas
operator|.
name|get
argument_list|(
name|ID
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|textureUrl
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|File
name|path
init|=
operator|new
name|File
argument_list|(
name|getMinecraftDirectory
argument_list|()
argument_list|,
literal|"/skins/terrain"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|path
operator|.
name|exists
argument_list|()
condition|)
block|{
name|path
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
name|String
name|hash
init|=
name|getHash
argument_list|(
name|textureUrl
argument_list|)
decl_stmt|;
if|if
condition|(
name|hash
operator|!=
literal|null
condition|)
block|{
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|path
argument_list|,
name|hash
operator|+
literal|".png"
argument_list|)
decl_stmt|;
name|BufferedImage
name|image
decl_stmt|;
if|if
condition|(
operator|!
name|file
operator|.
name|exists
argument_list|()
condition|)
block|{
name|downloadImage
argument_list|(
operator|new
name|URL
argument_list|(
name|textureUrl
argument_list|)
argument_list|,
name|file
argument_list|)
expr_stmt|;
block|}
name|image
operator|=
name|ImageIO
operator|.
name|read
argument_list|(
name|file
argument_list|)
expr_stmt|;
if|if
condition|(
name|image
operator|.
name|getWidth
argument_list|()
operator|%
literal|16
operator|==
literal|0
operator|&&
name|image
operator|.
name|getHeight
argument_list|()
operator|%
literal|16
operator|==
literal|0
condition|)
block|{
name|textureManager
operator|.
name|animations
operator|.
name|clear
argument_list|()
expr_stmt|;
name|textureManager
operator|.
name|currentTerrainPng
operator|=
name|image
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|textureManager
operator|.
name|animations
operator|.
name|clear
argument_list|()
expr_stmt|;
try|try
block|{
name|textureManager
operator|.
name|currentTerrainPng
operator|=
name|ImageIO
operator|.
name|read
argument_list|(
name|TextureManager
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/terrain.png"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex2
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Error reading default terrain texture."
argument_list|,
name|ex2
argument_list|)
expr_stmt|;
block|}
block|}
name|textureManager
operator|.
name|textures
operator|.
name|clear
argument_list|()
expr_stmt|;
name|level
operator|.
name|waterLevel
operator|=
name|sideLevel
expr_stmt|;
name|levelRenderer
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|CLICK_DISTANCE
condition|)
block|{
name|short
name|Distance
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|gamemode
operator|.
name|reachDistance
operator|=
name|Distance
operator|/
literal|32
expr_stmt|;
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|HOLDTHIS
condition|)
block|{
name|byte
name|blockToHold
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|byte
name|preventChange
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
name|boolean
name|canPreventChange
init|=
name|preventChange
operator|>
literal|0
decl_stmt|;
if|if
condition|(
name|canPreventChange
condition|)
block|{
name|GameSettings
operator|.
name|CanReplaceSlot
operator|=
literal|false
expr_stmt|;
block|}
name|player
operator|.
name|inventory
operator|.
name|selected
operator|=
literal|0
expr_stmt|;
name|player
operator|.
name|inventory
operator|.
name|replaceSlot
argument_list|(
name|Block
operator|.
name|blocks
index|[
name|blockToHold
index|]
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|canPreventChange
condition|)
block|{
name|GameSettings
operator|.
name|CanReplaceSlot
operator|=
literal|true
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|SET_TEXT_HOTKEY
condition|)
block|{
name|String
name|Label
init|=
operator|(
name|String
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|String
name|Action
init|=
operator|(
name|String
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
name|int
name|keyCode
init|=
operator|(
name|Integer
operator|)
name|packetParams
index|[
literal|2
index|]
decl_stmt|;
name|byte
name|KeyMods
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|3
index|]
decl_stmt|;
name|HotKeyData
name|data
init|=
operator|new
name|HotKeyData
argument_list|(
name|Label
argument_list|,
name|Action
argument_list|,
name|keyCode
argument_list|,
name|KeyMods
argument_list|)
decl_stmt|;
name|hotKeys
operator|.
name|add
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|EXT_ADD_PLAYER_NAME
condition|)
block|{
name|Short
name|NameId
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|String
name|playerName
init|=
operator|(
name|String
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
name|String
name|listName
init|=
operator|(
name|String
operator|)
name|packetParams
index|[
literal|2
index|]
decl_stmt|;
name|String
name|groupName
init|=
operator|(
name|String
operator|)
name|packetParams
index|[
literal|3
index|]
decl_stmt|;
name|byte
name|unusedRank
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|4
index|]
decl_stmt|;
name|int
name|playerIndex
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|PlayerListNameData
name|b
range|:
name|playerListNameData
control|)
block|{
if|if
condition|(
name|b
operator|.
name|nameID
operator|==
name|NameId
condition|)
block|{
comment|// --
comment|// Already exists, update the
comment|// entry.
name|playerIndex
operator|=
name|playerListNameData
operator|.
name|indexOf
argument_list|(
name|b
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|playerIndex
operator|==
operator|-
literal|1
condition|)
block|{
name|playerListNameData
operator|.
name|add
argument_list|(
operator|new
name|PlayerListNameData
argument_list|(
name|NameId
argument_list|,
name|playerName
argument_list|,
name|listName
argument_list|,
name|groupName
argument_list|,
name|unusedRank
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|playerListNameData
operator|.
name|set
argument_list|(
name|playerIndex
argument_list|,
operator|new
name|PlayerListNameData
argument_list|(
name|NameId
argument_list|,
name|playerName
argument_list|,
name|listName
argument_list|,
name|groupName
argument_list|,
name|unusedRank
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|Collections
operator|.
name|sort
argument_list|(
name|playerListNameData
argument_list|,
operator|new
name|PlayerListComparator
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|EXT_ADD_ENTITY
condition|)
block|{
name|byte
name|playerID
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|String
name|skinName
init|=
operator|(
name|String
operator|)
name|packetParams
index|[
literal|2
index|]
decl_stmt|;
name|NetworkPlayer
name|player
init|=
name|networkManager
operator|.
name|players
operator|.
name|get
argument_list|(
name|playerID
argument_list|)
decl_stmt|;
if|if
condition|(
name|player
operator|!=
literal|null
condition|)
block|{
name|player
operator|.
name|SkinName
operator|=
name|skinName
expr_stmt|;
name|player
operator|.
name|downloadSkin
argument_list|()
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|EXT_REMOVE_PLAYER_NAME
condition|)
block|{
name|Short
name|NameId
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|List
argument_list|<
name|PlayerListNameData
argument_list|>
name|cache
init|=
name|playerListNameData
decl_stmt|;
for|for
control|(
name|int
name|q
init|=
literal|0
init|;
name|q
operator|<
name|playerListNameData
operator|.
name|size
argument_list|()
condition|;
name|q
operator|++
control|)
block|{
if|if
condition|(
name|playerListNameData
operator|.
name|get
argument_list|(
name|q
argument_list|)
operator|.
name|nameID
operator|==
name|NameId
condition|)
block|{
name|cache
operator|.
name|remove
argument_list|(
name|q
argument_list|)
expr_stmt|;
block|}
block|}
name|playerListNameData
operator|=
name|cache
expr_stmt|;
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|CUSTOM_BLOCK_SUPPORT_LEVEL
condition|)
block|{
name|LogUtil
operator|.
name|logInfo
argument_list|(
literal|"Custom blocks packet received"
argument_list|)
expr_stmt|;
name|byte
name|SupportLevel
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|networkManager
operator|.
name|netHandler
operator|.
name|send
argument_list|(
name|PacketType
operator|.
name|CUSTOM_BLOCK_SUPPORT_LEVEL
argument_list|,
name|Constants
operator|.
name|CUSTOM_BLOCK_SUPPORT_LEVEL
argument_list|)
expr_stmt|;
name|SessionData
operator|.
name|setAllowedBlocks
argument_list|(
name|SupportLevel
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|SET_BLOCK_PERMISSIONS
condition|)
block|{
name|byte
name|BlockType
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|byte
name|AllowPlacement
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
name|byte
name|AllowDeletion
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|2
index|]
decl_stmt|;
name|Block
name|block
init|=
name|Block
operator|.
name|blocks
index|[
name|BlockType
index|]
decl_stmt|;
if|if
condition|(
name|block
operator|==
literal|null
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|AllowPlacement
operator|==
literal|0
condition|)
block|{
if|if
condition|(
operator|!
name|disallowedPlacementBlocks
operator|.
name|contains
argument_list|(
name|block
argument_list|)
condition|)
block|{
name|disallowedPlacementBlocks
operator|.
name|add
argument_list|(
name|block
argument_list|)
expr_stmt|;
name|LogUtil
operator|.
name|logInfo
argument_list|(
literal|"DisallowingPlacement block: "
operator|+
name|block
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|disallowedPlacementBlocks
operator|.
name|contains
argument_list|(
name|block
argument_list|)
condition|)
block|{
name|disallowedPlacementBlocks
operator|.
name|remove
argument_list|(
name|block
argument_list|)
expr_stmt|;
name|LogUtil
operator|.
name|logInfo
argument_list|(
literal|"AllowingPlacement block: "
operator|+
name|block
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|AllowDeletion
operator|==
literal|0
condition|)
block|{
if|if
condition|(
operator|!
name|DisallowedBreakingBlocks
operator|.
name|contains
argument_list|(
name|block
argument_list|)
condition|)
block|{
name|DisallowedBreakingBlocks
operator|.
name|add
argument_list|(
name|block
argument_list|)
expr_stmt|;
name|LogUtil
operator|.
name|logInfo
argument_list|(
literal|"DisallowingDeletion block: "
operator|+
name|block
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|DisallowedBreakingBlocks
operator|.
name|contains
argument_list|(
name|block
argument_list|)
condition|)
block|{
name|DisallowedBreakingBlocks
operator|.
name|remove
argument_list|(
name|block
argument_list|)
expr_stmt|;
name|LogUtil
operator|.
name|logInfo
argument_list|(
literal|"AllowingDeletion block: "
operator|+
name|block
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|CHANGE_MODEL
condition|)
block|{
name|byte
name|PlayerID
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|String
name|ModelName
init|=
operator|(
name|String
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
if|if
condition|(
name|PlayerID
operator|>=
literal|0
condition|)
block|{
name|NetworkPlayer
name|netPlayer
decl_stmt|;
if|if
condition|(
operator|(
name|netPlayer
operator|=
name|networkManager
operator|.
name|players
operator|.
name|get
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
name|PlayerID
argument_list|)
argument_list|)
operator|)
operator|!=
literal|null
condition|)
block|{
name|ModelManager
name|m
init|=
operator|new
name|ModelManager
argument_list|()
decl_stmt|;
if|if
condition|(
name|m
operator|.
name|getModel
argument_list|(
name|ModelName
operator|.
name|toLowerCase
argument_list|()
argument_list|)
operator|==
literal|null
condition|)
block|{
name|netPlayer
operator|.
name|modelName
operator|=
literal|"humanoid"
expr_stmt|;
block|}
else|else
block|{
name|netPlayer
operator|.
name|modelName
operator|=
name|ModelName
operator|.
name|toLowerCase
argument_list|()
expr_stmt|;
block|}
name|netPlayer
operator|.
name|bindTexture
argument_list|(
name|textureManager
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|PlayerID
operator|==
operator|-
literal|1
condition|)
block|{
name|Player
name|thisPlayer
init|=
name|player
decl_stmt|;
name|ModelManager
name|m
init|=
operator|new
name|ModelManager
argument_list|()
decl_stmt|;
if|if
condition|(
name|m
operator|.
name|getModel
argument_list|(
name|ModelName
operator|.
name|toLowerCase
argument_list|()
argument_list|)
operator|==
literal|null
condition|)
block|{
name|thisPlayer
operator|.
name|modelName
operator|=
literal|"humanoid"
expr_stmt|;
block|}
else|else
block|{
name|thisPlayer
operator|.
name|modelName
operator|=
name|ModelName
operator|.
name|toLowerCase
argument_list|()
expr_stmt|;
block|}
name|thisPlayer
operator|.
name|bindTexture
argument_list|(
name|textureManager
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|ENV_SET_WEATHER_TYPE
condition|)
block|{
name|byte
name|Weather
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
if|if
condition|(
name|Weather
operator|==
literal|0
condition|)
block|{
name|isRaining
operator|=
literal|false
expr_stmt|;
name|isSnowing
operator|=
literal|false
expr_stmt|;
block|}
if|else if
condition|(
name|Weather
operator|==
literal|1
condition|)
block|{
name|isRaining
operator|=
operator|!
name|isRaining
expr_stmt|;
name|isSnowing
operator|=
literal|false
expr_stmt|;
block|}
if|else if
condition|(
name|Weather
operator|==
literal|2
condition|)
block|{
name|isSnowing
operator|=
operator|!
name|isSnowing
expr_stmt|;
name|isRaining
operator|=
literal|false
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|IDENTIFICATION
condition|)
block|{
name|networkManager
operator|.
name|minecraft
operator|.
name|progressBar
operator|.
name|setTitle
argument_list|(
name|packetParams
index|[
literal|1
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|networkManager
operator|.
name|minecraft
operator|.
name|player
operator|.
name|userType
operator|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|3
index|]
expr_stmt|;
name|networkManager
operator|.
name|minecraft
operator|.
name|progressBar
operator|.
name|setText
argument_list|(
name|packetParams
index|[
literal|2
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|LEVEL_INIT
condition|)
block|{
name|networkManager
operator|.
name|minecraft
operator|.
name|setLevel
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|networkManager
operator|.
name|levelData
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|LEVEL_DATA
condition|)
block|{
name|short
name|chunkLength
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|byte
index|[]
name|chunkData
init|=
operator|(
name|byte
index|[]
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
name|byte
name|percentComplete
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|2
index|]
decl_stmt|;
name|networkManager
operator|.
name|minecraft
operator|.
name|progressBar
operator|.
name|setProgress
argument_list|(
name|percentComplete
argument_list|)
expr_stmt|;
name|isLoadingMap
operator|=
literal|false
expr_stmt|;
name|networkManager
operator|.
name|levelData
operator|.
name|write
argument_list|(
name|chunkData
argument_list|,
literal|0
argument_list|,
name|chunkLength
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|LEVEL_FINALIZE
condition|)
block|{
try|try
block|{
name|networkManager
operator|.
name|levelData
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logError
argument_list|(
literal|"Error receiving level data."
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
name|byte
index|[]
name|decompressedStream
init|=
name|LevelLoader
operator|.
name|decompress
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|networkManager
operator|.
name|levelData
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|networkManager
operator|.
name|levelData
operator|=
literal|null
expr_stmt|;
name|short
name|xSize
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|short
name|ySize
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
name|short
name|zSize
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|2
index|]
decl_stmt|;
name|Level
name|level
init|=
operator|new
name|Level
argument_list|()
decl_stmt|;
name|level
operator|.
name|setNetworkMode
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|level
operator|.
name|setData
argument_list|(
name|xSize
argument_list|,
name|ySize
argument_list|,
name|zSize
argument_list|,
name|decompressedStream
argument_list|)
expr_stmt|;
name|networkManager
operator|.
name|minecraft
operator|.
name|setLevel
argument_list|(
name|level
argument_list|)
expr_stmt|;
name|networkManager
operator|.
name|minecraft
operator|.
name|isOnline
operator|=
literal|false
expr_stmt|;
name|networkManager
operator|.
name|levelLoaded
operator|=
literal|true
expr_stmt|;
comment|// ProgressBarDisplay.InitEnv(this);
comment|// this.levelRenderer.refresh();
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|BLOCK_CHANGE
condition|)
block|{
if|if
condition|(
name|networkManager
operator|.
name|minecraft
operator|.
name|level
operator|!=
literal|null
condition|)
block|{
name|networkManager
operator|.
name|minecraft
operator|.
name|level
operator|.
name|netSetTile
argument_list|(
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|0
index|]
argument_list|,
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|1
index|]
argument_list|,
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|2
index|]
argument_list|,
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|3
index|]
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|byte
name|var9
decl_stmt|;
name|String
name|var34
decl_stmt|;
name|NetworkPlayer
name|var33
decl_stmt|;
name|short
name|var36
decl_stmt|;
name|short
name|var10004
decl_stmt|;
name|byte
name|var10001
decl_stmt|;
name|short
name|var47
decl_stmt|;
name|short
name|var10003
decl_stmt|;
if|if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|SPAWN_PLAYER
condition|)
block|{
name|var10001
operator|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
expr_stmt|;
name|String
name|var10002
init|=
operator|(
name|String
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
name|var10003
operator|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|2
index|]
expr_stmt|;
name|var10004
operator|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|3
index|]
expr_stmt|;
name|short
name|var10005
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|4
index|]
decl_stmt|;
name|byte
name|var10006
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|5
index|]
decl_stmt|;
name|byte
name|var58
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|6
index|]
decl_stmt|;
name|var9
operator|=
name|var10006
expr_stmt|;
name|var47
operator|=
name|var10004
expr_stmt|;
name|var36
operator|=
name|var10003
expr_stmt|;
name|var34
operator|=
name|var10002
expr_stmt|;
name|byte
name|var5
init|=
name|var10001
decl_stmt|;
if|if
condition|(
name|var5
operator|>=
literal|0
condition|)
block|{
name|var9
operator|=
operator|(
name|byte
operator|)
operator|(
name|var9
operator|+
literal|128
operator|)
expr_stmt|;
name|var47
operator|=
operator|(
name|short
operator|)
operator|(
name|var47
operator|-
literal|22
operator|)
expr_stmt|;
name|var33
operator|=
operator|new
name|NetworkPlayer
argument_list|(
name|networkManager
operator|.
name|minecraft
argument_list|,
name|var34
argument_list|,
name|var36
argument_list|,
name|var47
argument_list|,
name|var10005
argument_list|,
name|var58
operator|*
literal|360
operator|/
literal|256F
argument_list|,
name|var9
operator|*
literal|360
operator|/
literal|256F
argument_list|)
expr_stmt|;
name|networkManager
operator|.
name|players
operator|.
name|put
argument_list|(
name|var5
argument_list|,
name|var33
argument_list|)
expr_stmt|;
name|networkManager
operator|.
name|minecraft
operator|.
name|level
operator|.
name|addEntity
argument_list|(
name|var33
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|networkManager
operator|.
name|minecraft
operator|.
name|level
operator|.
name|setSpawnPos
argument_list|(
name|var36
operator|/
literal|32
argument_list|,
name|var47
operator|/
literal|32
argument_list|,
name|var10005
operator|/
literal|32
argument_list|,
name|var9
operator|*
literal|320
operator|/
literal|256
argument_list|)
expr_stmt|;
name|networkManager
operator|.
name|minecraft
operator|.
name|player
operator|.
name|moveTo
argument_list|(
name|var36
operator|/
literal|32F
argument_list|,
name|var47
operator|/
literal|32F
argument_list|,
name|var10005
operator|/
literal|32F
argument_list|,
name|var9
operator|*
literal|360
operator|/
literal|256F
argument_list|,
name|var58
operator|*
literal|360
operator|/
literal|256F
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|byte
name|var53
decl_stmt|;
name|NetworkPlayer
name|networkPlayer
decl_stmt|;
name|byte
name|var69
decl_stmt|;
if|if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|POSITION_ROTATION
condition|)
block|{
name|var10001
operator|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
expr_stmt|;
name|short
name|var66
init|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
name|var10003
operator|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|2
index|]
expr_stmt|;
name|var10004
operator|=
operator|(
name|Short
operator|)
name|packetParams
index|[
literal|3
index|]
expr_stmt|;
name|var69
operator|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|4
index|]
expr_stmt|;
name|var9
operator|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|5
index|]
expr_stmt|;
name|var53
operator|=
name|var69
expr_stmt|;
name|var47
operator|=
name|var10004
expr_stmt|;
name|var36
operator|=
name|var10003
expr_stmt|;
name|byte
name|var5
init|=
name|var10001
decl_stmt|;
if|if
condition|(
name|var5
operator|<
literal|0
condition|)
block|{
name|networkManager
operator|.
name|minecraft
operator|.
name|player
operator|.
name|moveTo
argument_list|(
name|var66
operator|/
literal|32F
argument_list|,
name|var36
operator|/
literal|32F
argument_list|,
name|var47
operator|/
literal|32F
argument_list|,
name|var53
operator|*
literal|360
operator|/
literal|256F
argument_list|,
name|var9
operator|*
literal|360
operator|/
literal|256F
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|var53
operator|=
operator|(
name|byte
operator|)
operator|(
name|var53
operator|+
literal|128
operator|)
expr_stmt|;
name|var36
operator|=
operator|(
name|short
operator|)
operator|(
name|var36
operator|-
literal|22
operator|)
expr_stmt|;
if|if
condition|(
operator|(
name|networkPlayer
operator|=
name|networkManager
operator|.
name|players
operator|.
name|get
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
name|var5
argument_list|)
argument_list|)
operator|)
operator|!=
literal|null
condition|)
block|{
name|networkPlayer
operator|.
name|teleport
argument_list|(
name|var66
argument_list|,
name|var36
argument_list|,
name|var47
argument_list|,
name|var9
operator|*
literal|360
operator|/
literal|256F
argument_list|,
name|var53
operator|*
literal|360
operator|/
literal|256F
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|byte
name|var37
decl_stmt|;
name|byte
name|var44
decl_stmt|;
name|byte
name|var49
decl_stmt|;
name|byte
name|var65
decl_stmt|;
name|byte
name|var67
decl_stmt|;
if|if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|POSITION_ROTATION_UPDATE
condition|)
block|{
name|byte
name|playerID
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|var37
operator|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|1
index|]
expr_stmt|;
name|var44
operator|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|2
index|]
expr_stmt|;
name|var49
operator|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|3
index|]
expr_stmt|;
name|var53
operator|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|4
index|]
expr_stmt|;
name|var9
operator|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|5
index|]
expr_stmt|;
if|if
condition|(
name|playerID
operator|>=
literal|0
condition|)
block|{
name|var53
operator|=
operator|(
name|byte
operator|)
operator|(
name|var53
operator|+
literal|128
operator|)
expr_stmt|;
name|NetworkPlayer
name|networkPlayerInstance
init|=
name|networkManager
operator|.
name|players
operator|.
name|get
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
name|playerID
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|networkPlayerInstance
operator|!=
literal|null
condition|)
block|{
name|networkPlayerInstance
operator|.
name|queue
argument_list|(
name|var37
argument_list|,
name|var44
argument_list|,
name|var49
argument_list|,
name|var9
operator|*
literal|360
operator|/
literal|256F
argument_list|,
name|var53
operator|*
literal|360
operator|/
literal|256F
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|ROTATION_UPDATE
condition|)
block|{
name|byte
name|playerID
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|var37
operator|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|1
index|]
expr_stmt|;
name|var44
operator|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|2
index|]
expr_stmt|;
if|if
condition|(
name|playerID
operator|>=
literal|0
condition|)
block|{
name|var37
operator|=
operator|(
name|byte
operator|)
operator|(
name|var37
operator|+
literal|128
operator|)
expr_stmt|;
name|NetworkPlayer
name|networkPlayerInstance
init|=
name|networkManager
operator|.
name|players
operator|.
name|get
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
name|playerID
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|networkPlayerInstance
operator|!=
literal|null
condition|)
block|{
name|networkPlayerInstance
operator|.
name|queue
argument_list|(
name|var44
operator|*
literal|360
operator|/
literal|256F
argument_list|,
name|var37
operator|*
literal|360
operator|/
literal|256F
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|POSITION_UPDATE
condition|)
block|{
name|byte
name|playerID
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|NetworkPlayer
name|networkPlayerInstance
init|=
name|networkManager
operator|.
name|players
operator|.
name|get
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
name|playerID
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|playerID
operator|>=
literal|0
operator|&&
name|networkPlayerInstance
operator|!=
literal|null
condition|)
block|{
name|networkPlayerInstance
operator|.
name|queue
argument_list|(
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|1
index|]
argument_list|,
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|2
index|]
argument_list|,
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|3
index|]
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|DESPAWN_PLAYER
condition|)
block|{
name|byte
name|playerID
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|var33
operator|=
name|networkManager
operator|.
name|players
operator|.
name|remove
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
name|playerID
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|playerID
operator|>=
literal|0
operator|&&
name|var33
operator|!=
literal|null
condition|)
block|{
name|var33
operator|.
name|clear
argument_list|()
expr_stmt|;
name|networkManager
operator|.
name|minecraft
operator|.
name|level
operator|.
name|removeEntity
argument_list|(
name|var33
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|CHAT_MESSAGE
condition|)
block|{
name|byte
name|messageType
init|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
decl_stmt|;
name|String
name|message
init|=
operator|(
name|String
operator|)
name|packetParams
index|[
literal|1
index|]
decl_stmt|;
if|if
condition|(
name|messageType
operator|<
literal|0
condition|)
block|{
name|networkManager
operator|.
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
literal|"&e"
operator|+
name|message
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|messageType
operator|>
literal|0
operator|&&
name|serverSupportsMessages
condition|)
block|{
switch|switch
condition|(
name|messageType
condition|)
block|{
case|case
literal|1
case|:
name|HUDScreen
operator|.
name|ServerName
operator|=
name|message
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|HUDScreen
operator|.
name|Compass
operator|=
name|message
expr_stmt|;
break|break;
case|case
literal|3
case|:
name|HUDScreen
operator|.
name|UserDetail
operator|=
name|message
expr_stmt|;
break|break;
case|case
literal|11
case|:
name|HUDScreen
operator|.
name|BottomRight1
operator|=
name|message
expr_stmt|;
break|break;
case|case
literal|12
case|:
name|HUDScreen
operator|.
name|BottomRight2
operator|=
name|message
expr_stmt|;
break|break;
case|case
literal|13
case|:
name|HUDScreen
operator|.
name|BottomRight3
operator|=
name|message
expr_stmt|;
break|break;
case|case
literal|21
case|:
break|break;
case|case
literal|100
case|:
name|HUDScreen
operator|.
name|Announcement
operator|=
name|message
expr_stmt|;
break|break;
default|default:
name|networkManager
operator|.
name|players
operator|.
name|get
argument_list|(
name|messageType
argument_list|)
expr_stmt|;
name|networkManager
operator|.
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
name|message
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
else|else
block|{
name|networkManager
operator|.
name|players
operator|.
name|get
argument_list|(
name|messageType
argument_list|)
expr_stmt|;
name|networkManager
operator|.
name|minecraft
operator|.
name|hud
operator|.
name|addChat
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|DISCONNECT
condition|)
block|{
name|networkManager
operator|.
name|netHandler
operator|.
name|close
argument_list|()
expr_stmt|;
name|networkManager
operator|.
name|minecraft
operator|.
name|setCurrentScreen
argument_list|(
operator|new
name|ErrorScreen
argument_list|(
literal|"Connection lost"
argument_list|,
operator|(
name|String
operator|)
name|packetParams
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|packetType
operator|==
name|PacketType
operator|.
name|UPDATE_PLAYER_TYPE
condition|)
block|{
name|networkManager
operator|.
name|minecraft
operator|.
name|player
operator|.
name|userType
operator|=
operator|(
name|Byte
operator|)
name|packetParams
index|[
literal|0
index|]
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
if|if
condition|(
operator|!
name|networkHandler
operator|.
name|connected
condition|)
block|{
break|break;
block|}
name|networkHandler
operator|.
name|in
operator|.
name|compact
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|networkHandler
operator|.
name|out
operator|.
name|position
argument_list|()
operator|>
literal|0
condition|)
block|{
name|networkHandler
operator|.
name|out
operator|.
name|flip
argument_list|()
expr_stmt|;
name|networkHandler
operator|.
name|channel
operator|.
name|write
argument_list|(
name|networkHandler
operator|.
name|out
argument_list|)
expr_stmt|;
name|networkHandler
operator|.
name|out
operator|.
name|compact
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logWarning
argument_list|(
literal|"Error in network handling code."
argument_list|,
name|ex
argument_list|)
expr_stmt|;
name|var20
operator|.
name|minecraft
operator|.
name|setCurrentScreen
argument_list|(
operator|new
name|ErrorScreen
argument_list|(
literal|"Disconnected!"
argument_list|,
literal|"You\'ve lost connection to the server"
argument_list|)
argument_list|)
expr_stmt|;
name|var20
operator|.
name|minecraft
operator|.
name|isOnline
operator|=
literal|false
expr_stmt|;
name|var20
operator|.
name|netHandler
operator|.
name|close
argument_list|()
expr_stmt|;
name|var20
operator|.
name|minecraft
operator|.
name|networkManager
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
name|Player
name|player
init|=
name|this
operator|.
name|player
decl_stmt|;
name|var20
operator|=
name|networkManager
expr_stmt|;
if|if
condition|(
name|networkManager
operator|.
name|levelLoaded
condition|)
block|{
name|int
name|var24
init|=
operator|(
name|int
operator|)
operator|(
name|player
operator|.
name|x
operator|*
literal|32F
operator|)
decl_stmt|;
name|var4
operator|=
operator|(
name|int
operator|)
operator|(
name|player
operator|.
name|y
operator|*
literal|32F
operator|)
expr_stmt|;
name|var40
operator|=
operator|(
name|int
operator|)
operator|(
name|player
operator|.
name|z
operator|*
literal|32F
operator|)
expr_stmt|;
name|var46
operator|=
operator|(
name|int
operator|)
operator|(
name|player
operator|.
name|yRot
operator|*
literal|256F
operator|/
literal|360F
operator|)
operator|&
literal|255
expr_stmt|;
name|var45
operator|=
operator|(
name|int
operator|)
operator|(
name|player
operator|.
name|xRot
operator|*
literal|256F
operator|/
literal|360F
operator|)
operator|&
literal|255
expr_stmt|;
name|var20
operator|.
name|netHandler
operator|.
name|send
argument_list|(
name|PacketType
operator|.
name|POSITION_ROTATION
argument_list|,
name|canSendHeldBlock
condition|?
name|player
operator|.
name|inventory
operator|.
name|getSelected
argument_list|()
else|:
operator|-
literal|1
argument_list|,
name|var24
argument_list|,
name|var4
argument_list|,
name|var40
argument_list|,
name|var46
argument_list|,
name|var45
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|isLoadingMap
condition|)
block|{
while|while
condition|(
name|Keyboard
operator|.
name|next
argument_list|()
condition|)
block|{
if|if
condition|(
name|Keyboard
operator|.
name|getEventKeyState
argument_list|()
condition|)
block|{
if|if
condition|(
name|Keyboard
operator|.
name|getEventKey
argument_list|()
operator|==
name|Keyboard
operator|.
name|KEY_ESCAPE
condition|)
block|{
name|pause
argument_list|()
expr_stmt|;
block|}
block|}
block|}
return|return;
block|}
if|if
condition|(
name|currentScreen
operator|==
literal|null
operator|&&
name|player
operator|!=
literal|null
operator|&&
name|player
operator|.
name|health
operator|<=
literal|0
condition|)
block|{
name|setCurrentScreen
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|handleInput
argument_list|()
expr_stmt|;
if|if
condition|(
name|level
operator|!=
literal|null
operator|&&
name|player
operator|!=
literal|null
condition|)
block|{
operator|++
name|renderer
operator|.
name|levelTicks
expr_stmt|;
name|HeldBlock
name|var41
init|=
name|renderer
operator|.
name|heldBlock
decl_stmt|;
name|renderer
operator|.
name|heldBlock
operator|.
name|lastPos
operator|=
name|var41
operator|.
name|pos
expr_stmt|;
if|if
condition|(
name|var41
operator|.
name|moving
condition|)
block|{
operator|++
name|var41
operator|.
name|offset
expr_stmt|;
if|if
condition|(
name|var41
operator|.
name|offset
operator|==
literal|7
condition|)
block|{
name|var41
operator|.
name|offset
operator|=
literal|0
expr_stmt|;
name|var41
operator|.
name|moving
operator|=
literal|false
expr_stmt|;
block|}
block|}
name|var4
operator|=
name|var41
operator|.
name|minecraft
operator|.
name|player
operator|.
name|inventory
operator|.
name|getSelected
argument_list|()
expr_stmt|;
comment|// TODO WTF?
name|Block
name|var43
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|var4
operator|>
literal|0
condition|)
block|{
name|var43
operator|=
name|Block
operator|.
name|blocks
index|[
name|var4
index|]
expr_stmt|;
block|}
name|float
name|var48
init|=
literal|0.4F
decl_stmt|;
name|float
name|var50
decl_stmt|;
if|if
condition|(
operator|(
name|var50
operator|=
operator|(
name|var43
operator|==
name|var41
operator|.
name|block
condition|?
literal|1F
else|:
literal|0F
operator|)
operator|-
name|var41
operator|.
name|pos
operator|)
operator|<
operator|-
name|var48
condition|)
block|{
name|var50
operator|=
operator|-
name|var48
expr_stmt|;
block|}
if|if
condition|(
name|var50
operator|>
name|var48
condition|)
block|{
name|var50
operator|=
name|var48
expr_stmt|;
block|}
name|var41
operator|.
name|pos
operator|+=
name|var50
expr_stmt|;
if|if
condition|(
name|var41
operator|.
name|pos
operator|<
literal|0.1F
condition|)
block|{
name|var41
operator|.
name|block
operator|=
name|var43
expr_stmt|;
block|}
if|if
condition|(
name|renderer
operator|.
name|minecraft
operator|.
name|isRaining
condition|)
block|{
name|Player
name|var27
init|=
name|renderer
operator|.
name|minecraft
operator|.
name|player
decl_stmt|;
name|Level
name|var32
init|=
name|renderer
operator|.
name|minecraft
operator|.
name|level
decl_stmt|;
name|var40
operator|=
operator|(
name|int
operator|)
name|var27
operator|.
name|x
expr_stmt|;
name|var46
operator|=
operator|(
name|int
operator|)
name|var27
operator|.
name|y
expr_stmt|;
name|var45
operator|=
operator|(
name|int
operator|)
name|var27
operator|.
name|z
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|50
condition|;
operator|++
name|i
control|)
block|{
name|int
name|var60
init|=
name|var40
operator|+
name|renderer
operator|.
name|random
operator|.
name|nextInt
argument_list|(
literal|9
argument_list|)
operator|-
literal|4
decl_stmt|;
name|int
name|var52
init|=
name|var45
operator|+
name|renderer
operator|.
name|random
operator|.
name|nextInt
argument_list|(
literal|9
argument_list|)
operator|-
literal|4
decl_stmt|;
name|int
name|var57
init|=
name|var32
operator|.
name|getHighestTile
argument_list|(
name|var60
argument_list|,
name|var52
argument_list|)
decl_stmt|;
if|if
condition|(
name|var57
operator|<=
name|var46
operator|+
literal|4
operator|&&
name|var57
operator|>=
name|var46
operator|-
literal|4
condition|)
block|{
name|float
name|var56
init|=
name|renderer
operator|.
name|random
operator|.
name|nextFloat
argument_list|()
decl_stmt|;
name|float
name|var62
init|=
name|renderer
operator|.
name|random
operator|.
name|nextFloat
argument_list|()
decl_stmt|;
name|renderer
operator|.
name|minecraft
operator|.
name|particleManager
operator|.
name|spawnParticle
argument_list|(
operator|new
name|WaterDropParticle
argument_list|(
name|var32
argument_list|,
name|var60
operator|+
name|var56
argument_list|,
name|var57
operator|+
literal|0.1F
argument_list|,
name|var52
operator|+
name|var62
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
operator|++
name|levelRenderer
operator|.
name|ticks
expr_stmt|;
name|level
operator|.
name|tickEntities
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|isOnline
argument_list|()
condition|)
block|{
name|level
operator|.
name|tick
argument_list|()
expr_stmt|;
block|}
name|particleManager
operator|.
name|tick
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|handleInput
parameter_list|()
block|{
if|if
condition|(
name|currentScreen
operator|instanceof
name|BlockSelectScreen
condition|)
block|{
while|while
condition|(
name|Mouse
operator|.
name|next
argument_list|()
condition|)
block|{
name|int
name|mouseScroll
init|=
name|Mouse
operator|.
name|getEventDWheel
argument_list|()
decl_stmt|;
if|if
condition|(
name|mouseScroll
operator|!=
literal|0
condition|)
block|{
comment|// React to mouse-scrolling while in block selection
name|player
operator|.
name|inventory
operator|.
name|swapPaint
argument_list|(
name|mouseScroll
argument_list|)
expr_stmt|;
break|break;
block|}
name|currentScreen
operator|.
name|mouseEvent
argument_list|()
expr_stmt|;
block|}
while|while
condition|(
name|Keyboard
operator|.
name|next
argument_list|()
condition|)
block|{
if|if
condition|(
name|Keyboard
operator|.
name|getEventKey
argument_list|()
operator|>=
name|Keyboard
operator|.
name|KEY_1
operator|&&
name|Keyboard
operator|.
name|getEventKey
argument_list|()
operator|<=
name|Keyboard
operator|.
name|KEY_9
condition|)
block|{
if|if
condition|(
name|GameSettings
operator|.
name|CanReplaceSlot
condition|)
block|{
name|player
operator|.
name|inventory
operator|.
name|selected
operator|=
name|Keyboard
operator|.
name|getEventKey
argument_list|()
operator|-
literal|2
expr_stmt|;
break|break;
block|}
block|}
comment|// If the player presses lots of keys and presses the left mouse button,
comment|// sometimes the screen is closed even though there are still keys left to process.
if|if
condition|(
name|currentScreen
operator|!=
literal|null
condition|)
block|{
name|currentScreen
operator|.
name|keyboardEvent
argument_list|()
expr_stmt|;
block|}
block|}
block|}
if|else if
condition|(
name|currentScreen
operator|==
literal|null
condition|)
block|{
while|while
condition|(
name|Mouse
operator|.
name|next
argument_list|()
condition|)
block|{
if|if
condition|(
name|currentScreen
operator|==
literal|null
condition|)
block|{
name|int
name|mouseScroll
init|=
name|Mouse
operator|.
name|getEventDWheel
argument_list|()
decl_stmt|;
if|if
condition|(
name|mouseScroll
operator|!=
literal|0
condition|)
block|{
comment|// React to mouse-scrolling while in-game
name|player
operator|.
name|inventory
operator|.
name|swapPaint
argument_list|(
name|mouseScroll
argument_list|)
expr_stmt|;
block|}
comment|// Send mouse event to game
if|if
condition|(
operator|!
name|hasMouse
operator|&&
name|Mouse
operator|.
name|getEventButtonState
argument_list|()
condition|)
block|{
name|grabMouse
argument_list|()
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|Mouse
operator|.
name|getEventButton
argument_list|()
operator|==
name|MB_LEFT
operator|&&
name|Mouse
operator|.
name|getEventButtonState
argument_list|()
condition|)
block|{
name|onMouseClick
argument_list|(
name|MB_LEFT
argument_list|)
expr_stmt|;
name|lastClick
operator|=
name|ticks
expr_stmt|;
block|}
if|if
condition|(
name|Mouse
operator|.
name|getEventButton
argument_list|()
operator|==
name|MB_RIGHT
operator|&&
name|Mouse
operator|.
name|getEventButtonState
argument_list|()
condition|)
block|{
name|onMouseClick
argument_list|(
name|MB_RIGHT
argument_list|)
expr_stmt|;
name|lastClick
operator|=
name|ticks
expr_stmt|;
block|}
if|if
condition|(
name|Mouse
operator|.
name|getEventButton
argument_list|()
operator|==
name|MB_MIDDLE
operator|&&
name|Mouse
operator|.
name|getEventButtonState
argument_list|()
operator|&&
name|selected
operator|!=
literal|null
condition|)
block|{
name|int
name|var16
init|=
name|level
operator|.
name|getTile
argument_list|(
name|selected
operator|.
name|x
argument_list|,
name|selected
operator|.
name|y
argument_list|,
name|selected
operator|.
name|z
argument_list|)
decl_stmt|;
name|player
operator|.
name|inventory
operator|.
name|grabTexture
argument_list|(
name|var16
argument_list|,
operator|!
name|isSurvival
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// Note sure if needed:
comment|// This only triggers if currentScreen is set while handling
comment|// mouse input in-game (?)
if|if
condition|(
name|currentScreen
operator|!=
literal|null
condition|)
block|{
name|currentScreen
operator|.
name|mouseEvent
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|punchingCooldown
operator|>
literal|0
condition|)
block|{
comment|// Decrement punching cooldown (survival)
operator|--
name|punchingCooldown
expr_stmt|;
block|}
while|while
condition|(
name|Keyboard
operator|.
name|next
argument_list|()
condition|)
block|{
name|player
operator|.
name|setKey
argument_list|(
name|Keyboard
operator|.
name|getEventKey
argument_list|()
argument_list|,
name|Keyboard
operator|.
name|getEventKeyState
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|Keyboard
operator|.
name|getEventKeyState
argument_list|()
condition|)
block|{
if|if
condition|(
name|currentScreen
operator|!=
literal|null
condition|)
block|{
name|currentScreen
operator|.
name|keyboardEvent
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|currentScreen
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|Keyboard
operator|.
name|getEventKey
argument_list|()
operator|==
name|Keyboard
operator|.
name|KEY_ESCAPE
condition|)
block|{
name|pause
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|isSurvival
argument_list|()
condition|)
block|{
if|if
condition|(
name|HackState
operator|.
name|respawn
condition|)
block|{
if|if
condition|(
name|Keyboard
operator|.
name|getEventKey
argument_list|()
operator|==
name|settings
operator|.
name|loadLocationKey
operator|.
name|key
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|currentScreen
operator|instanceof
name|ChatInputScreen
operator|)
condition|)
block|{
name|player
operator|.
name|resetPos
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|Keyboard
operator|.
name|getEventKey
argument_list|()
operator|==
name|settings
operator|.
name|saveLocationKey
operator|.
name|key
condition|)
block|{
name|level
operator|.
name|setSpawnPos
argument_list|(
operator|(
name|int
operator|)
name|player
operator|.
name|x
argument_list|,
operator|(
name|int
operator|)
name|player
operator|.
name|y
argument_list|,
operator|(
name|int
operator|)
name|player
operator|.
name|z
argument_list|,
name|player
operator|.
name|yRot
argument_list|)
expr_stmt|;
name|player
operator|.
name|resetPos
argument_list|()
expr_stmt|;
block|}
block|}
block|}
comment|// Handle hardcoded keys (including F-keys)
switch|switch
condition|(
name|Keyboard
operator|.
name|getEventKey
argument_list|()
condition|)
block|{
case|case
name|Keyboard
operator|.
name|KEY_F1
case|:
name|canRenderGUI
operator|=
operator|!
name|canRenderGUI
expr_stmt|;
break|break;
case|case
name|Keyboard
operator|.
name|KEY_F2
case|:
name|takeAndSaveScreenshot
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
break|break;
case|case
name|Keyboard
operator|.
name|KEY_F3
case|:
name|settings
operator|.
name|showDebug
operator|=
operator|!
name|settings
operator|.
name|showDebug
expr_stmt|;
break|break;
case|case
name|Keyboard
operator|.
name|KEY_F4
case|:
name|isSnowing
operator|=
operator|!
name|isSnowing
expr_stmt|;
name|isRaining
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|Keyboard
operator|.
name|KEY_F5
case|:
name|isRaining
operator|=
operator|!
name|isRaining
expr_stmt|;
name|isSnowing
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|Keyboard
operator|.
name|KEY_F6
case|:
if|if
condition|(
name|HackState
operator|.
name|noclip
condition|)
block|{
operator|++
name|settings
operator|.
name|thirdPersonMode
expr_stmt|;
if|if
condition|(
name|settings
operator|.
name|thirdPersonMode
operator|>
literal|2
condition|)
block|{
name|settings
operator|.
name|thirdPersonMode
operator|=
literal|0
expr_stmt|;
block|}
block|}
break|break;
case|case
name|Keyboard
operator|.
name|KEY_F11
case|:
name|toggleFullscreen
argument_list|()
expr_stmt|;
break|break;
case|case
name|Keyboard
operator|.
name|KEY_SLASH
case|:
name|player
operator|.
name|releaseAllKeys
argument_list|()
expr_stmt|;
name|ChatInputScreen
name|s
init|=
operator|new
name|ChatInputScreen
argument_list|()
decl_stmt|;
name|setCurrentScreen
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|s
operator|.
name|inputLine
operator|=
literal|"/"
expr_stmt|;
name|s
operator|.
name|caretPos
operator|++
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|settings
operator|.
name|HacksEnabled
condition|)
block|{
comment|// Check for hack toggle keys
if|if
condition|(
name|settings
operator|.
name|HackType
operator|==
literal|0
condition|)
block|{
if|if
condition|(
name|Keyboard
operator|.
name|getEventKey
argument_list|()
operator|==
name|settings
operator|.
name|noClip
operator|.
name|key
condition|)
block|{
if|if
condition|(
name|HackState
operator|.
name|noclip
operator|||
name|HackState
operator|.
name|noclip
operator|&&
name|player
operator|.
name|userType
operator|>=
literal|100
condition|)
block|{
name|player
operator|.
name|noPhysics
operator|=
operator|!
name|player
operator|.
name|noPhysics
expr_stmt|;
name|player
operator|.
name|hovered
operator|=
operator|!
name|player
operator|.
name|hovered
expr_stmt|;
block|}
block|}
if|if
condition|(
name|Keyboard
operator|.
name|getEventKey
argument_list|()
operator|==
name|Keyboard
operator|.
name|KEY_Z
condition|)
block|{
if|if
condition|(
name|HackState
operator|.
name|fly
condition|)
block|{
name|player
operator|.
name|flyingMode
operator|=
operator|!
name|player
operator|.
name|flyingMode
expr_stmt|;
block|}
block|}
block|}
block|}
else|else
block|{
name|player
operator|.
name|flyingMode
operator|=
literal|false
expr_stmt|;
name|player
operator|.
name|noPhysics
operator|=
literal|false
expr_stmt|;
name|player
operator|.
name|hovered
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|Keyboard
operator|.
name|getEventKey
argument_list|()
operator|==
name|Keyboard
operator|.
name|KEY_TAB
operator|&&
name|isSurvival
argument_list|()
operator|&&
name|player
operator|.
name|arrows
operator|>
literal|0
condition|)
block|{
comment|// Shoot arrows (survival)
name|level
operator|.
name|addEntity
argument_list|(
operator|new
name|Arrow
argument_list|(
name|level
argument_list|,
name|player
argument_list|,
name|player
operator|.
name|x
argument_list|,
name|player
operator|.
name|y
argument_list|,
name|player
operator|.
name|z
argument_list|,
name|player
operator|.
name|yRot
argument_list|,
name|player
operator|.
name|xRot
argument_list|,
literal|1.2F
argument_list|)
argument_list|)
expr_stmt|;
operator|--
name|player
operator|.
name|arrows
expr_stmt|;
block|}
if|if
condition|(
name|Keyboard
operator|.
name|getEventKey
argument_list|()
operator|==
name|settings
operator|.
name|inventoryKey
operator|.
name|key
condition|)
block|{
name|gamemode
operator|.
name|openInventory
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|Keyboard
operator|.
name|getEventKey
argument_list|()
operator|==
name|settings
operator|.
name|chatKey
operator|.
name|key
condition|)
block|{
name|player
operator|.
name|releaseAllKeys
argument_list|()
expr_stmt|;
name|setCurrentScreen
argument_list|(
operator|new
name|ChatInputScreen
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|9
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|Keyboard
operator|.
name|getEventKey
argument_list|()
operator|==
name|i
operator|+
literal|2
condition|)
block|{
if|if
condition|(
name|Keyboard
operator|.
name|isKeyDown
argument_list|(
name|Keyboard
operator|.
name|KEY_TAB
argument_list|)
condition|)
block|{
comment|// tabbing player list
return|return;
block|}
if|else if
condition|(
name|GameSettings
operator|.
name|CanReplaceSlot
condition|)
block|{
name|player
operator|.
name|inventory
operator|.
name|selected
operator|=
name|i
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|Keyboard
operator|.
name|getEventKey
argument_list|()
operator|==
name|settings
operator|.
name|toggleFogKey
operator|.
name|key
condition|)
block|{
name|boolean
name|shiftDown
init|=
name|Keyboard
operator|.
name|isKeyDown
argument_list|(
name|Keyboard
operator|.
name|KEY_LSHIFT
argument_list|)
operator|||
name|Keyboard
operator|.
name|isKeyDown
argument_list|(
name|Keyboard
operator|.
name|KEY_RSHIFT
argument_list|)
decl_stmt|;
name|settings
operator|.
name|toggleSetting
argument_list|(
name|Setting
operator|.
name|RENDER_DISTANCE
argument_list|,
name|shiftDown
condition|?
operator|-
literal|1
else|:
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|currentScreen
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|Mouse
operator|.
name|isButtonDown
argument_list|(
name|MB_LEFT
argument_list|)
operator|&&
name|ticks
operator|-
name|lastClick
operator|>=
name|timer
operator|.
name|tps
operator|/
literal|4F
operator|&&
name|hasMouse
condition|)
block|{
name|onMouseClick
argument_list|(
name|MB_LEFT
argument_list|)
expr_stmt|;
name|lastClick
operator|=
name|ticks
expr_stmt|;
block|}
if|if
condition|(
name|Mouse
operator|.
name|isButtonDown
argument_list|(
name|MB_RIGHT
argument_list|)
operator|&&
name|ticks
operator|-
name|lastClick
operator|>=
name|timer
operator|.
name|tps
operator|/
literal|4F
operator|&&
name|hasMouse
condition|)
block|{
name|onMouseClick
argument_list|(
name|MB_RIGHT
argument_list|)
expr_stmt|;
name|lastClick
operator|=
name|ticks
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|gamemode
operator|.
name|instantBreak
operator|&&
name|punchingCooldown
operator|<=
literal|0
condition|)
block|{
comment|// survival: slow block-breaking
if|if
condition|(
operator|(
name|currentScreen
operator|==
literal|null
operator|)
operator|&&
name|Mouse
operator|.
name|isButtonDown
argument_list|(
name|MB_LEFT
argument_list|)
operator|&&
name|hasMouse
operator|&&
name|selected
operator|!=
literal|null
operator|&&
operator|!
name|selected
operator|.
name|hasEntity
condition|)
block|{
name|gamemode
operator|.
name|hitBlock
argument_list|(
name|selected
operator|.
name|x
argument_list|,
name|selected
operator|.
name|y
argument_list|,
name|selected
operator|.
name|z
argument_list|,
name|selected
operator|.
name|face
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|gamemode
operator|.
name|resetHits
argument_list|()
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|currentScreen
operator|!=
literal|null
condition|)
block|{
name|lastClick
operator|=
name|ticks
operator|+
literal|10000
expr_stmt|;
block|}
if|if
condition|(
name|currentScreen
operator|!=
literal|null
condition|)
block|{
name|currentScreen
operator|.
name|doInput
argument_list|()
expr_stmt|;
if|if
condition|(
name|currentScreen
operator|!=
literal|null
condition|)
block|{
name|currentScreen
operator|.
name|tick
argument_list|()
expr_stmt|;
block|}
block|}
block|}
comment|/**      * Toggles FullScreen on or off.      */
specifier|public
name|void
name|toggleFullscreen
parameter_list|()
block|{
try|try
block|{
name|isFullScreen
operator|=
operator|!
name|isFullScreen
expr_stmt|;
if|if
condition|(
name|isFullScreen
condition|)
block|{
name|setDisplayMode
argument_list|()
expr_stmt|;
name|width
operator|=
name|Display
operator|.
name|getDisplayMode
argument_list|()
operator|.
name|getWidth
argument_list|()
expr_stmt|;
name|height
operator|=
name|Display
operator|.
name|getDisplayMode
argument_list|()
operator|.
name|getHeight
argument_list|()
expr_stmt|;
if|if
condition|(
name|width
operator|<=
literal|0
condition|)
block|{
name|width
operator|=
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|height
operator|<=
literal|0
condition|)
block|{
name|height
operator|=
literal|1
expr_stmt|;
block|}
block|}
else|else
block|{
name|Display
operator|.
name|setDisplayMode
argument_list|(
operator|new
name|DisplayMode
argument_list|(
name|tempDisplayWidth
argument_list|,
name|tempDisplayHeight
argument_list|)
argument_list|)
expr_stmt|;
name|width
operator|=
name|tempDisplayWidth
expr_stmt|;
name|height
operator|=
name|tempDisplayHeight
expr_stmt|;
if|if
condition|(
name|width
operator|<=
literal|0
condition|)
block|{
name|width
operator|=
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|height
operator|<=
literal|0
condition|)
block|{
name|height
operator|=
literal|1
expr_stmt|;
block|}
block|}
name|resize
argument_list|()
expr_stmt|;
name|Display
operator|.
name|setFullscreen
argument_list|(
name|isFullScreen
argument_list|)
expr_stmt|;
name|Display
operator|.
name|setVSyncEnabled
argument_list|(
name|settings
operator|.
name|limitFramerate
argument_list|)
expr_stmt|;
name|Display
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LogUtil
operator|.
name|logWarning
argument_list|(
literal|"Error toggling fullscreen "
operator|+
operator|(
name|isFullScreen
condition|?
literal|"ON"
else|:
literal|"OFF"
operator|)
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

