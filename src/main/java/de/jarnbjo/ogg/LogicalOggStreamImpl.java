begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * $ProjectName$  * $ProjectRevision$  * -----------------------------------------------------------  * $Id: LogicalOggStreamImpl.java,v 1.3 2003/03/31 00:23:04 jarnbjo Exp $  * -----------------------------------------------------------  *  * $Author: jarnbjo $  *  * Description:  *  * Copyright 2002-2003 Tor-Einar Jarnbjo  * -----------------------------------------------------------  *  * Change History  * -----------------------------------------------------------  * $Log: LogicalOggStreamImpl.java,v $  * Revision 1.3  2003/03/31 00:23:04  jarnbjo  * no message  *  * Revision 1.2  2003/03/16 01:11:26  jarnbjo  * no message  *  * Revision 1.1  2003/03/03 21:02:20  jarnbjo  * no message  *  */
end_comment

begin_package
package|package
name|de
operator|.
name|jarnbjo
operator|.
name|ogg
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|LogicalOggStreamImpl
implements|implements
name|LogicalOggStream
block|{
specifier|private
name|PhysicalOggStream
name|source
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|Integer
argument_list|>
name|pageNumberMapping
init|=
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|Long
argument_list|>
name|granulePositions
init|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|int
name|pageIndex
init|=
literal|0
decl_stmt|;
specifier|private
name|OggPage
name|currentPage
decl_stmt|;
specifier|private
name|int
name|currentSegmentIndex
decl_stmt|;
specifier|private
name|boolean
name|open
init|=
literal|true
decl_stmt|;
specifier|private
name|String
name|format
init|=
name|FORMAT_UNKNOWN
decl_stmt|;
specifier|public
name|LogicalOggStreamImpl
parameter_list|(
name|PhysicalOggStream
name|source
parameter_list|)
block|{
name|this
operator|.
name|source
operator|=
name|source
expr_stmt|;
block|}
specifier|public
name|void
name|addGranulePosition
parameter_list|(
name|long
name|granulePosition
parameter_list|)
block|{
name|granulePositions
operator|.
name|add
argument_list|(
operator|new
name|Long
argument_list|(
name|granulePosition
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addPageNumberMapping
parameter_list|(
name|int
name|physicalPageNumber
parameter_list|)
block|{
name|pageNumberMapping
operator|.
name|add
argument_list|(
operator|new
name|Integer
argument_list|(
name|physicalPageNumber
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|checkFormat
parameter_list|(
name|OggPage
name|page
parameter_list|)
block|{
name|byte
index|[]
name|data
init|=
name|page
operator|.
name|getData
argument_list|()
decl_stmt|;
if|if
condition|(
name|data
operator|.
name|length
operator|>=
literal|7
operator|&&
name|data
index|[
literal|1
index|]
operator|==
literal|0x76
operator|&&
name|data
index|[
literal|2
index|]
operator|==
literal|0x6f
operator|&&
name|data
index|[
literal|3
index|]
operator|==
literal|0x72
operator|&&
name|data
index|[
literal|4
index|]
operator|==
literal|0x62
operator|&&
name|data
index|[
literal|5
index|]
operator|==
literal|0x69
operator|&&
name|data
index|[
literal|6
index|]
operator|==
literal|0x73
condition|)
block|{
name|format
operator|=
name|FORMAT_VORBIS
expr_stmt|;
block|}
if|else if
condition|(
name|data
operator|.
name|length
operator|>=
literal|7
operator|&&
name|data
index|[
literal|1
index|]
operator|==
literal|0x74
operator|&&
name|data
index|[
literal|2
index|]
operator|==
literal|0x68
operator|&&
name|data
index|[
literal|3
index|]
operator|==
literal|0x65
operator|&&
name|data
index|[
literal|4
index|]
operator|==
literal|0x6f
operator|&&
name|data
index|[
literal|5
index|]
operator|==
literal|0x72
operator|&&
name|data
index|[
literal|6
index|]
operator|==
literal|0x61
condition|)
block|{
name|format
operator|=
name|FORMAT_THEORA
expr_stmt|;
block|}
if|else if
condition|(
name|data
operator|.
name|length
operator|==
literal|4
operator|&&
name|data
index|[
literal|0
index|]
operator|==
literal|0x66
operator|&&
name|data
index|[
literal|1
index|]
operator|==
literal|0x4c
operator|&&
name|data
index|[
literal|2
index|]
operator|==
literal|0x61
operator|&&
name|data
index|[
literal|3
index|]
operator|==
literal|0x43
condition|)
block|{
name|format
operator|=
name|FORMAT_FLAC
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|open
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|String
name|getFormat
parameter_list|()
block|{
return|return
name|format
return|;
block|}
specifier|public
name|long
name|getMaximumGranulePosition
parameter_list|()
block|{
name|Long
name|mgp
init|=
operator|(
name|Long
operator|)
name|granulePositions
operator|.
name|get
argument_list|(
name|granulePositions
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
return|return
name|mgp
operator|.
name|longValue
argument_list|()
return|;
block|}
specifier|public
specifier|synchronized
name|byte
index|[]
name|getNextOggPacket
parameter_list|()
throws|throws
name|EndOfOggStreamException
throws|,
name|OggFormatException
throws|,
name|IOException
block|{
name|ByteArrayOutputStream
name|res
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|int
name|segmentLength
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|currentPage
operator|==
literal|null
condition|)
block|{
name|currentPage
operator|=
name|getNextOggPage
argument_list|()
expr_stmt|;
block|}
do|do
block|{
if|if
condition|(
name|currentSegmentIndex
operator|>=
name|currentPage
operator|.
name|getSegmentOffsets
argument_list|()
operator|.
name|length
condition|)
block|{
name|currentSegmentIndex
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|!
name|currentPage
operator|.
name|isEos
argument_list|()
condition|)
block|{
if|if
condition|(
name|source
operator|.
name|isSeekable
argument_list|()
operator|&&
name|pageNumberMapping
operator|.
name|size
argument_list|()
operator|<=
name|pageIndex
condition|)
block|{
while|while
condition|(
name|pageNumberMapping
operator|.
name|size
argument_list|()
operator|<=
name|pageIndex
operator|+
literal|10
condition|)
block|{
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|ex
parameter_list|)
block|{
block|}
block|}
block|}
name|currentPage
operator|=
name|getNextOggPage
argument_list|()
expr_stmt|;
if|if
condition|(
name|res
operator|.
name|size
argument_list|()
operator|==
literal|0
operator|&&
name|currentPage
operator|.
name|isContinued
argument_list|()
condition|)
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
if|if
condition|(
name|currentPage
operator|.
name|getSegmentLengths
argument_list|()
index|[
name|currentSegmentIndex
operator|++
index|]
operator|!=
literal|255
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|currentSegmentIndex
operator|>
name|currentPage
operator|.
name|getSegmentTable
argument_list|()
operator|.
name|length
condition|)
block|{
name|currentPage
operator|=
name|source
operator|.
name|getOggPage
argument_list|(
operator|(
operator|(
name|Integer
operator|)
name|pageNumberMapping
operator|.
name|get
argument_list|(
name|pageIndex
operator|++
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
else|else
block|{
throw|throw
operator|new
name|EndOfOggStreamException
argument_list|()
throw|;
block|}
block|}
name|segmentLength
operator|=
name|currentPage
operator|.
name|getSegmentLengths
argument_list|()
index|[
name|currentSegmentIndex
index|]
expr_stmt|;
name|res
operator|.
name|write
argument_list|(
name|currentPage
operator|.
name|getData
argument_list|()
argument_list|,
name|currentPage
operator|.
name|getSegmentOffsets
argument_list|()
index|[
name|currentSegmentIndex
index|]
argument_list|,
name|segmentLength
argument_list|)
expr_stmt|;
name|currentSegmentIndex
operator|++
expr_stmt|;
block|}
do|while
condition|(
name|segmentLength
operator|==
literal|255
condition|)
do|;
return|return
name|res
operator|.
name|toByteArray
argument_list|()
return|;
block|}
specifier|public
specifier|synchronized
name|OggPage
name|getNextOggPage
parameter_list|()
throws|throws
name|EndOfOggStreamException
throws|,
name|OggFormatException
throws|,
name|IOException
block|{
if|if
condition|(
name|source
operator|.
name|isSeekable
argument_list|()
condition|)
block|{
name|currentPage
operator|=
name|source
operator|.
name|getOggPage
argument_list|(
operator|(
operator|(
name|Integer
operator|)
name|pageNumberMapping
operator|.
name|get
argument_list|(
name|pageIndex
operator|++
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|currentPage
operator|=
name|source
operator|.
name|getOggPage
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
return|return
name|currentPage
return|;
block|}
specifier|public
specifier|synchronized
name|long
name|getTime
parameter_list|()
block|{
return|return
name|currentPage
operator|!=
literal|null
condition|?
name|currentPage
operator|.
name|getAbsoluteGranulePosition
argument_list|()
else|:
operator|-
literal|1
return|;
block|}
specifier|public
name|boolean
name|isOpen
parameter_list|()
block|{
return|return
name|open
return|;
block|}
specifier|public
specifier|synchronized
name|void
name|reset
parameter_list|()
throws|throws
name|OggFormatException
throws|,
name|IOException
block|{
name|currentPage
operator|=
literal|null
expr_stmt|;
name|currentSegmentIndex
operator|=
literal|0
expr_stmt|;
name|pageIndex
operator|=
literal|0
expr_stmt|;
block|}
specifier|public
specifier|synchronized
name|void
name|setTime
parameter_list|(
name|long
name|granulePosition
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|page
init|=
literal|0
decl_stmt|;
for|for
control|(
name|page
operator|=
literal|0
init|;
name|page
operator|<
name|granulePositions
operator|.
name|size
argument_list|()
condition|;
name|page
operator|++
control|)
block|{
name|Long
name|gp
init|=
operator|(
name|Long
operator|)
name|granulePositions
operator|.
name|get
argument_list|(
name|page
argument_list|)
decl_stmt|;
if|if
condition|(
name|gp
operator|.
name|longValue
argument_list|()
operator|>
name|granulePosition
condition|)
block|{
break|break;
block|}
block|}
name|pageIndex
operator|=
name|page
expr_stmt|;
name|currentPage
operator|=
name|source
operator|.
name|getOggPage
argument_list|(
operator|(
operator|(
name|Integer
operator|)
name|pageNumberMapping
operator|.
name|get
argument_list|(
name|pageIndex
operator|++
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|currentSegmentIndex
operator|=
literal|0
expr_stmt|;
name|int
name|segmentLength
init|=
literal|0
decl_stmt|;
do|do
block|{
if|if
condition|(
name|currentSegmentIndex
operator|>=
name|currentPage
operator|.
name|getSegmentOffsets
argument_list|()
operator|.
name|length
condition|)
block|{
name|currentSegmentIndex
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|pageIndex
operator|>=
name|pageNumberMapping
operator|.
name|size
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|EndOfOggStreamException
argument_list|()
throw|;
block|}
name|currentPage
operator|=
name|source
operator|.
name|getOggPage
argument_list|(
operator|(
operator|(
name|Integer
operator|)
name|pageNumberMapping
operator|.
name|get
argument_list|(
name|pageIndex
operator|++
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|segmentLength
operator|=
name|currentPage
operator|.
name|getSegmentLengths
argument_list|()
index|[
name|currentSegmentIndex
index|]
expr_stmt|;
name|currentSegmentIndex
operator|++
expr_stmt|;
block|}
do|while
condition|(
name|segmentLength
operator|==
literal|255
condition|)
do|;
block|}
block|}
end_class

end_unit

