begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * $ProjectName$  * $ProjectRevision$  * -----------------------------------------------------------  * $Id: Mapping.java,v 1.2 2003/03/16 01:11:12 jarnbjo Exp $  * -----------------------------------------------------------  *  * $Author: jarnbjo $  *  * Description:  *  * Copyright 2002-2003 Tor-Einar Jarnbjo  * -----------------------------------------------------------  *  * Change History  * -----------------------------------------------------------  * $Log: Mapping.java,v $  * Revision 1.2  2003/03/16 01:11:12  jarnbjo  * no message  *  *  */
end_comment

begin_package
package|package
name|de
operator|.
name|jarnbjo
operator|.
name|vorbis
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|de
operator|.
name|jarnbjo
operator|.
name|util
operator|.
name|io
operator|.
name|BitInputStream
import|;
end_import

begin_class
specifier|abstract
class|class
name|Mapping
block|{
specifier|protected
specifier|static
name|Mapping
name|createInstance
parameter_list|(
name|VorbisStream
name|vorbis
parameter_list|,
name|BitInputStream
name|source
parameter_list|,
name|SetupHeader
name|header
parameter_list|)
throws|throws
name|VorbisFormatException
throws|,
name|IOException
block|{
name|int
name|type
init|=
name|source
operator|.
name|getInt
argument_list|(
literal|16
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|type
condition|)
block|{
case|case
literal|0
case|:
comment|//System.out.println("mapping type 0");
return|return
operator|new
name|Mapping0
argument_list|(
name|vorbis
argument_list|,
name|source
argument_list|,
name|header
argument_list|)
return|;
default|default:
throw|throw
operator|new
name|VorbisFormatException
argument_list|(
literal|"Mapping type "
operator|+
name|type
operator|+
literal|" is not supported."
argument_list|)
throw|;
block|}
block|}
specifier|protected
specifier|abstract
name|int
name|getType
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|int
index|[]
name|getAngles
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|int
index|[]
name|getMagnitudes
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|int
index|[]
name|getMux
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|int
index|[]
name|getSubmapFloors
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|int
index|[]
name|getSubmapResidues
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|int
name|getCouplingSteps
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|int
name|getSubmaps
parameter_list|()
function_decl|;
block|}
end_class

end_unit

