begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|de
operator|.
name|jarnbjo
operator|.
name|util
operator|.
name|audio
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sound
operator|.
name|sampled
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|FadeableAudioInputStream
extends|extends
name|AudioInputStream
block|{
specifier|private
name|boolean
name|fading
init|=
literal|false
decl_stmt|;
specifier|private
name|double
name|phi
init|=
literal|0.0
decl_stmt|;
specifier|public
name|FadeableAudioInputStream
parameter_list|(
name|AudioInputStream
name|stream
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|stream
argument_list|,
name|stream
operator|.
name|getFormat
argument_list|()
argument_list|,
operator|-
literal|1L
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|fadeOut
parameter_list|()
block|{
name|fading
operator|=
literal|true
expr_stmt|;
name|phi
operator|=
literal|0.0
expr_stmt|;
block|}
specifier|public
name|int
name|read
parameter_list|(
name|byte
index|[]
name|b
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|read
argument_list|(
name|b
argument_list|,
literal|0
argument_list|,
name|b
operator|.
name|length
argument_list|)
return|;
block|}
specifier|public
name|int
name|read
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|read
init|=
name|super
operator|.
name|read
argument_list|(
name|b
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
decl_stmt|;
comment|// System.out.println("read "+read);
if|if
condition|(
name|fading
condition|)
block|{
name|int
name|j
init|=
literal|0
decl_stmt|,
name|l
init|=
literal|0
decl_stmt|,
name|r
init|=
literal|0
decl_stmt|;
name|double
name|gain
init|=
literal|0.0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|offset
init|;
name|i
operator|<
name|offset
operator|+
name|read
condition|;
name|i
operator|+=
literal|4
control|)
block|{
name|j
operator|=
name|i
expr_stmt|;
name|l
operator|=
operator|(
operator|(
name|int
operator|)
name|b
index|[
name|j
operator|++
index|]
operator|)
operator|&
literal|0xff
expr_stmt|;
name|l
operator||=
operator|(
operator|(
name|int
operator|)
name|b
index|[
name|j
operator|++
index|]
operator|)
operator|<<
literal|8
expr_stmt|;
name|r
operator|=
operator|(
operator|(
name|int
operator|)
name|b
index|[
name|j
operator|++
index|]
operator|)
operator|&
literal|0xff
expr_stmt|;
name|r
operator||=
operator|(
operator|(
name|int
operator|)
name|b
index|[
name|j
index|]
operator|)
operator|<<
literal|8
expr_stmt|;
if|if
condition|(
name|phi
operator|<
name|Math
operator|.
name|PI
operator|/
literal|2
condition|)
block|{
name|phi
operator|+=
literal|0.000015
expr_stmt|;
block|}
name|gain
operator|=
name|Math
operator|.
name|cos
argument_list|(
name|phi
argument_list|)
expr_stmt|;
comment|// System.out.println("gain "+gain);
name|l
operator|=
operator|(
name|int
operator|)
operator|(
name|l
operator|*
name|gain
operator|)
expr_stmt|;
name|r
operator|=
operator|(
name|int
operator|)
operator|(
name|r
operator|*
name|gain
operator|)
expr_stmt|;
name|j
operator|=
name|i
expr_stmt|;
name|b
index|[
name|j
operator|++
index|]
operator|=
operator|(
name|byte
operator|)
operator|(
name|l
operator|&
literal|0xff
operator|)
expr_stmt|;
name|b
index|[
name|j
operator|++
index|]
operator|=
operator|(
name|byte
operator|)
operator|(
operator|(
name|l
operator|>>
literal|8
operator|)
operator|&
literal|0xff
operator|)
expr_stmt|;
name|b
index|[
name|j
operator|++
index|]
operator|=
operator|(
name|byte
operator|)
operator|(
name|r
operator|&
literal|0xff
operator|)
expr_stmt|;
name|b
index|[
name|j
operator|++
index|]
operator|=
operator|(
name|byte
operator|)
operator|(
operator|(
name|r
operator|>>
literal|8
operator|)
operator|&
literal|0xff
operator|)
expr_stmt|;
block|}
block|}
return|return
name|read
return|;
block|}
block|}
end_class

end_unit

